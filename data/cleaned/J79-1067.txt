American Journal of Comprttationd Lin~tticr Microfjchc $7 A GOAL-ORIENTED MODEL OF N DALOGE Jms A.
Moore James; A* hsvin Wittiam C.
Maw USCflnf ormation Scicncc~ lnclitde 4676 Admiralty Way Marina del Rey, Cdifornia 9029 1 Thc research reported hereto was gupporlrd by the Porronnel md Tra,in,trtg P~tr:lrr 11 Programo of thc Olfica of Navel R~crnch, Contrltl N00014-75-C07 IQ, undr~ ~P!@A Ordcr Number 2930 from tho Cybarml,~, Tcchnclogy Qff~~cc cf th.
~dv~ncrd P~i~rartbt Projecto Agency.
A Modcl of Dialogue SUMMARY Within a view of ianguagc users as problem solvers, speakers arc seen as creating uttcrsnccs in pursuit of thcir own goals.
Dialogue "works" because this activity tends to scrvc goals of both pparticipants.,k Hcncc, for the model of dialogue cornprchcnsion prcscnted here, rccognifion of these goals of the speaker is central to the comprehension 4" of dialo~uc, Wc have found that dialogues arc conrposud of structured interactions rcpresanted by collections of knowledge which dcscri be the intcrrelatcd goals of the participants.
We call thcsc knawlcd~c structures "Dialogue-games" (DGg).
This paper describes DGs in gcncral, a particular one (the Hclping-DG) in some detail, how OGs are used by our Dialog~c-game Model (DGM), and the benefits of this model.
A DG consists of three parts: the Parameters (the two roles fillcd by thc participants, and the topic), the Pnramcter Spccifications (a set of predicates on the Pararndcrs), and the Components (a sequcncc of goals hgld by the participants in the course of the dialogue).
For cxample, in the Helping-DG, the Parameters are HELPER, HELPEE (the rolcs) and TASK (the topic).
The Spccifications are: 1) The HELPEE wants to pertorm the TASK: 2) thc HELPEE wants to bc a6/e to do it but 3) the HELPEE is not able to.
4) The ILELPER wants to enable the HELPEE to do the TASK and 5) the HELPER is ab/e to provide this help.
The Componcntr specify that 1) the HELPEE wants to establish a context by describing a collection of unexceptional events (a parlial performance of the TASK): 2) he also wants to dcscribc some sort of unresirable surprise: then 3) the.
I-IELPER wants to cxplain the violation of expectation so that the HELPEE can avoid it a'nd get on with the TASK.
The DGM makes use of DGs in fiue stages of processing: Nomination, Recognition, Instantiation, Conduct and Termination.
Thc DGM models each participant's knowlcd,ge, goal and attention states.
A mcchanisrn adds to the attention state, cmcepts "suggested" by those already in attention.
Whcn a hearer sees himself or his partner as potentially filling a role in a DG(by fulfilling one or more demands of the DG's Specifications) then that DG is brought into attention (Nominated), DGs can bc nominated by weak evidence: Recognition is the step of verifying that these DGs arc plausibly consistent with the currcnt state of the model.
Thosa which arc not are eliminated from attention.
A Model of Dialogue DGs which survive Lhc Recognition stagp arc Instantiated by asserting (as assumptions) all the Specifications not ye1 rcprcscnicd as holding.
For example, when a person says "Do you have a match?", instantiation, by the hcarer (of the-~ction-sck DG) dcrivcs asscrtionr; that thc speaker does not have a match and wants the hcarer to give him one, The Conduct of ihc DG is rnodclcd by tracking the pursuit and fulfillment of the participants' goals as rcprescntcd in the Components.
Whcn tho DGM dctcpls that onc parlicipant no longer regards a Specification as holding, this crcatcs an cxpcctation of the Termination of this phase of the dialogue--there is no longer a possibility that it will serve both participants' goals, Thc appendix contains a detailed hand-simulation of the DGM assimilating a scgrncnt of a dialogue.
A Modcl of Dialogue CONTENTS 2.
St~tcrrrcnt of thc Problam 3.
Post Rcscarch on Language Comprchcnsion 4.
Thc Shopc of Ihc Thcory 5.
Thc Dialogue-came Modcl 5,l What's in a Game? 5.1.1 Paramctcrs 5.1.2 Paramctcr Specifications 5.1.3 Components 5.1.4 Bidding and Accepting 5.2 The Helping-gamc, an Examplc 5.3 Dialogue-gamcs in the Comprchcnsi~n cf Cialcd~e 5.3.1 Proccssine Environment 5.3.2 Nomination 5.3.3 Rccogni tion 53.4 Instantiation A Modol of Dialogue 5.3.5 Condtrct 5.3.6 Tcrmination 5.4 The Dialogue-game Proccsscs 5.4.1 Long-term Memory (LTM) 5.4.2 Workspace (WS) 5.4.3 Parser 5.4.4 Protcus 5.4.5 Match 5.4.6 Deduce 5.4.7 Dialogue-game Manager 5.4.8 Pronoun Processes 6.
Deficiencies in Current Man-machine Communication Appendix -Sirnulslion of the Uiaip~;ue-l;nmu Model A Modcl of Dialogue STATEMENT OF THE PROBLEM Thc broadest goal of our research has been to improve the sorry state of interactive man-machine communication, including its appearance of complexity, rigidity, lack of continuity and the difficulty it poses for many people to acquire useful levels of cornpctcnce.
In our pursuit of this goal, we have adopted-the following two assumptions: Assumption L: When pcople communicate with machines, they do so by using their already well-dcvelopcd ability to communicate with other people.
Assumption 2: The effectiveness of this communication is diminished by any adaptation required of the human.
A scientific understanding of how people cvmmunicate is thus relevant to the design of man-machine communication schemes, but suchknowledge is seldom used in the design process.
Since human communication skills have not been characterized at a level of clctsil appropriate for guiding design, interface designers have not been able to take into account some major determinants of their succcss.
The opcrativc goal of our research was therefore to creatd a mode/ of human communicafion at an appropriate level of detail to benefit man-machine communication design.
Any form of communication must be based on,knowledge shared by the individuals engazed in that communication.
However, the nature of this shared knowladgs and how is it uscd in the communicative process have not been well undcrstood.
We have developed a working hypothesis which has deeply affected the r-csearch: Hypothesis: People know that certain kinds of goals may be pursued by communication, and they know which kinds of communication acts correspond to which goals.
Tho use of this knowledge is essential to comprehending dialogue.
In particular, a pcrson generates an utterance to advance one or more of his own goals.
Thus, to assimilate a particular utterance, it is necessary to identify why the person said i't.
Working with this hypothesis, we have conducted three related investigations: A Model of Dialogue.
1. A study of naturally occurring language to discover regularities of usage and to determine what these regularities mean lo the users of the language.
2. The representation of there regularities as knowledge structures and processes in a dialogue model.
3. The establishment of standards by which the model's performance can be compared with that of humans on closely related tasks.
We have adopted two additional, tactical constraints on the task: 1.
We have modeled only the receptive aspects of communication.
2. Wc-have examined only dialquc communication, interaction in real-time, by exactly two people.
These dialogues were conducted over a rcsttictcd medium so ihat there was no visual or intonational communication not captured in thc tr~nscript.
A ~odcl of Dialogue PAST RESEARCH ON LANGUAGE COMPREHENSION Most of the research jnto language comprehension has focused on the comprchcnsion of single sentences or fragments of sentences.
However some research has indicated the importance of the context created by surrounding sentences on the comprchcnsion of an individual sentence.
One specific model for the form of this multi-scntcntial knowledge is the "story schema", organized within a story grammar (Rurnclhart, 1975).
This model has been supportbd' by the results 6f story recalls (Rumcl hart, 1975: Thorndyke, 1977).
Other similar kinds of theoretical constructs for organizing multiple srntcnces of stories have been proposed called: "frames" (Minsky, 1975: Charniak, 1975), "scripts" (Schank Q Abelson, 1975), and "commonsense algorithms" (Ricgcr, 1975).
To account for the conduct and comprchcnsion of dialogues, mu1 ti-scntcntial knowlcdgc units have also bccn proposed by linguists and sociolinguists to explain certain kinds of rcgul ari tics observed in naturally occurring dialogues.
These rcgularitics have bccn called "rules" by Labov & Fanshel (19.74) and "sequences" by Sacks, Schagloff, & Jefferson (1974).
Once these multi-scntential knowledge units are evoked, they serve as a basis for comprehending the~successive inputs.
This is achieved by generating expectations and by providing a framework for integrating the comprehcnsion of an utterance with that of its prcdcccssors.
Recently, we have propased (Leuin & Moore, 1976: 1977, Mann, Moorc Rr Lcvin, 1977) multi-scntential knowledge units that are specified primarily by the speaker's and hcarcr's goals.
Thcsc goal-oriented units, which we call Dialogue-gsmcs[l], specify the kinds of language interactions in which people engage, rathcr than the spccific content of thcsc intcractions.
Pcoplc use langua~c primarily to comrnunicatc with other pcoplc lo achieve their own goals.
Thc Dialoguc-game mu1 ti-scntontial structures wcrc dcvcloped to represent this knowledge about language and how it can be uscd to achicve goals.
-[I] Thc term "Oialoguc-game" was adopted by analogy from Wittgcnstcin's term 'Yan~uagc game" (~itt~cnstcin, 19 8).
a Howcvcr, Dialogue-games reprcs6ht knowlcdgo ?= pcoplc hive dbout language as uscd to purGuo goals, rathcr than Wittgcnrtcin's mop ~cncral.
notion. Althoueh other "game-".
arc similar, thc propcrtios of.Dia)ofiuo-,gornes arc only thooo dcscribod here.
For example, thoy aro not nacoroarify cornpctitivc, consciouily pursued, or zcro-sum.
A Model of Dialogue An important problem for rcscarchcrs of language comprehension is posed by scntences with which tho speaker performs what philosophers of language have called "indirect spccch acts" (Searle, 1969).
The direct comprehension of these sentences fails to derive the main communicative~effcct.
For example, declarative scntenccs can be used to seek information ("1 nced to know your Social Security number."): questions can be u-scd to convey information ("Did you know that John and Harriet got married")? or to request an action ("Could you pass the salt?'').
These kinds of utterances, which have bccn extensively analyzed by philosophers of language (Austin, 1962: Searle, 196 9, 1975: Grice, 1975), are not handled satisfactorily by any of the current theories of the dircct comprchcnsion of language.
However, these indirect language usages ara widespread in naturally occurring language--even two-year-old children can comprehend indirect requests for action almost as well as dircct requests (Shatz, 1975).
One theory proposcd to account for these indirect uses of language is based on the concept of "convcrsotional postulates" (Grice, 1975: Gordon Q Lakoff, 197 1).
If the dircct comprchcnsion of an utterance is implausible, then the indirect meaning is derived using these postulates.
Clark & Lucy (1 975) formalized and tested this model, and found that people's rasponse times tend to support a three-stage model (deriving the literal mcaning, check its plausibility and, if implausible, dcriving the "intended" meaning" from convcrsational rules).
In general, this approach to indired speech acts is infc~ence-bascd, depending on the application of conversational rules to infer the indirect meaning from the dircct mcaning and the context.
A different approach has been proposcd by Lsbov~fiFans~cl (1 974) and by Levin & Moore (1976: 1977).
Multi-sentential knowledge, organizing a scgmcnt of language interaction, can form the basis for deriving the indikect effect of uttcr~ncc within the segment.
For example, a multi-sentential structure for an information-seeking interaction can sypply the appropriate context for interpreting the subscqucnt utterances to s~ck and t-hen supply information.
The infcrcncc-bascd approach rcquircs one set of convcrs~tional rulc-, for information requests, a dif fcrcnt 9ct of rulcs for answers to these rcquc:ts, and a way to tic thcnc two rulc sets together.
The Dialogue-game model postulates a single knowlcd~e struclurc for this kind of interaction, with coopcrating proccssc; for: (1) rccognizinp; when this kind of interaction is proposcd, (2) using this knowlcdgc to comprchcnd uttcranccn within its scope, and (3) identifying when the interaction is to be terminated, A Modcl of Dialogue THE SHAPE OF THE THEORY Our thcory of human language use has bccn strongly influenced by work in human problem solving (Ncwcll XI Simon, 1972) in which the bchavior of a human is modeled as an information.
processing system, having goals to pursue and selecting actions which tend to schicvc thcsc goals.
Wc view humans as engaging in linguistic bchavior in order to advance the state of certain of thcir eoals.
Thcy dccide to use language, they sclcct (or accept) thc other participant for a dialogue, they choose the details of linguistic cxprcssion -all with the expectation that some of their desired state specifications can thcrcby be rcalizcd, In this thcory of lancuagc, a participant in a linguistic exchange views the other as an indcpcndcnt information-processing system, with separate knowledge, goals, abilities and acccss lo the world.
A spcsker has a range of potcntial changes he can cffcct in his li~tcncr, a corresponding collection of linguistic actions which may result in each such chance, and some notion of the conscqucnccs of performing each of these.
The spcokcr may view the hcarcr as a resource for information, a potential actor, or as an object to bc moldcd into sorrrc dcsircd state.
A dialogue involves two speakers, who altcrnatc as hearers.
In choosing to initiate or conlinuc tho cxchany,~, a participant attcmpts to satisfy his own goals: in intcrprcting on uttcrancc of his partner, each participant attcmpts to find the way in which that utterance serves the goals of his partner.
Thus a dialoguo continues because the participants continue to scc it as furthering thcir own goals.
Likewise, when the dialoguc no lon~or serves the goals of one of the participants, it is redirected to new goals or tcrminatcd.
this rrlcchanism of joint interaction, via cxchange of uttcranccs, in pursuit of dcsircd t.itcs, is uscful for ochiovihg ccrtain relatcd pairs +of participanls' ~oals (c.~., Itv~rni rlr./tcact~inc, buyinc/sc\ling, gctting hcip/~iving hclp, ...).
Many of thcsc paired sets of I correspond to hichly structured collections of knowlcdgc, shorcd by thc rncrnbcrr, of thc langunpc community.
Thcsc ~ollcctions specify such things as: 1) what chnractcri:tics an individual must havc to cngagc in a dialogue of this sort, 2) how this dialocuc is initiated, pursued and tcrminatcd, 3) what ranee .of infarmation can bo comrnunicotcd imp1 icitl y, and 4) undcr what Circumstances tho dialoguo will "succeed" (scrvc tho function for which it was initiated) and how this &ill bo cxhibitcd in the participants7 bck~uvior.
VJo h~~o allr:mptc:d to rrproscnt those collr:.ctiong_of knowlcdgc and tho wily in wt~ich thcy arc u:cd to facilit~to tho cornprchcnsion of a diala~ua, in tha Oinloe~~o t;nrno Mod(-?
I. A Model of Dialogue THE DIALOGUE-GAME MODEL This section describes our Dialogue-game Model at its current state of dcvclopmcnt.
It starts with a brdef overview of dialogue and how it is structured, then describes the dominant knowledge structures which guide the model, and finally dcscribcs a set of processes which apply these knowledge structures to text to comprehend it Within the mb.dcl., each participant in a dialogue is simply pursuing his own goals of thc moment.
The two participants interact smoothly because the conventions of communication coordinate their goals and give them continuihg reasons to speak and listen.
These goals have a number of attributes which are not necessarily consequences of cithcr human activity in general, or communication in particula'r; but which are nonetheless characteristic of human communication in the form of dialogue: 1.
Goals are cooperatively esta5lished.
Bidding and acceptance activities serve to intfoduce goals.
2. Goa/s.aremufua//yknown.
Eachpartyassumesorcomestp know goals of the othcr, and each interprets the entire dialogue relative to currently known goals.
3. Goalsareconfieu~edbyconvenfion.
Setsofgoalsforusein dialogue (and othcr lwguage use as well) are tacitly'known and employed by all competent spe;l&rs ofthe language.
4. Goa/s are bilateral.
Each dialogue participant assumes goals complementary to those of his partner.
5. Gas/ssreubiguilous.
Ahoarerviewsthcspe~kerasalways having goals hc is pursuing by speaking.
Furthermore, the hearer recognizes and uses thcsc goals as part of his understanding of the utterance.
An ~ninlerrupted dialogue goes through three phases: establishing goals, pcir sui ng eobl s, dccommitting from goals.
A Modcl of Dialogue Typically this sequcncc is repeated several times over the coursc of a few rninutcs.
We havc crcotcd knowlcdse structurcs to rcprescnt these convcntions,, and proccsscs to apply the conventions to actual dialo~ucs to comprehend them; Since the knowledsc structures dominatc all of the activity, they are described first.
The assimilation of an uttcranco in the dialogue is rcprcscntcd in this model by a sequence of modifica\ions of a "Work~pacc"[2] which rcprcscnfs the attention or awareness af the listening party.
Tho modificN~tions arc roughly cyclic: 1.
A ncw item of text f is brought into attention through the "Par scr."[-21 2.
Interpretive conscqucnces~of T are developed in the Workspace by a variety of proccsscs.
3. An exprcssian E appears in thc Wor'kspace which specifics the relation between i and the imputed goals of the spcaker of T.
This final cxprcssion is of coursc a formal expression in the knowledge representation of the modcl.
E rcprcsents the proposition (held by the hcarer) that in uttering T, the spcaker was performing an act in pursuit of G, a-spbaker's goal known to thc hcarer.
Sucrcssful comprchcnsion is cquatcd with relating tcxt to salisf action of spcakcr's goals.
To makc an explicit account of dialoguc in this way, wc now describc the knowledge structures that rcprcscnt those c~~nvcgtions which supply tho goals for the participants to pursue.
In particular, wc will anewcr thc following thrco questions: 1.
What is thc knowlcd~o wo arc rcprescnting within tho dofinition of o pclrlicular Dialogue-gamc7 2, How is this knowledge? used to modcl tho roccptive acts of dialogue participant8 -----e--*-e-----e--'-m-dew[2]'Thc F3ar.cr and thc Workspzlco oro port% of tho procarg model and aro der,~r~t~i!d in a later sceti,~n.
k Model of Dialogue 3.
What*sort of processes docs it take to support this model?
A Dialogue-game consists of thrcc? parts: a set af Parameters, a collection of Spco/~c,~ll'ons that apply to these Paramctcrs throughout the conduct of the game, and a partially ordcrcd set of Components characterizing the dynamic aspects of the came.
For the bslancc of this section, we will elaborate on these three parts and cxcmplify these with an cxalliple of the Helping-game.
Dialo~ue-games capture a certain collection of inforhation, common across many dialv~ucs.
However, the individual participants involved and the content subject df the dialoguc may yary freely over dialogues described by the same Dialogue-game.
To represent this, each Dialogue-game has a set of Parameters which assume specific values for each particular dialogue.
Thc dialogue types wc have represented so far as Dialogue-games have each required only thrcc Parameters: the two participants involved (called "Roles"), and the subjcct of the dialogue (called "Topic").
Pararndcr Spccifications Onc of the major aspects distinguishing various types of d'ialogucs is the set of goals hcld by the participants.
Another such aspect is the set of kno'wledgc states of the participants.
We have found that each type of dialogue has a char$cteristic set of eaal and knowledge states of the participants, vis-a-vis each other and the subject.
Within the formalism of the Dialogue-game, these are called the Parameter Spccifications, and are rcprpscnted by a collection of predicates on the Parameters.
These Spccifications are known to the participants of the dialogue, and the requirement that they be satisfied during the conduct of a game is used by thp participants to signal what Dialogue-games they wish to conduct, to recognize what game is being bid, to dccide how to respond to a bid, to conduct the game once the bid is accepted, and to terminate the garno when appropriate.
These Spccifications also provide the means with which to explain the implicit, but clearly succcssful, communication which accompanics any natural dialog~c.
Examples and discussions of these Specifications will accompany the following description of !he Helping-game.
Componcnts While the Paramctsr Spccificstions represent those aspects of a dialogue type that rcmain constant throughout the course of a dialogue of that type, we have also found that certain aspects change in systematic ways.
Thcse are reprcsented in Dialogue-games a5 Components.
In the Dialogue-games we have developed so far, the Components are rcprcscntcd 9s a set of participants' subgoals, partially ordered in time.
Bidding and Accepting Eiddinp, and Acccptancc arc entry operations which people use to cntcr Dialo~uc-games.
Bidding 1.
identifies thc game, 2.
indicates the bidder s interest in pursuing t'hc game, 3.
idcn tifies the Psramctcr configuration intcnded.
Bidding is performed many diffcrcnt ways, often very bricfly.
It is typically the source of a great deal of implicit comrnunicotion, since a bricf bid can cornmunicatc all of the Pararncters and thcir Specifications forjhe Dialogue-game being bid.
Acceptance is one of tho typical responses to a Bid, and leads to purwit of thc game.
Acccptsncc cxhibi t:.
1. acknov~lcdy,rncnt that 3 bid t~ss hccn rnndc, 2.
rscognitisn of thc particul;~r OiaIo~;uc-garrlr?~nd 13aramc:tcr~ liid, 3.
ar,re.crn~nt to pursuc the l;;~trio, 4.
assumption of thc A~ccptor'; rolfc in It)(: Ui;~lol;~~t: 1:;jrtlc:.
Acccptoncc is o1tc.n implicit, c peci.~Il y in I c1Iii!i'vtbly inforrn;ll dial oj;lrrl.
c:an bc indi~atcd by stat(:rncnk of clgr(:(:nir:r~t or ;~pprov;ll, or hy br:l;inn~rl~ to ptrr;iJcl thc 1;hrnc.
(i, sttcrnpts to satisfy it-ic goals).
A to clcc(~ptar~rc inrlt~do rcjr:cting, nc~otiatinr, and i~norinc.
Ciddin~ and acccptnricc appear to ljn pi~rt' of 1;arnc r:c~lry for ;dl of thc Dial ogucgames of ord~nary ad~~lt dislu;.uc.
Ti~y are .il:n i nv'olvcd in f;amc trtrrni n:~Iian.
In thc ca:r of t~rmindion, thrce altcrnat~vc.: ;rrfa po:<iblc: ~rllrlrruptiun :~nd 5pont:lncous torminotian by ei thcr 1;oal x~lisfclcIior\ or uncotl(llI~on:~I i;o:~l f:~iI~~rcr.
A Model of Dialogue Once a eamc has bccn bid and acccptcd, the two participants each pursue the subgoals spccificd for their role by the Components of this game.
Thcse subgoals are mutually complcn~cntary, each set facilitating the other.
Furthermore, by the time the tcrrninati on stage has been rcachcd, pursuit of the Component-specified subgoals will have assurcd satisfaction of the higher, initial goals of the participants, for which the Came was initiated in thc first place.
In this scction, wc c.xhibit a specific Diolocuc-game: the Helping gn/ne.
This game is prcscntcd in an informal rcprcsentation, in order to emphasize the informational content, rather than the representational power of our formalism.
Later in this report we will prcscnt thc formal analocue of this same game.
In what follows, the bold face indicates the information contained in tho representation of this particular Dialogue-game: the tcxt in regular type is explanatory commentary.
The (annotated) Helping-game.
--------1---11---------------Pnmn~clcrs: HELPEE, HELPER, and TASK.
The HELPEE wants help from the HELPEE.
The TASK is some sort of a problem, otherwise unspecified.
Paran~eler Specificat ions: HELPEE: wants to perform TASK.
HELPFE: wants lo be able lo perform TASK.
HELPEE: not ab/e lo perform TASK.
HELPEE: permitted tii perfirm TASK.
MELPFF: a person.
A Modcl of Dialogue Thcse Spccifications not only constrain who would qualify as filling the rolc of HELPEE, but also provide reliable information about the HELPEE, given that this individual is believed to be engaged in the Helping-game.
This prohibits someone from asking for help on a problem he did not want solved.
Similarly, if one rcc~ivcs what he judges to be a sincere request for help to do some task, the helper normally as:umes that the requester has the necessary authority to do the task, if only he knew how.
HELPER: wants to help HELPEE perform TASK.
HELPER: able to provide help.
HELPER: a person.
So, in ordcr to be a HELPER, an individual must be willing and able to provide the needed assistance.
Since this Dialogue-game rcprcscnts shared knowledge, the HELPER knows these Spccifications, and therefore will not bid the Helping-game to someone who is not likely to meet them.
And similarly, no one who fails to meet these Specifications (and knows he fails) will accept a bid for the Helping-game with himself as HELPER.
Components of the Helping game: Thcre are three components: the first two constitute the "Diagnosis" phase to communicate what the problem is.
. HELPEE wants HEfPFR to know about a sef of unexcepfiona/, acfuuii/ events.
'The HELPEE sets up a context by describing a situation where everything, so far, is going well.
Since the HELPEE assumes that the TASK is understood by the HELPER, he also assumes that the HELPER shares his expectations for r~bsequent activity.
A Modcl of Dialogue 2.
HELPEEwc.mts HELPERfoknowabouf: // a set of exceptional events whkh occurred or 2) a set of expected, unexcepflbnal events which did not occur.
This pattern of a Helping-game is sufficiently well known to the participants, that the HELPEE almost never needs to actually ask a question at this point.
By simply exhibiting a failure of expectation, the HELPEE has communicated that this acts as a block to his successfully pursuing the TASK.
The HELPER is expected to explain why the failure occurred and how HELPEE canavoid it or otherwise continue in the TASK.
The third componcnt specifies the 'Treatment" phase where the HELPER communicates an explanation for the perceived failure.
3 HELPER
wants HELPEE fo know about an action which will avoid the undesired event or cause the desired one.
The context description enables the HELPEE to identify a collection of activities which he understands, and in which the HELPEE is attempting to participate.
The violation-of-expectation description points out just where the HELPEE's image of the activities differs from the correct image.
It is from this area of difference that the HELPER selects an action for the HELPEE.
A Model of Dialogue #ia/o,mue games in the Con?pre/rension of Dialogue In this section we describe the five stages of dialogue assimilation and detail the involvement of Dialogue-games with ~ach stage: 1) nomination, 2) recognition, 3) instantiation, 4) conduct, 5) termination.
Proccssi ng Environment Our description of the model should be viewed as representing the changing coy,nitive state of one of the participants, throunhout the course of the dialogue.
That is, two models are involved, one for each participant.
Since the same processing occurs for both, we will describe only one.
Thc Dialogue-Game Modcl consists of a Long-Term Memory (LTM), a Workspacc (WS), and a set of proccsscs that modify the contents of WS, contingent upon the contents of LTM and WS.
LTM conbins a rcprescntation of the knowledge that the partigular di ologuc participant bl ines to the dialogue bcfo~e it starts.
This includcs knowlcdgc about the world, relevant objects, processes, concepts, the cognitive statc of his partner in dialogue, rules of inference and evidence, as well as linguistic knowlcdp;e (words and thcir semantic rcprcscntation, case frames for verbs and predicates and the multi-turn language s'trbctures, the Dialogue-games).
WS is the volatile short-term rncmory of thc modcl, containing all the partial and temporary rcsults of processing.
The contcnte of WS at any momcnt rcprc.cnt thc madel's state of comprchcnsion and focus at that point.
Tho processes arc autonomous specialists, opcrl~tiny: indcpcndcntly and in parallel, to modify thqentitics in WS (callcd "activations").
Thcsc proccsscs arc also influcnccd by the contents of WS, as well a.
by thc knowlcdgc in LTM.
Thus, WS is the place in which thcso concurrcnt~ly operating proccsscs interact with each othcr.
This anarchistic control structure rcscrnblcs that the HEARSAY system (Erman, Fennel, Lesser & Rcddy, 1973) A Modcl of Dialogue Nomination When dialo~uc participants propose a new type of interaction, they do not consistently use any single word or phrase to introducc the interaction.
Thus we cannot dcterminc which Dialogue-games represent the dialoguc type through a simple invocation by namc or any othcr pre-known collection of words or phrases.
Instcad the diolo~uc type is cornmunicatcd by attempts to establish various entities as the values of the Psi actcrs of ihe dcsircd Dialogue-game.
Thus, an utterance which is cornprchcndcd as associating an entity (a-person or a concept) with a Parameter of a Di aloguc-game suggests that Dialogue-game as a possi bilily for initiation.
The Dialogue-Game Modcl has two ways in which these nominations of ncw Dialo~uc-games occur.
One of the processes of the modcl is a "spreading activation" proccss call& Protcus (Lcvin, 1976).
Protcus gcncratcs new activations in WS on thc basic of cclations in LTM, from concepts (nodes in the semantic network) that are already in WS.
Protcus brings into focus concepts somehow related to those already thcrc.
A collection of concepts in WS leads to focusing on some aspect of a particular Dialocuc-game, in this sense "nominating" it as a possible new Dialoeue-game.
MATCH and DEDUCE are two of thc modcl s processes which operatc in .conjunction to ccncratc ncw activations from existing ones, means of finding and ap,prp@rulc-like transformations, Thcy operate through partial match and plausible i nfcrencetcchniques, and if thcy activate Pardrnetcrs, thcn the Dialogue-gsrnc that contains those ~ararndtcrs bccomcs nomina,tcd as.a candidate Dialogue-game.
Match and Deduce operate to,gether as a kind of production system (Newell, 1973).
For cx;lmplc, from the input utterance: "I tried to send a message to <person> at <computer-site3 and it~didn't go".
the following two scqucnccs of associations and inferences result: (la) I trjcd toX.
(25) 1 wpntcd to X.
(3a) 1'want to X.
(4a) HELPEE wants to do TASK.
( I b) It didn't go.
(2b) What I tried to do didn't work.
(3b) X didn't work.
(4b) I can't X.
(58) 1 don't know ha to X.
(6b) HEL.PEE\doc$n7t know how to do TASK.
A Model of Dialogue (Where: I = HELPEE and X = do TASK = send a message to <person> at <computer-site>).
At this point, (45) and (6b), since they are both Parameter Specifications for the Helping-game, cause the model to focus on this Dialogue-game, in effect nominating it as an organizing structure for the dialogue being initiated.
Thc proccsscs described so far are reasonably unselective and may activate a number of possible Dialogue-eamcs, some of which may be mutually incompatible or othcrwisc inappropriate.
The Dialogue-garnc Manager investigates each of the nomi natcd Dial.oguc-games, verifying infcrcnccs based on the Parameter Specifications, and eliminating< those Dialogue-gamcs for which one or more Specifications are contraclictcd.
A second rncchanism (part of Protcus) identifies those activations which are incornpati blc and scts about accumulating evidence in support of a decision to accept one and dclctc the rest from the WS.
Fdr cxarnplc, suppose the question "How do I get RUNOFF to work"? lcads to the nomination of two games: Info-scck-game (pcrson asking question wants to know answer) and Info-probe-game (pcrson asking qucdi~n wants to kn~w if other knows answcr) Thcso Iwo Dialocuc-~nrncs have a lot in common hut differ in ono crucial aspect,: In the Info-scck-gamc, thc qucctioncr docs not know the answcr to thc question, whilc in thc Info-probc-game hc doc:.
Thcsc two prcdicatcs arc rcprcscntcd in the Parameter Spc.cifications of t hc two Di al.ogue-games, and upon thcir joint nomination are discovarcd to bc contradictory.
Prolcus rcprcsent: this di~covery with a structure which ha5 the cffcct of climinatinp, thc conflicting Dialogue-came with the least supporting evidence.
Such support might be, for cxamplc, cither the knowledge that the speaker is th~ hearcr's tcachcr or that hc is a novice prograrnrncr (which would icnd support f6r tho choicc of the Info-prabc-errme or Info-seek-garnc, respectively).
A Model of, Dialogue 21 Through these proccsscs, the number of candidate Dialogue-games is reduced until those remaining are rompatible with each other and with the knowledge currently in WS and in LTM.
Instantiation Oncc a proposed Dialogue-game has successfully survived the filtering proce.Bses describe-d above, it is thcn instantiated by the Dialogue-game Manager.
Those Parameter Specifications not prcviou:ly known (represented in the WS) are established as newly infcrred knowledge about the Parameters.
A large part of the implicit communication between dialogue participants is modeled through instantiation.
To illustrate this, suppose that the following come to be represented in WS (i.e., known) in the course of assimilating an utterance: SPEAKER does not know how to do a TASK.
SPEA~ER wants to know how to do that TASK.
SPEAKER wants t-o do the TASK* Thcso are adequate to nominate the Helping-game.
In the process of instantiating this Dialogue-game, the following predicates are added to WS: SPEAKER believes HEARER knows how to do TASK, SPEAKER believes HEARER is able to tell him how to do TASK.
SPEAKER believes HEARER is willing to tell him how to do TASK..
SPEAKER wants HEARER to tell hirn.how to do TASK.
SPEAKER expects HEARER to t'cll'him how to do TASK.
Thc model predicts that jhcsc predicates will bo implicitly communicated by an utterance which r;uccecds in instantiating thc Helping-game.
This corresponds to a dialogue in which "&I can't gct this thing to work" io taken to eommuhicate thot'thc speaker wnnts to "get this thing to work" (even,though, on the surface, it is only a simple declarative of the speaker9$ abi'lity).
Conduct Oncc a Dialogue-game is instantiated, tho Dialogue-game Managcr ic guided by thc Corhponcnts in cornprohcnding tho rect of the dialogue.
Thars Component$ ore gook for A Model of Dialogue the dialogue participants.
For the speaker, thesegoals guide what he is next to say: for thc hcarcr, these provide expectations for the functions to be served by the speaker s subscqucnt utterances.
Thcse "tactical" goals are central to our theory of language: an utterance is not dccmcd ta be comprehended until some direct consequence of it is seen as serving a goal imputed to the spcakcr Furtherfiore, although the goals of the ~omponcnis arc active only within the conduct ef a particular game, their pursuit leads to the satisfaction of the goals described in the Parameter §pccifications, which were held by the participants prior to the evocation cf ihe Dialogue-game.
In the case of the Helping-game, the goals in tho "diagnostic" phase arc that thc tIELPEE dcscribc a scquoncc of related, uncxceptional cvcnte leading up to a failure of his cxpectotions.
Thcse goals model the state cyf th6 HELPER as he assimilates this initial part of thc dialogue, both in that he knows how tho HE~PEE is attempting lo dcscribc his problcrn, and also that thc HELPER knows whcn this phase is past, and thc time has come (Ihc "trcatrncnt" phase) for him to provide the help which has been implicitly rcquesteel.
The processes described above perform thc identification and pursuit of Dialo~ue-games.
How, then, arc DGs terminated?
Thc Parameter Specifications rcprescnt thosc a:pects of dialogues that arc constant over that particular type of dialogue.
The Oinloguc-Game Modcl pushas this a step further in specifying that the Dislo~uc-,game continues only sr long ar the Parameter Specifications continuc to hold.
Whcnevcr any predicate in the Specificelion ceases to hold, then tho model prcdicls tho i rnpcr~ding tcrrnin;jtion of this Dio1oguc;garnc.
For r_.xnrnplct, if the IIIIPEF' na longer wants to pcrfarm thn TASK (r:~lhrlr by nccornplid--~ir~f: it or by nb:rndonirl~ that goal), hv 'indicl~trr.i fhia with nn irttcsriinct.
wlrich hd; for tr:rrnin:il~on.
The: lit,lp~ng game ihr:n tnrrnln:\tc~; this corrc;pr~nrl; lo lhq :imultsrir.ou~ tcrrr~instion of thc holp~ng interact~on.
If the HELPER bccomc; unwilling lo give hclp, or discovtrrs that hc 1s unelble, thc:n Ihr!
Eirlptng-game also terminiltcs.
Again, we haddo one simplc rule,lh?it corcr; h di.dcr:;!y of casos--a rule for tormination that captures tho variety uf ways that the dialogue? wa havo ~tudied end.
A Model of Dialogue The Dialogue -,name Processes In this section we describe the major process elements of the Dialogue-Game Model.
All the major parts and their connectivity are shown in Fieure 1.
Thcse parts (two rncmorics and six Proccsscs) will each be described separately.
Thc appendix contains an extensive, detailed trace of the model as it analyzes (via hand simulation) a naturally occurring dialogue fragment.
Finally, we will summarize our experience with the model to date.
Long-term Mcrnory (LTM) The Long-Term Memory is the rnodcl's representation of a participant's knowledge of the external world.
It contains the initial knowledge states of the participants: the grammatical case frames, the semantic structures for word-senses, tho knowledge of the s~bjcct,matter of the dialopu~, the various ways in which dialoeues are structured, ctc.
LTMis a semantic network, containing a set of nodes (also called concepts) and the relations that hold between them at the Iowost ievel.
This information is stored in the form of triples: <node1 relation node-2> Wc have this machinery encoded and working--a 611 complement of read and write primitives for this representation.
However, it has proven awkward for us to specify knowlcdge at this level, so we have implemented further machinery (named SIM) to tran.olatc n-ary predicates into these triples.
Thuq far a predicate, P, having arguments A 1, A2, and A3, SIM can be given the input: PI: (Alpha P Beta Gamma) [mca~ing that P1 is defined to be an instance of P (the predicate always goes iR swd position) with arguments Alpha for Al, Beta for A2 and Gamma-?or A3.1 The resulting triples we created: <P1 PRED P> <P1 A1 ALPHA, <Pl A2 BETA> <PI A3 GAMMA> Let's examine a more concrete example; suppose we want to include in the LTM that: A Model of Dialogue Dialogue text Figure 1.
The Dialogue-game Model A Modcl of Dialogue .Mary hit Johnwith arock.
The predicate "HIT" ha's two mandatory arguments (subject, object) and an optional one (instrument).
he SIM representation of thi~~assertion (which we shall name Ql) is Ql:(MARY HIT JOHN ROCK) which translates into the foll~ing triples: <Q1 PRED HIT> (01 SUBJ MARY> 41 OBJ JOHN> <Q1 INST ROCK, Workspace (WS) The Workspace is the model's representation for that information which the participant is activcly using, This memory corresponds roughly ta a model of the participant's focus of attention.
While the L'TM is static during the operation of the model (we are not attempting to simulate learning), the WS is extremely volatile, with elements (activations) coming into and out of focus c~tinuously.
All incoming sensations (i.e., utterances) appear in the WS, as do all augmentations of the participant's knowledge and goal statc.
The representational format of the WS is the same as in LTM.
Each node in the WS isa token (copy) of some node in LTM.
Whenever some process determines that the model's attention (WS) should include a token of a specific node (C) from LTM, a new node (A) is created by copying C and this new node is added to the WS.
A is referred to as an artlr,ntlnnn(ranrlihr,aiw<A IAQ C> This rcprescntatim providcs the associative links between an object in attention, and the body of knowledge assbciated with it, but not yet broucH into attention.
A Modcl of Dialogue This module produces activations representing each successive utterance to be processed.
These rcprcscntations are generated from the surface string using a standard ATN Grammar similar to those developed by Woods (19701 and Norman, Rumelhart, fir the LNR Research Group (1975).
We use a case grammar represeniation, with each utterance spccificd as a main predicate with a set of parameters.
Bccausc this module is a conventional parser whose implementation is well understood, we hove so farproduced hand parses of the input utterances, following an ATN grammar.
Protcus This is a sprcodine activation mechanism, which modifies thc activation of conccpts spccificd as rclatcd in LTM whenever a givcn conc~pt bccomcs active.
This mcchanism provides a way to intcgratc top-down and bottom-up processing within a uniform framework (Lcvin, 1976).
The Dial ogue-Game iilodel uses Protcus to activate a conccpt, given tha a number of closcly relatcd conccpts (Componcnts, fcaturcs, instances, etc).
arc active.
I9 Protcus opcratcs on all currwt activations to modify their salience", a numbcr associated with each activation that generally represents the importance or rclcvancc of the conccpt.
Two kinds of influence relations can exist bctwccn conccpts: cxcitc or inhibit.
If an excite relati~n exists, then Protcus increases the salience af the activation of that concept in proportion to the saliencc of the influencing conccpt.
The higher the salience of an activation, the larger its influence on directly related conccpts.
If an inhibit relation is spccificd.
then Process decreases the salience of the activation of the neighboring conccpt.
Match TIis Proccxi idkntifics conccpts in LTM that arc congruent to cxistinc activationr.
The Diologuc-Game Modcl conthins a numbcr of cquivalencc-like relations, which Mal'ch uses to idcntify a conccpt in LTM as rcprcscntin~ thc same thing as an activation of somo ~ccrningly different concept.
Once this equivalent conccpt is found, it is activated.
Dcpcnding on how this conccpt io dcfincd in LTM, its activation may havo cffects.
on othcr processes (for cxamplo, if thc canccpt is part of a rulc, Dcducc may bo invoked).
Match can be vicwcd as an attcrnpt to find an activation (A) in WS and a Concc!pt (C) in LTM which correspond, accordintta some set of critcr The basic tactic i., to ottrrrnpt A Model of Dialogue to find a form of cquivalencc relationship between A and C, without delving into their structure at all.
Only if this fails arc their respective substructures examined.
In ths sccond case, the same match which was attempted.
at the top level is tried bctwccn corresponding subparts of A and C.
Match proceeds in five steps: 1.
Is it alrcady known that A is an activation of C?
If so, the match ferminates with a positive conclusion, 2.
Is there any other activation (A7j, and/or conccpt (C') such that A"is known to bc a view of A, C 1s known ta bc a kind of C', and A' is known (by step 1) to bc an actlvation of C'?
The relations (i..
is a view of )... gnd (... isba kind of )... rcprescnt stored relations between pairs of activations 1 and' concepts, rcspcctivcly.
One concept "is a kind of" another conccpt rep,~~~,lts, a s~pcrclass inclusion, trua for all timcand cdntexts.
'(Whdever else he might be, John is a kindof huma'n being:) On the other hand, one activation may be "a view of" another only under certain circumstances--a conditional, or tactical relationship.
Undcr diffcrent.conditions, if is appropriate to view John as a Husband, Father, Child; Hcl p-seeker, Advice-giver, e tc, 3.
A list of matched pairs of activations and concepts reprcscnt corrcspondcnccs found el scwhmc, with which match must be consi stcnt.
(N.B.: this Match, as we will see later, may be in service of anothcr Match galled' on siructuros containing the current A and C).
If thc par [A,C] is a matchcd pair, then these tyo have been previously found to match,.so we may hcrc concl'udo the same thing and Match exits, 4.
On the other hand, if there is either an X or a Y such that [A,X] (or [Y,C]) is a matchcd pair, then replace this match with an attempt to match C and X (or A and Y).
5. Finally, if the matchahas ncither succeeded nor failed by this pqint, !hcn Match is called recursi~~ly on all corresponding ~ubparts of A ahd C, pail~~isc.
That is, c.~., if A and C have only thrcc subpartsip common (soy, SU3J, 013J and PRED) thn Match((SUBJ of A),(SUBJ of C)), Match((OBJDof A),(OBJ of C)) and ~atch((~~€~ of A),(P~EO of C)) arc attempted.
Only if all of thcsc subordinate matches succeed is the top-level Match said to succccd.
Clearly, for structures of significant complexity, Match may eventually call itc,clf rccursivcly, to an arbitrory depth.
However, since each subordinate call is on a strictly smaller unit, this process must coitvcrge.
A Madcl of Dialogue Our experience has shown us that this type of mechanism plus a collection of rewrite rules enable us to eventually map a wide variety of input parsing structirrcs to pre-stored, abstract knowledge structures, in a way that a significant aspect of their intended meaning has been assimilated in the process.
Dcducc This opcratcs to carry out a rule when that rule has become active.
Rules are of the form (Condition)->(Action), and Dcduce scnscs thc activity of a rule and applies the rule by activating the concept for the action.
Whatcver corresponocnces were evolved in the coursc.of cccating the activation of the condition (left) half of ihe rule are carried over into thc activation of the action (right) half.
The combination of Match and Dcduce a em.
gives us the capability of a production syct Thc operation of Dcducc is relatively simple.
It is called oniy when d rule is active in the WS.
Dcducc attempts to match the left half of this rule with some other activation in the WS.
(This has ty-pically already been done by match).
Assuming this is accomplished, Dcduce crestet an ac,tivalion of the right half of the rule, substi luting in the activation for all subparts for which thcke are correspondences with the icft half.
Once a Dialogue-game has been activated (by Protcu.,) as possibly the comrnunrcation form being bid for a dialogue, the Dialogue-game Manager uses it to guide thc assimilation of successive utterances of the dialogue, through four stages: 1.
establish the Parameter values and verify that no Specification is contradictcd, 2.
cstabli ;h olhcrwi sc unsupported Specifications as assumptions, 3.
cstrrblish the Components as goal$ of thc participanfs, 4.
dctcct the circumstancc~ which indicate that the Dialogue-game is.
terminating and represent thc conscquenccs of this.
Thc first two of thesc phaces hsppcn in parallel.
Whcn the Manager accesses each of thc Para~nctcrs, they arc found either to have activations in thc WS or not.
If they do, the cgrrespondcnccs bclwccn activation and Psrsmetcr are established in the WS.
This correspond: lo a::ignint a value to thc Paramcicr for this particular evocation of thc Dialogue-game.
Any Parameter that has no activation ic put on a list which is A Model of Dialogue periodically chcckcd in the hope that later activity by the Manager will lead to the creation of appropriate activations.
For each of the Specifitations, a check is made to determine if it already has an activation in WS.
(In most cases, the activation of some of these Specifications will have led to the activity of the Dialogue-game itself).
The Specifications having activations need no further attention.
For all remaining Spcc,ifications, activations are created substituting for the Parametcrs as determined above.
At this stage, the Dialogue-game Manager calls Protcus to determine the stability of thcso new activations.
Any new activation which contradicts existing activations will have its level of activity sharply reduced by Proteus.
If this happens, the Dialogue-game Manager concludes that some of the necessary preconditions for the game db not hold (are in conflict with current understanding) and that this particular game should be abandoned.
Otherwise, the new activaticns stand as new knowledge, following from the hypothesis that the chosen game is appropriate, The Dialogue-game has now been successfully entered: the Manager sets up the third phase, creating activations of the Dialogue-game's Components, with appropriate substitutions.
(By this time, any unresolved Parameters may well have -activations, permitting their resolution).
This sets up all of the game-specific knowledge and goals for both participants.
Finally, the Manager detects that one of the Specifications no longer appears to hold.
This signals the impending termination of the Dialogue-game.
In fact, the utterance whikh contai'ns this information is a bid to terminate.
At this point, if the partici pants7 initial goals are satisfied (thus contradicting the Specification which calls for the prcsence of those goals) the interaction ends "successfully".
Otherwise, the Dialogue-game is terminated for some other reason (e.g., one participant's unwillingness or inability to continue) and would generally be regarded as a "failure".
These consequences are infcrred by the Manager and added to the WS.
When a Dialogue-game has terminated, its salience goes to zero and it is removed from the WS.
Pronoun Proccsscs The Dialogue-Gamo Model contains a set of Pronoun Processes, including an I-Process, a You-Process, and an It-Process.
Each of those is invoked whenever the /' associated surface word appears in an input utterance,, and operates to identify some preexisting activationthat can be seen as a view of the same object.
# Model of Dialogue Each of these Processes search the curreot context, as represented by the current sct of actirations in the WS, using tho katures specified there ro identify a set of possible co-rcfctcntial expressions.
When there is more than one possibility, the one with a hi ghcr salience is sclectcd.
A Model of Dialogue DEFICIENCIES IN CURRENT MAN-MACHINE COMMUNICATION With the understanding we new have of the multi-sentential aspects of human communication, it is easy to see why man-machine cornrnun'ietion appears so alien, highly restrictive, uncomprehending and awkward.
This is because major regulation and interpret4 f ion structures are missing.
In Table 1, we compare human dialogue and typical man-machine com.munication with respect to some of these features, The table designates a "sender" ancfa "receiver" which should be identified with the person and the computer, respeclively, in the man-machine communication case.
ASPECTS OF NATURAL COMMUNICATION ADDRESSED BY DIALOGUE-GAME THEORY * SENDER'S GOALS KNOWN TO RECIPIENT PARTICIPANTS CAN DECLARE THEIR GOALS GOALS PERSIST OVER SEVEFiAL MESSAGES GOALS IDENTIFIED WITH EACH MESSAGE COMMUNICATION PLANS USED IMPLICIT COMMUNICATION TAKES PLACE HUMAN MANDIALOGUE MACHiNE YES NO YES NO YES NO YES NQ YES LITTLE YES LITTLE Table 1: fi @omparison of man-rnan and man-machine communlcalion Conventional man-machino communication froqucntly givec tho user o sense that the computcr is operating "out of contcwt", since he must continually respccify what ir rclcvant to the ongoing dtaloguc.
In human communication it ic the shared awarcncss of each other's goal structures which pcrrnitr ficm to retain and fosuo.on what ie relevant.
Man-machine communication sccms aimless and undirected bacauro no analogous body of knowlcdgc is being used tc facili tatc and interpret the communicotioh.
A Modcl of Dialogue 32 The ideal interface, arid the sort toward which this research is direded, would be continuously askihg itself: "Why did he say that?".
From answers to this, the interface would infcr just what the human was expecting as a response.
This would con~titute a major slcp toward the enabling tho intcrface to servo the actual (rather than the poorly cxprcsscd) needs of the user.
Finally, such an intorface would require much lco~ adaptation on thc parf of the user, and so, by our original hypotheois, would significantly enhance the cffcctivencss of the man-machine partnership.
A Model of Dialogue This paper has described a research effort into the modeling of human dialogue.
The purpose of this research has been to uncover and describe in process models, reculari tics that occur in dialogue.
It is hopcd that the enhqnced understanding of human communication which rcsul ts, will facilitate the development of more natural (and thus more effective) man-machine interfatcs.
Thc principal regularity w'e have discovered is a collection of knowledge and goal structures, called Dialoeue-games, which seem to be crucial in understanding the structure of naturally-occurring dialogues.
According to the theory we have proposed, one or more of these Dialogue-games serve as the major organizing influence on every human didlogue.
Each Dialogue-game specifies what knowledge each person must have to ehgage in such a dialogue, and what goals of the participants might be served by that interchange.
A Dialogue-game also spccifies, as a sequence of "tactical" goals, the manner in which the dialogue is conducted.
The Diatogua-game Model is a collection of cooperative processes which continuausly updated a representation of each participant's attention state in a Workspaco.
The model recognizes when a particular Dialogue-game is being bid, accepted, pursued and terminated, and represents these states appropriately in the Workspace.
A particular Dialogue-game, the Helping-game, was described in some dctajl.
A simulation of the evocation and use of the Helping-game on a segment of natural dialogue is contained in the Appendix.
Our experience so far with the Dialogue-game Model has reinforced our hypothcses that an understanding of the goal-serving aspects of dialogue is a powerfdl . tool in understanding the individual di~alogues.
A Model of Dialogue A Modcl df Dialogue APPENDIX -SIMULATION OF THE DIALOGUE-GAMES MODEL Example of the.Oia[ogue Modcl in Action In this appendix we describe an extensive simulation of the arrent state of the Dialogue-game Model.
We make use of a particular version of the Helping-game and alsc explore another structure, an Execution Scene, which describes the customary events surrounding the successful execution of a particular program (Runoff).
We start by describing this more detailed version of the Helping-game, introducing names for the various aspects, to be used later.
Next we show a short, naturally occurring dialogue between a computer operator and a user.
'Then we describe the operation of the Dialoeuc-garnc'Model as if assimilates this dialogue, up to the point at which it concludes that thc Helping-game is an appropriate structure throu~h which to understand the subr;cqucnt utterances.
Once this hypothesis for the form of thedialogue has been chosen, we continue the simulation to examine how Jhc model dccidcs that a particular Execution Scene is appropriate for assimilating the content of the dialogue.
'Next, we see how this choice of occnes cnhances the set of goals imputed to the speaker, thus facilitating the cornprehcnsion of what he is saying.
Finally, we summarize our experience with the Dialogue-game Model so far.
A Dctai/ed Structure for the help in,^ game What fol4ows is the substance of the communication structure we have namcd the Hclping-game.
In the interests of clarity af presentation, the formal structureo of the definition have been expressed in prose.
However, the elements of the following description correspond one-to-one to those in the actual Helping-game used in ?the simulation.
HELPING-GAME Paramctcrs: Thc parameters are two roles (HELPER and HELPEE) and a topic (TASK/HG).
A Modcl of Dialogue Parameter specifications: The HELPER and HELPEE are each a kind of person.
H1 = A goal of the HELPEE is that he perform TASK/HG.
H2 = It is not true that HELPEE is able to perform this TASKIHG.
H5 = The HELPEE wants to be ablc to pcrform the TASKIHG.
(being able to perform ?he task is a subgoal of performing the task) H6 = The ELP PER is able t.o enable the HELPEE to .perform the TASK/HG.
H8 .I Thc HELPER is willing(= is ablc to want to )... to enable the HELPEE to perform the TASKIHG.
H10 = The HELPEE is permitted to perform the TASK/HG.
HI 1 = Thc HELPEE wants the HELPER to enable him to perform the TASKIHG.
(bcing enabled to perform the task.is6a subgoal of performing the task) Game components: HGX 1 = The HELPEE knows of a particular execuiion scene, XS/HE.
[note: an execution scene is a flowchart-like description of thc use af a particular process; more details below] HGX2 = The HELPEEknowe that his perceiving the terminal state of XS/HE would satisfy his wanting to perform TASKIHG.
HGXPC= (Thus) The HELPEE wants to perceive XS/HE in this terminal state, (this perception is a subgoal of performing the TASKIHG) ACTION/GUOD = an ACTION of XS/HE which was realized in the past.
HGX3 = The HELPEE knows he has perceived this ACTION/GOOD.
HGX4 = T~C"HELPEE knows he had expected to perteive it.
HGX5 = Thc HELPEE knows hc wants to perceive this ACTION/GOOD.
(pcrcciviny: the ACTION/GOOD is a sub~oal of perceiving tho [dcsirc.dl tcrmi nal date of the XS/HE) kCTIOIJ/BAD = an ACTION of XS/t1E which was not rcalized in tho past.
HGX6 = Thc HELPEE knows that hc did not perccivc ACTIONfBAD.
HGX7 = The tiELPEE knows that he had cxpcctcd to pcrceivo it.
HGX8 = The HELPEE want.
to pcrccive ACTIOId/BAD.
(pcrcciving the ACTIONIBAD is a subgoal to perceiving the terrnirral state of XS/HE).
HGX9 T Thc HELPEE wants to describe what happclncd which was both cxpcctcd and wanted, thc ACTIOl,l[s]/G000.
(dcscribinc thcse A~TIOFJ[~]/G~~D is a subgoat of having thc HELPER enablo the HELPEE to pcrform tho TASK/HG).
HGXlQ= Thc HELPEE wants to dcscribo what dtd not hsppcn that he A Model of Dialogue expected, and wanted, the ACTION[s]/BAD.
(describing these ACTION[s]/BAD is a subgoal of having the HELPER enable the HELPEE to perform the TASK/HG).
The Dialogue to be Modeled What follows is a transcr.ipt of a naturally occurring dialogue between a computer operator (identified as "0') and a user ("L'3 who has "linked" to the operator, in an attempt to solve a problem.
Thcre has been virtually no "cleanup" of this transcript, except to remove extraneous typing hat had appeared on the operator's console listing as a result of the op&ratine system printing routine status messages.
The choice of words, and even spcliinc, are exactly as typcd by the participants.
(We have segmented the text by interposing carriage-returns as we deemed appropriate).
Dialogue OC 11 7 LINK FROM rL1, TTY 42 I.
: How,do 1 get runoff to work, I kcep xeqtn it but it just grabs my input file and then says done but gives me no output?
GA 0: The output comes out on the line printer L : Throw it away but can I get it to go to a file?
GA 0: Confirm your commands with a comma and you'll be queried for files, dc.
GA A Model of Dialogue L: Thanx mucho BREAK The subsequent simulation is of the model .processing the first five segments, the entire first utterance.
Each utterance is ingested one at a time, by the Parser, and the assimilation proceeds until a quiescent state is reached (much more detail, below) whereupon the next segment is parsed and input for processing.
The identification of thc hclping-gamc How docs thc model know to evoke the Helping-game?
To exhibit answers to thi~ and subscqucnt questions, we lead tho reader through a simulation of the model as it proccsscs the beginning of dialogue OC117.
We indulge in fhe samc use of prorie for formalism as aboQe, again with the same assuranaes of correspondcnccs with tho actual sirnulati on.
Thc simulation proceeds in cycles: in each cycle, we exhibit the operation of a sinzlc processor, performing one iteration of its function.
We do not address hcrc the is:uc; of how the model would select w.hich processor to call next.
In fact, our dcsign calls for these processors to be mgxirnally autonomous and parallel in their operation, operating whcncvcr circumstances are ripe for their function and dormant otherwise.
Thc format of this sirnuistion is as follow;: Thc cycle number is first, in the form: :cy,mcnt nurnbcr9--cycle number in this scgrncnt,.
Next is tho name of the praccwor operating in this cyclc.
Aftcr that is EI description of the nature of the pracossiny.
donc duPlnb that cyclc.
Finally, tharo is a list of tha rcsults for this cycle, that is, ;dl tho irnportljnt changw in WS, iily tho drxcription is at a vcry d~tjiled level.
But after a whiln, tha operations bccotl~c cxtrernr~ly rcpctitive so tho dcstription bccomas less d~~tailcd, focusing only on thc unique aspects of thc current opcrstion.
In this cxmple.
each processor is called at lcastonco in thc processing of each scgment: Match, Dcduco and Protcu; bear thc major burden, having scvoral invocations each pa? segment.
Cycle 1-1 -Parse.
The parser reads one utterance/segment of input and translates it into the formalism for activations in the workspace.
No claim 'is made that this translation retains all the content of the original text, only that it is adequately faithful to the level of detail we are simulating.
Results: Case/9 (= (0 perceives that L asks (how do I get Runoff working)))? is activated.
Cycle 1-2 -I-processor Certain words (e,g.
pronouns, determiners) are taken to be signals that a reference is being made to conccpts introduced elsewhere.
Sne presence of a concept in the workspoce corresponding to one of these words lcads to the calling of the.
process-specialist which attempts to resolve the implied reference.
Thus, the presence of "I" in the text leads to the calling of the I-process, whose sole function is to determine the referent of the .'I" and modify the stored concept to reflect this.
This process judges that if L is asking a question which contains "I" as its subject, then this constitutes adequate evidence to hypothesize that "I" is being used to refer to L.
Results: 0 perceives that L asks (how does L get Runoff working)?
Cycle 1-3 -Match Match is always on the lookout for pairs of nodes, one in the WS and the other in the LTM, such that the activation (node in WS) matches the concept (node in LTM).
This is taken to be evidence that the activation is also to be tiken as an activation of the matched concept.
It should be understood that we areaexamining only some of the succewful matches which occurred, Starting in this cycle, we see a pattern which recurs regularly, and which accounts fcr a significant piece of the action, as the model assimilates the dialogue.
Match dcterrnincs that a particular activation matches the left half (condition side, if part, etc).
of a production-like rule srorcd in LTM.
This successful match leads to the identification of the corrcspondcnces between the aspects of the activation and those of the left half of the rule, ae well as creating an activation of the rule itself.
The activation of a rule leads to calling the Deduce processor in thenext cycle, which applies the activated rub to the node in the WS responsible for the rule's activation.
This application of a rule (which also results in thc removal of the rule's activation from the WS) creates a new activation structure in the WS.
A Modcl of Dialogue In othcr words, the introduction of a piece of knowledge suggests that a certain transformation (e.g.,'"Whcncver you know X, you can conclude Y").
is appropriate.
This transformation is applied to the stimurus knowledge to generste a conclusion: a new piece of knowledge.
In this particular case, the above result structure is found to match the left half of Rule0 = If Opcrceives a proposition, then 0 knows that proposition.
with thc correspondenccs Case/l (= (L asks(How do I get Runoff working)))? is activated.
corresponds to the proposition.
(This rulc ~cprcscnts the approximation that what is perceived is accepted at face value).
Sincc Casc/g is now scon to be an activation of the Left-half of RuleO, an activation for the rule itself is created in the WS, Results: Case19 is an activation of Left half of RuJeO.
Casa/j.corresponds to the proposition in RuleO.
An activation of Rule0 is entered into WS.
Cycle 1-4 -Deduce Sincc a rule is active in WS, Ocduce is called in an attempt to apply thc rule.
The Match has guar'antced that the necessary correspondences exists betwoen the left half of the rule and the n'odc which is its activation.
To apply the rOle, Deduce creates an activation of the righthalf, with the corresponding sub-parts substituted.
Rcsul ts: RO1 = 0 knows Casc/l Activation of RuleO deleted from WS.
Cycle 1-5 -Match Match finds that RO-1 matches the left half of: Rule1 = If 0 knows (L asks about a proposition), then 0 knows (L does not know about that proposition).
A Madcl of Dialogue Rcsults: RO-1 is an activation of the loft half of Rulel.
Case/l corrcsponds to (L asks about a proposition) Case12 = (How does L get Runoff working) corresponds to the proposition.
An activation of Rule1 is created in the WS.
Cycle 1-6 -Deduce Dcduce applies Rule 1 to RO1, substituting according to the discovered corrcspondcnccs.
Rcsults: R1-1 (= 0 knows (L does not know Case/2), is activated).
Activation of Rule 1 deleted from MS.
Cycle 1-7 -Match Match Rl-1 with left half of Rule3 = If 0 knows that a person does not know how to perform a task, thcn 0 knows that that person is not able to perform the task.
Rcsults: R1-1 is an activation of the left half of Rule3, L corresponds to the person mentioned.
Get corccoponds to Perform.
Tho state of Runoff working corresponds to the task.
An activation of Rule3 is'created in the WS.
Cycle 1-8 -Dcduce Deduce applies Rule3 to R1-1.
Results: R3-1 (= 0 knows that R3-11= (L is not able to perform (getting Runoff working)) is activated).
Activation of Rule 3 deleted from WS.
Cycle 1-9 -Match A Model of Dialogue Match R311 with H2 = Helpee is not able to perform the task.
Results: R311 is an activation of H2, (~ctting Runoff working) corrcsponds to the task.
L corrcsponds to tho Hclpeo Cycle 1-10 -Match Match RO1 with left 112 of: Rulc2 = if 0 knows (L asks about a proposition), then Q knows (L wants to know about that proposition).
Rcsults: RO-1 is an activcition of the left half of Rule2.
Case11 corrcsponds to (L asks ...), in Rule 2.
Casc/2 corrcsponds to the proposition.
An activation of Rule 2 is created in the WS.
Cycle I1 1 -Deduce Dcduce applies Rule2 to RO-1.
RcsulEs: R2-1 (= 0 knows (L wants to know about Case(2) is activated).
Activation of Rule 2 dcletcd from WS.
Cycle 112 -Match Match R2-1 with lcft half of Rule4 5 If 0 knows (a person wants fo know how to perform a task), then 0 knows (that person wants to perform that task).
Results: R21 is an activation if the lcft half of Rule4.
L corrcsponds to the person.
(getting Runoff to work) corresponds to the task.
An activaiion of Eule 4 is created in the WS.
Cycle 113 -Deduce A Model of Dialogue Deduce applies Rule4 to R21, Results: R41 (a O knows (L wants to perform (getting Runoff working)) is activated), Activation of Rule 4 deleted from WS.
Cycle 114 -Match Match R4-11 with H1 = Hclpoo wants to perform a tesk.
Rcsults: R4X 1 is an activation of H2, L corrcsponds to tho Hclpcc.
(Getting Runoff working) corresponds to the task.
Cycle 1-15 -Match Match RO1 with left half of RuleVa = If 0 knows (a person says (hc cxccutcs a process with an instrument)), then 0 knows (I'hat person is saying (he pcrforms (the a-xecution of the procoss) with thc instrument).
Rc~ults: RO-1 is on activation of tha left half of RuloVa, L corrcspondo to thc person.
(getting Runoff working) corresponds to (... executes a process )...
How car respond^ t,o tho instrument (i.e., the means).
An activation of Rule Va is croatod in the WS.
Cycle 116 -Deduce Deduce applies AuleVa to RO1.
Rcsults: RVa-1 (= 0 knows ( 1 asks (how do I perform (getting.Runaf# working)))? is activated)..
Activation of Rule Va deleted frorii WS.
Cycle 117 -Match A Model of Dtalogua Match RVe3 with Left,hatf of RutaZa = If 0 knows (apcrson asks how to perform a ta$k), then 0 knows (that porson wants O to onable him to perform that task).
RosuIf S: RVa1 is an activation of tho left half of Ru~B~B, L corrcsponds to that person.
(L gcttiny, Runoff to work) corscspondr to the task.
An activatian of Rule 2a is created in the WSc Dcducci applies Rule2a to RVa1 Rcsulto: R21 (= 0 knows (L wants 0 to enable him (L) to get Runoff working) is activated).
Activation of Rule 2a dcleted from WS.
Cycle 119 --Match Match R2a1 with H11 = Hclpce wants Helper to enable him toto a task, Rceults: 0 corrcspofdis to H'elpcr.
L corrcsponds to Hclpce.
(L getting Runoff to work) corrcsponds to tho task.
Cycle 1-20 -Protcus H1, H2 & HI1 provide .Protcus with enough evidence to create an activation of the Helping-Garnc.
Rcsul ts: An activation of the Helping-game is created in the WS.
Cycle 1-21 -Dialogue-game Manager Thc-presence of an activation of a Dialogue-game in the WS leads to the calling of thc processor spccializcd in this.catcgory of knowledge.
The Dialogue-game Manager (OGM) makes use of a set of correspondences that have already been established by the matches which led to the activations of HI, H2, and H11: A Modol of Dialogue Previous Rosults: L corresponds to Hclpee 0 corresponds to Helper Case13 (= (Runoff working)) corresponds to the task.
Once ar) activation of a eamc has led to the calling of the DGM, the Manager accesses thc cntira collection of information about tho game from the LTM representation bf it.
Tho itcms of knowledge in tho game, with tho particular parameters of this situation substituted apprcrpriatcly, fall into one of three categories: 1.
Alrcady known to hearor (e.g.
HI, H2 & H11).
Items in this category are simply icnorod, since it serves no purpose to re-assert them.
2. Contradict knowlcdgc already held by the hearer (e.g., if 0 already k,ncw, for sure, that t knew all about Runoff).
If any item falls into this category, the hypothesis that this game is active is simply abandoned as inaccurate.
3. Mtms ncithcr previously known or contradicted (the majority of the contcnt of the typical case).
In this case, tho DGM creates activations of thcsc items to represent the collection of implitit knowledge that follows from a recognition of the proposed game.
Rcsul ts: Activations are created for all of the following: H5 = L wants to be able to get (Runoff workin$) himself.
(being able to get (Runoff working) is a subgoal to performing (Runoff working)).
H6 = 0 is able to enable L to gct (Runoff working).
H8 = O is able to want to enablc [i.e.
is willing to enable] L to gct (Runoff working).
101.C is permitted to get (Runoff working).
Thc game also contains a collection of knowledge having to do with the conduct of thc game, rather than what the parllcipantsneed to successfully evoke it.
These items of knowledte and goals are also established as activations by thaDGM at this time: Resutts: Activations are created or all of the following: HGx1 = L knows of an execution scene (XS/HE).
HGx2 = L knows that if he perceives a particular terminal state of this scene, this will satisfy his wanting to perform the task.
HGX2C= (Thus) L wants to perceive this terminal state A Modcl of Dialogue of XS/HE.
An ACTION/GOODis mACTION within the specification of XS/HE whi'ch occurred in thc past.
HGX3 = L knows that he has pcrceivc tho ACTIQN/GOOD.
HGX4 = L knows ho expected to perceive it.
HGXS = L wantcd to pcrccivc it.
An ACTlON/BAD is an ACTION within the specification of XS/HE which has not occurred in thc past, HGX6 z L knows he has not perceived the ACTION/BAD.
HGX7 = L knows hc expcctcd to perceive it, HGXB = L knows hc wanted to pcrccivc it.
(perceiving the ACTION/BAD is a subgoal to perceiving the dcsircd tcrminal state of XS/HE).
HGX9 = L wants to describe the ACTION[s]/GOOD [to 01.
(this describing is a subgoal to (0 enables L to pcrform the task) HGXlO= L wants to describe the ACTION[s]/BAD [to 01.
(this describing is a subgoal to (0 enables L to perform the task) Proccsscs, procedures, ccremonics, and the like, may have an associated execution scenc, which is in effect an abstract description of a complete performance of the object dcscribcd.
The cxccuiion scene rcscmblcs a flowchart, with the boxes being actions of onc of thc active agents i'nvolvcd.
In this case, the execution scenc is for Runoff, a program which reads a file specified by the uscr, formats the contents of the file, and outputs this formated material onto cithcr the line printer or another file.
The execution scene of Runoff, as stored in our model, is similar to figure A-1.
A Model of Dialogue START I XSA4 a Uscr initiates Runoff I 1 XSA-2 = Runoff requests a file name.
I \I XSA-3 = User types a file name.
I I XSA-4 = Runoff requosts a confirnlation.
I I [one of thc fol louing two paths is taken:] I I I I 1 = user types coninla.
XSA-21 = user types carriage return.
1 I
I I XSA-12 = Runoff reads (grabs) XSA-22 = Runoff reads (grabs) input f i le.
input file.
I I 1 I XSA-13 R~~nof f rec~c~csts output XSA-23 ~unof f produces (gives) f i le nanle.
output on l irle printer.
I I I I XSA-14 User types output f i l e nanle.
XSA-24 = Runoff tgpes DONE.
I I I F 1.N I SH XSA-15 .= Runoff' produces (gives) output' on output fi le.
I I XSA-16 = Runofftypes DONE.
1 FI
I\J 1 SH Figure A-1.
XS/RO. THE RUNOFF EXECUTION SCENE.
A Model of Dialogue Cycle 1-22 -Proteus As a result of the numerous rcfarcncar to Runoff and XS/HE, tho activationo for thcsc two conccpts are "highly active".
~onsc~ucntl~, when Protcus io called, tho eonccpt XSjRO (the execution sccno of tho Runoff proccos) bocarnoo active and, duo to its similarity to XSfHE, is taken to be equivalent to it.
Sinca XS/RO is more dctailad (contein~ more information) than XS/HE, XS/RO is used in place if XS/HE in all of the expressions introduced in Cycle 1-21.
Something wo pnsscd ovcr in thc earlier examples was tha issuo of vyhcn tho modcl is willine to stop processing a given piece of tcxl and eo on la the nexf onc.
It scorns inappropriate lo demand that tho rncdol wring all possiblo information end deductions out of each utterance.
Yet there must bo soms demands mada on tho assimilation.
An altcrnatc form of tho question is: what ncedr of his own does the hearer see the incoming text as potentially satisfyinc?
We have taken the position that a hearer (tentatively) understands an utterance, when he successfully views it as serving some goal imputed to the spcskcr.
That is, to a first approximation, the hearer has assimilated an utterance if hc fisures out why thc spcakcr said it.
Thc modcl has already established (HCX9 and HGX10, above) that L wants to dcscribc (implicitly, to 0) certain action; in XS/RO bat L expected to perceive, and in sonw csscs, did, Thus, in thc following uttcrsnces, we see the modol matching the parsed input structure with one of thcsc two goals, thus it is sccn as bcing in service of a goal of thc spcakcr, and need bc examined no further (for tho time being).
In thc subscqucnl example, we use two ncw rules: RS (Satisfaction) and RQ (Quicsccncc).
RS dctcrrnincs when an uttcranco is sccn to satisfy a speaker's goal and RQ, rcscts to this dcfectcd satisfaction by marking the utterance quicsccnt.
(Opcrationolly, this means that in tho next cycle, thc Parser is called to input the next scgmcnt af text).
Wc resume the example at the point where the first segment has been marked quicsccnt, and the Parser is called.
Results: Casc9a = 0 pcrceivcs that L declares (I executed it).
Cycle 2-2 -I-processor A Model of Dialogue Rcsults: Case9a .I 0 perceives that L declares (L executed it).
Cycle 2-3 vIt-processor Tha case frame aasociatcd with the concept "execute" epecifieo that the object canccpt is to bo a procces.
The it-processor determines this and examines thc WS to scc if'it contains any active concept which is a process.
In this case, therc is only ono: Runoff.
Since this caso is so clcerly unambicuous, this simplo-minded reqolution scheme is adcqu~lc to tho tmk.
(We hsva.outlinos for moro ambitious resolution ticherncs, but tho dialoeucs we havc examined havo not yot rcquirod them).
Rcsults: Case9a = 0 pcrceivcs that L declares (L executed Runoff).
Cycles 2-4 & 2-5 -Match and Dcducc As in cycles 1-3 and 1-4, Rule0 is used to transform "perceive" into "know".
Results: ROla = 0 knows that L declares (L executed Runoff).
Cycle 2-6 -Match Two.itcms in tho WS arc matched to thc two parts of the left half of RS: RS = If a pcrson knows a proposition and hc knows that a secbnd person wants that proposition, then the first person knows that the realization of the proposition satisfies the second person's desire for it.
Results: ROla = (0 knows (L declares))... corresponds to (a pcrson knbws a proposition) 0 corresponds to the first pcrson.
(i declarer; )... corresponds to the proposition, 0 knows'~i~9 = (L want (L describe action/good)) corresponds to (he knows-thc second person wants that proposition).
L corresponds to the secondpersori.
(L describe action/go.od) corresponds to the proposition.
A Model of Dialogue (L dcclares (L exccutcd Runoff)) corresponds to (L dcscri be acti on/good) dcclarc corrcsponds to describe (L executcd Runoff) corrcsponds to ((User initiate Runoff) past) thus, (L oxccutcd Runoff) corresponds to action/good An activation of RulcS is croatcd in the W$, Cycle 27 -Deduce Doduco applies RS to R0-la and HGX9.
Activation of Rule S deleted from WS Rcsults: RSla (= 0 knows ((L dcclarcs )... satisfies (1 wants (L describe )))... is activated).
Cycle 2-8 -Match Match RSla with left half of RQ.
RQ = If a pcrson knows ((person2 utteks something) satisfies (pcrson2 wants something else)) then thc first pcrson knows that ho comprehends (pcrson2 uttering something) as constituting the somcthing clsc that pcreon2 wanted.
Results: RS-la corrcsponds to the icft half of RQ.
0 corrcsponds to the first person.
(pcrson2 utters sorncthmg) corresponds to (L dcclarcs (1 exccutcd Runoff)) L corresponds to pcrson 2 (L cxccutcd Runoff) corrcsponds to sorncthing.
(person2 wants something clsc) corresponds to (L wants (L dcscri be ))...
(L describe action/good) corresponds to something else.
An activgtion of RQ is created in the WS.
AR activation of RQ is createdinthe WS.
Cycle 2-9 -Dcduce Dcduce applies RQ to RSla.
A Model of Dialogue Results: RQla = 0 knows (0 comprehends (L declare (t execute Runoff)) as constituting (L describe aition/~ood)) Activation of Ru1e.Q deleted from WS.
Cyclcs 3-1 to 3-8 This set of cycles are exactly parallel to the preceding set.
The structure implantcd into WS by the Parser is Case/Sb (= 0 pcrccivcs (L declares (it grabbed filelmine))) The It-processor translates "it" to "Runoff".
Rule0 is used by Match and Deduce to rcplace "pcrccivc" with "know".
Match and Deduce then apply RS and RQ, to determine that CasefSb is compr'ehendcd as constituting another instance of (L describes action/good) [XSA-12 or XSA-22, Runoff reads (grabs) input file] Cyclcs 41 to 4-8 Similarly, tho Parser-produced structure: CaseJ9c (= itsaid done) is also found to be comprchendod as constituting an instance of (L describes actionlgood) [XSA16 or XSA;24, Runoff types DONE].
Cyclcs 51 to 510 A ncarly identical sequence of cycles applies to the next Paiser-input: Case/Sd (= 0 perceive L declare (It did not produce output),) cxccpt an additional MatchfDeduce cycle is needed to apply Rp: Rp = If a persondeclares that something didn't happen, then he is declaring he did-not perceive it happen.
In this case, however, we determine that Case/Sd is comprehended as constituting an instance of (L wants (L describe action/bad)) [XSA-15 = Runoff produces output on output file -or -XSA-23 = Runoff produces output on line printer].
A Model of Dialogue 54 Whqt wo havc nccn, then, is thc setting upaf the expectations that the speaker will (i.0.
wants to) dcscribc soma thincs that went right, and some that didn't.
The prcaoncc of thew oxpcctcltions ha6 cnsblcd the aseimil~tion of tho last four uttcranccs, leading to thc modclys awnrcncss that for L, stcps XSA-I, XSA-I2 or -22, end XSA-16 or -24 all procecdcd as cxpcctcd, but that L didn't pcrceivo Runoff producing any output.
Mcch~nisms outsidc the scapc of this oxamplo dctcrmina that XSA-15 (Runoff pr&duccs output on output file) was pcrccivable to L (had it occurrcd), but that XSA-23 (Runoff produccs output on tho line printcr) was not.
This leads to the concl~sion that XSA-23 probably was what had occurrcd, and thug lo the subsequant explanation from 0.
REFERENCES Austin, J.
L. How fo do things with words.
Cambridge, MA: Harvard Universify Press, 1962.
Bales, R.
F. /nferactive process ana/ysis, Cambridge, MA: Addison-Wesley, 1952.
Charniak, E.
Organization and inference in a frame-like system of common sense knowledge.
In -R.
Schank & B.
1. Nash-Webber (Eds.), Theoretics/ issues in natura/ /anguafe processing.
Cambridge, MA: Bolt, Beranek and hewman, Inc., 1975.
Clark, H.
H., & Lucy, P.
Understanding what is meant from what is said: A study in conversationally convcyed requests.
Journa/ of Verbs/ Learning and Vcrba/ Behavior, 1975,/4,56-72.
Erman, L.
D, Fcnncll, R.
D., Lesser, V.
Re,& Rcddy, D.
R. System organizations for s ccch undc r st andi ng.
Proceedings of the Third /nternationa/ Joint Conference on Artificial /nfel/i~encc.
Palo Alto, CA: Stanford University, 1973.
Gordon, D., & Lakoff, G.
Conversational postulates.
Papers from the Seventh Regionid Meeting, Chicago Linguistic Society, 1971.
Grice, H.
P. Loeic and conversation.
In P.
Cole R, J.
L. Vargan (Eds.), Synt@x and semantics.
New York: Academic Press, 1975.
Labov, W., 81 Fanshel, 0.
Therapeutic discourse.
Psychotherapy as conversation.
Draftcopy, 1974.
Lcvin, Jo A.
Protcus: An activation framework for cognitive process models.
Unpublished doctoral discertation, San Diego, CA: Univ.
of Calif, San Oiego, 1976.
Lcvin. J.
A*, & Moore, J.
A. Dialogue-games: A process model of natural language i ntcr ac t i on.
Proceedings of the A/SB Summer Conference.
Edinburgh, Scotland, July 1976.
Lovin, Jo A*, f5 Moore, J.
A. Dialogue Gamcs: Meta-communication Structures for Natural Language Interaction (ISIIRR-77-53), Marina del Roy, CA: Information Scienccs Institute, 1977.
Alsoinproso,CognitiveScienc&s, 1977,//4/.
Mann, W.
C. Why things are so bad for the computer-naive user (ISI/RR-75-32).
Marina del Rey, CA: Information Sciences Institute, 1975.
Mann, W.
C., Moore, J.
A*, & Levin, J.
A. A comprehension model for human d1.a 1 ogue.
Proceedings of the Fifth /nternaliona/ JoinY Conference on Artificia//nte//igence.
Carnbridge,MA:MIT, 1977,forthcorning.
Minsky, M.
A framework for representing knowledge.
In P.
H. Winston (Ed.), The ps~chologyofcomputervision.
NewYork:McGraw-Hill, 1975.
Newell, A.
Production systems: Models of control structures.
In W.
G. Chase (Ed.), Visual intormalion processing.
New Y or k: Academic Press, 1 973.
Ncweli, A*, & Simon, H.
A. Human problem so/vJ,?g.
Englewood Cliffs, NJ: Prentice-Hall, 1972.
Norman, D.
A., Rumelhart, D E.
& the LNR Research Group.
Exp/oralions in cognition.
San Francisco: W.
H. Freeman, 1975.
Riegcr, C.
The commonsense algorithm as a basis for computer models of human memory, inference, belief and contextual language comprehension.
In R.
Schank & E.
L. Nash-Webber (Eds.), Theoretica/ issues in natura/ /anguage processing.
Cambridge, MA: Bolt, Beranek and Newman, Inc., 1975.
Rurnclhart, D.
E. Notes on a schema for stories.
In 0.
G. Bobrow & A.
Collins (Ed s.), Representation and understanding: Studies in cognitive science.
New York: Academic Press, 1975.
Sacks, H., Schegloff, E.
A., & Jefferson, G.
A simplest systematics for the organization of turn-taking for conversation.
Language, 1974,50, 696-735.
Schank, R.
C., & Abelson, R.
P. Scripts, plans and knowledge.
Paper presented at the Fourth International Joint Conferehcc on Artificial Intelligence, Tbilisi, USSR, August 1975.
Searle, J.
R. Speechacfs:Anessayint/lephi/osophyo//ang13'~ge.
Cambridge, England: Cambridge University Prcss, 1969.
Searle, 3.
R. Indirect speech acts.
In P.
Cole & J.
L. Morgan (Eds.), Syntax and semantics.
New York: Academic Prcss, 1975.
Shatz, M.
How young children respond to language: Procedures for anewering.
Papers and Reports on Child language Development, Palo Alto, CA: Stanford Univeroi ty, 1975.
Thorndyke, P.
W. Cognitive structures in comprehension and memory of narrative discourse.
Co,~nitivePtycho/ogy, 1977,9,77-110.
Wittgcn~tcin, L.
Philosophical inve~figations (3rd ed.).
New Y ~rk: Macmillan, 1958.
Woods, W.
A. Transition network grammars for natural language analysis.
Communicnf ions of the ACM, 1970, /3; 5 9 1,6 0 6 .

