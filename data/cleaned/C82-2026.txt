A LOGIC-ORI~TED ATN Grammar Knowledge as Part of the System's Knowledge Helmet Gust, Carola Reddig Institut of Applied Cemputer Science, Technical University of Berlin (West), Ku~f~rstendgmm 202, D-IO00 Berlin The eystem BACON (Berlin Autcmatle COnstruction for semantic Networks) is an experimental intelligent qaestion-answerlng system with a nataral la~uage interface based on single sentence input 1.
BEAST 1 SIREN I RUECK/ANSGEN Figure I: Structure of the BACON-system 1 This system has been developed in the project "Automatisehe Erstellung eemantischer Hetze" (Automatic construction of emantic networks) at the Institute of Applied Compuger Scienoe at the Technical University of Berlin.
The pro~eet was supported by the Ministry for Science and Technology (BMFT) of the Federal Republic of German~.
116 Explanations of the s~stems structure: BEAST "BErlin Automatic Semantic oriented Translation" is the language understanding component 2 SIREN "Semantic REpresentation and Net evaluator" is the knowledge base management component BACK performs the retranslation of the semantic representation into natural language to check correctness of understanding ANSGEN "ANSwer GENerator" translates the system °s reactions into natural language MSRL "Modal Semantic Representation Language" is the representation language of the BACON-system and therefore the center of the whole system• The syntax of MSRL is reou~sivly defined following the principles of common logical languages• The basic (finite) set of operators is derided into two disjoint subsets: tel~m~ers are operators which describe objects of the world of discalrse.
They include the term variables.
formelmakers describe the relations between these objects, between formulas or between objects and fol~ulas • An operator with its (possibly empty) list of argmnents constitutes a well formed MSRL-expression.
A very important concept of MSRL is the concept of sorts.
The set of sorts (proper names of sorts) induces a partition of the set of terms.
A partial ordering called "compatibility of sorts" induces a lattice str-cture on the set of sorts• By assigning a list of sorts (one sort for each argument place) called "sortal pattern" to each operator we get additional semantic constraints for MSR L expressions, The oonstructlon of the sortal pattern of an operator is based 2 An earlier implementation of this component has been presented at COLING 78: Habel/Rolllnger/Schmidt: "Machine translation of natural language into a modal representation language". 117 -on knowledge about the world of discourse.
It determines the semantic category of the operator's arguments.
The process of the assignment of meaning by BEAST is based on the corral classification of terms and the corral pattern of the operator.
This process performs a semantically correct assignment between the operator constituting the sentence and ~he terms being able to become arguments.
There have been some unaerlying principles/conditions which affected the special ATN formalism in BEAST: 1.
BF~ST should emphasize a semantical analysis which constitutes the relationship between the natural language sentence and Its meaning representation.
The aim is the creation of a MSRL expression that represents the meaning of the input sentence.
2. The Ex~mmar component should follow the "principle of minimal information"The process of translation tries to get along With as little information as possible.
Only if that does not work, more (not only explicate but also • implicit) Information contained in the sentence need to be discovered.
3. The ATN had to be pr0Ex~nmed in SXMULA since the rest of the system already existed in SXMULA.
Our AT~ formalism is founded on the formalism developed by Woods, uses ideas of the semantic ATSs and takes the described principles into account by some modifications, extentions and constraints.
We use an ATN compiling system which tranalates in a first step the ATN representation of the g~a~mar into a SIMULA program, and in a second step this 3XMULA representation together with the other components Is translated into an executable machine proE~aa.
The main feature5 of these AT~s ares they use In addition to syntactic categories semantic categories and constituents 118 that use semantic constraints to select the best pass through the network and they create semantic representations.
The fo~aaliem supports the treatment of alternatives at both sides: at the sour0~ . lan~uaRe by the possibility of alternative categories for the entries in the word form lexicon, and at the target language where alternatives related to a lemma refer to different sortal patterns of ooperators., R,qLItor I ~r~lk conditions T E ........
I @t I A~-BaSll L~sten, str~ng~l~ Figure 2: ATN compiling system The focus of our interest in future development is an integration of the ATN formali~n at a higher level, namely the level of the representation language MSRL itself, instead of level of the programming language SY~ULA.
For this purpose MSRL has to be extended to represent procedural struct~ee like A~Ns.
The main thing is that these structures are normal MSRL expressions, and therefore on the one hand they are manageble by the knowledge base (storable and retrievable) but on the other hand they are also evaluable.
Starting from the fact that the aTN represents the grammatical knowledge of the system we have the ability to handle this knowledge 119 Just like the knowledge about the world of disooursez to ask questions about it and to modify It.
In the same way we can represent the lexical knowledge in terms of the representation language.
Together with the extension described above there will 'be the possibility to handle prooedul'al lexical knowledge, especially in the case of ATHs to link a word in the lexicon with a sUbATH which has the task to perform the next part of the analysis when -triggered by the occu.rance of this word in the natural language sentence.
In ou~ lecture we will carry out the following points: the description of the ATN fomalism in BEAST the projected extensions of MSRL the consequences of these extensions on the system o oneept.
120 -

