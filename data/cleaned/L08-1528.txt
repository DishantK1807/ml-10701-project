<algorithm name="ParsCit" version="080917">
<citationList>
<citation valid="true">
<authors>
<author>Kim Binsted</author>
<author>Osamu Takizawa</author>
</authors>
<title>BOKE: A Japanese punning riddle generator</title>
<date>1998</date>
<journal>Journal of the Japanese Society for Artificial Intelligence</journal>
<volume>13</volume>
<pages>927</pages>
<contexts>
<context>tations, two main approaches have been explored. One is humor generation, where systems for generating usually quite simple forms of jokes, e.g. word play jokes, have been constructed (Binsted, 1996; Binsted and Takizawa, 1998; Yokogawa, 2001; Stark et al., 2005). The second is humor recognition, where systems to recognize whether a text is a joke or not have been constructed (Taylor and Mazlack, 2005; Mihalcea and Strappa</context>
</contexts>
<marker>Binsted, Takizawa, 1998</marker>
<rawString>Kim Binsted and Osamu Takizawa. 1998. BOKE: A Japanese punning riddle generator. Journal of the Japanese Society for Artificial Intelligence, 13(6):920– 927.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kim Binsted</author>
<author>Benjamin Bergen</author>
<author>Seana Coulson</author>
<author>Anton Nijholt</author>
<author>Oliviero Stock</author>
</authors>
<title>Carlo Strapparava, Graeme Ritchie, Ruli Manurung</title>
<date>2006</date>
<journal>IEEE Intelligent Systems</journal>
<volume>21</volume>
<location>Helen Pain, Annalu Waller, and</location>
<contexts>
<context>search on humor has been done in many different fields, such as psychology, philosophy, sociology and linguistics. For a good introduction and overview of humor in automatic language processing, see (Binsted et al., 2006). When it comes to computer implementations, two main approaches have been explored. One is humor generation, where systems for generating usually quite simple forms of jokes, e.g. word play jokes, h</context>
</contexts>
<marker>Binsted, Bergen, Coulson, Nijholt, Stock, 2006</marker>
<rawString>Kim Binsted, Benjamin Bergen, Seana Coulson, Anton Nijholt, Oliviero Stock, Carlo Strapparava, Graeme Ritchie, Ruli Manurung, Helen Pain, Annalu Waller, and Dave O’Mara. 2006. Computational humor. IEEE Intelligent Systems, 21(2):59–69.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kim Binsted</author>
</authors>
<title>Machine Humour: An Implemented Model of Puns</title>
<date>1996</date>
<tech>Ph.D. thesis</tech>
<institution>University of Edinburgh</institution>
<location>Edinburgh, United Kingdom</location>
<contexts>
<context>mputer implementations, two main approaches have been explored. One is humor generation, where systems for generating usually quite simple forms of jokes, e.g. word play jokes, have been constructed (Binsted, 1996; Binsted and Takizawa, 1998; Yokogawa, 2001; Stark et al., 2005). The second is humor recognition, where systems to recognize whether a text is a joke or not have been constructed (Taylor and Mazlack</context>
<context>available in English or very few other languages, so generating jokes in other languages may be more difficult. Automatic humor generation methods that report fairly successful results (for instance (Binsted, 1996)), as opposed to the “not that funny” results that seem to be the norm, often make use of quite detailed semantic lexicons and similar semantic resources. We have not used any resources with structur</context>
</contexts>
<marker>Binsted, 1996</marker>
<rawString>Kim Binsted. 1996. Machine Humour: An Implemented Model of Puns. Ph.D. thesis, University of Edinburgh, Edinburgh, United Kingdom.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Grice</author>
</authors>
<title>Logic and conversation. Syntax and Semantics</title>
<date>1975</date>
<pages>3--41</pages>
<contexts>
<context> of generating jokes are presented, based on breaking Grice’s maxims of communication. We here use the presentation of the maxims from (Winterstein and Mhatre, 2005), though the source is originally (Grice, 1975). An example would be the maxim of quantity, one part of which states that you should be as informative as necessary to make your point clear. Breaking this while showing that you are doing it on pur</context>
</contexts>
<marker>Grice, 1975</marker>
<rawString>Paul Grice. 1975. Logic and conversation. Syntax and Semantics, 3:41–58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rada Mihalcea</author>
<author>Carlo Strapparava</author>
</authors>
<title>Making computers laugh: Investigations in automatic humor recognition</title>
<date>2005</date>
<booktitle>In Proceedings of HLT/EMNLP</booktitle>
<location>Vancouver, Canada</location>
<contexts>
<context>d and Takizawa, 1998; Yokogawa, 2001; Stark et al., 2005). The second is humor recognition, where systems to recognize whether a text is a joke or not have been constructed (Taylor and Mazlack, 2005; Mihalcea and Strapparava, 2005). This paper belongs in the first group. We try to generate a few different types of jokes. The main inspiration has been a paper with ideas on possible ways to generate jokes by breaking Grice’s max</context>
</contexts>
<marker>Mihalcea, Strapparava, 2005</marker>
<rawString>Rada Mihalcea and Carlo Strapparava. 2005. Making computers laugh: Investigations in automatic humor recognition. In Proceedings of HLT/EMNLP, Vancouver, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George Miller</author>
</authors>
<title>WordNet: An on-line lexical database</title>
<date>1990</date>
<journal>International Journal of Lexicography</journal>
<volume>3</volume>
<contexts>
<context>otty answer” type jokes. These are of the form “Are you a computer?” or a similar question, followedby“No, Iama&lt;adjective&gt;&lt;noun&gt;.”. Anadjective and a noun is randomly drawn from the words in WordNet (Miller, 1990; Miller, 1995), thus producing a nonsense answer which can be funny. It is a one trick pony though, so while generating many of these jokes is easy it is not funny. It can be adapted to many other ty</context>
</contexts>
<marker>Miller, 1990</marker>
<rawString>George Miller. 1990. WordNet: An on-line lexical database. International Journal of Lexicography, 3(4):235–312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George Miller</author>
</authors>
<title>WordNet: a lexical database for English</title>
<date>1995</date>
<journal>Communications of the ACM</journal>
<volume>38</volume>
<contexts>
<context>ype jokes. These are of the form “Are you a computer?” or a similar question, followedby“No, Iama&lt;adjective&gt;&lt;noun&gt;.”. Anadjective and a noun is randomly drawn from the words in WordNet (Miller, 1990; Miller, 1995), thus producing a nonsense answer which can be funny. It is a one trick pony though, so while generating many of these jokes is easy it is not funny. It can be adapted to many other types of questio</context>
</contexts>
<marker>Miller, 1995</marker>
<rawString>George Miller. 1995. WordNet: a lexical database for English. Communications of the ACM, 38(11):39–41.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Push Singh</author>
</authors>
<title>The public acquisition of commonsense knowledge</title>
<date>2002</date>
<booktitle>In Proceedings of AAAI Spring Symposium on Acquiring (and Using) Linguistic (and World) Knowledge for Information Access</booktitle>
<location>Palo Alto, California</location>
<contexts>
<context>iki/Main Page lates the “be relevant” principle. We have also implemented the “strange act – apology” method. It first selects a word signifying a place by looking through the Open Mind Common Sense (Singh, 2002) data for statements like “&lt;place&gt; is a place”. It then collectsthingsrelatedtosuchaplacebylookingforstatements of the form “[you can] find a &lt;thing&gt; in a &lt;place&gt;”. If at least two things are found, </context>
</contexts>
<marker>Singh, 2002</marker>
<rawString>Push Singh. 2002. The public acquisition of commonsense knowledge. In Proceedings of AAAI Spring Symposium on Acquiring (and Using) Linguistic (and World) Knowledge for Information Access, Palo Alto, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeff Stark</author>
<author>Kim Binsted</author>
<author>Benjamin Bergen</author>
</authors>
<date>2005</date>
<contexts>
<context>red. One is humor generation, where systems for generating usually quite simple forms of jokes, e.g. word play jokes, have been constructed (Binsted, 1996; Binsted and Takizawa, 1998; Yokogawa, 2001; Stark et al., 2005). The second is humor recognition, where systems to recognize whether a text is a joke or not have been constructed (Taylor and Mazlack, 2005; Mihalcea and Strapparava, 2005). This paper belongs in t</context>
</contexts>
<marker>Stark, Binsted, Bergen, 2005</marker>
<rawString>Jeff Stark, Kim Binsted, and Benjamin Bergen. 2005.</rawString>
</citation>
<citation valid="true">
<title>Disjunctor selection for one-line jokes</title>
<date>2005</date>
<booktitle>In Proceedings of INTETAIN</booktitle>
<pages>174--182</pages>
<location>Madonna di Campiglio, Italy</location>
<marker>2005</marker>
<rawString>Disjunctor selection for one-line jokes. In Proceedings of INTETAIN 2005, pages 174–182, Madonna di Campiglio, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>JuliaTaylorandLawrenceMazlack</author>
</authors>
<title>Towardcomputational recognition of humorous intent</title>
<date>2005</date>
<booktitle>In Proceedings of Cognitive Science Conference</booktitle>
<pages>2166--2171</pages>
<location>Stresa, Italy</location>
<marker>JuliaTaylorandLawrenceMazlack, 2005</marker>
<rawString>JuliaTaylorandLawrenceMazlack. 2005. Towardcomputational recognition of humorous intent. In Proceedings of Cognitive Science Conference 2005 (CogSci 2005), pages 2166–2171, Stresa, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans Wim Tinholt</author>
<author>Anton Nijholt</author>
</authors>
<title>Computational humour: Utilizing cross-reference ambiguity for conversational jokes</title>
<date>2007</date>
<booktitle>In CLIP</booktitle>
<location>Camogli, Italy</location>
<contexts>
<context>tems that report success figures generally also achieve quite poor performance. A nice application of using faulty anaphora resolution to generate jokes for example achieved 15% recall and precision (Tinholt and Nijholt, 2007). It may be possible to use the joke generation as a helpful tool for making good jokes though, since many of the jokes could be made quite a bit funnier by a little human intervention. Many jokes fa</context>
</contexts>
<marker>Tinholt, Nijholt, 2007</marker>
<rawString>Hans Wim Tinholt and Anton Nijholt. 2007. Computational humour: Utilizing cross-reference ambiguity for conversational jokes. In CLIP 2007, Camogli, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Winterstein</author>
<author>Sebastian Mhatre</author>
</authors>
<title>Logical forms in wit</title>
<date>2005</date>
<booktitle>In Computational Creativity Workshop of IJCAI</booktitle>
<institution>University of Edinburgh</institution>
<location>Scotland, UK</location>
<contexts>
<context>in the first group. We try to generate a few different types of jokes. The main inspiration has been a paper with ideas on possible ways to generate jokes by breaking Grice’s maxims of communication (Winterstein and Mhatre, 2005). To the best of our knowledge, most of these ideas have not been implemented before. We implement and evaluate some of them and some other similar joke generation methods. 2. Inspirational Theory In</context>
<context>ignalling that this is done intentionally. Several possible ways of generating jokes are presented, based on breaking Grice’s maxims of communication. We here use the presentation of the maxims from (Winterstein and Mhatre, 2005), though the source is originally (Grice, 1975). An example would be the maxim of quantity, one part of which states that you should be as informative as necessary to make your point clear. Breaking </context>
<context>cult with today’s language technology). The four subsections here relate directly to Grice’s maxims, and the generation methods there are based on or inspired by the example jokes and discussions in (Winterstein and Mhatre, 2005). The next section deals with the more detailed suggestions from that paper, which are based on the formal analysis of poor utterances therein. We have tried to make use of only readily available res</context>
<context>e false, or for which you lack adequate evidence”. In this category we generate sarcastic answers to questions aboutplaces. Wecallthistypethe“falseexplanation”. This follows the pattern presented in (Winterstein and Mhatre, 2005) that quotes the movie Casablanca: “What brought you to Casablanca?” “My health. I came to Casablanca for the waters.” “The waters? What waters? We’re in the desert.” “I was misinformed.”. These are </context>
<context>teresting jokes. Example of a generated joke: “Why did you come to Hong Kong? Because of the spectacular Swedes here. But there are no Swedes here in Hong Kong?! You don’t say?” Also as suggested in (Winterstein and Mhatre, 2005), we generate the “snotty answer” type jokes. These are of the form “Are you a computer?” or a similar question, followedby“No, Iama&lt;adjective&gt;&lt;noun&gt;.”. Anadjective and a noun is randomly drawn from </context>
</contexts>
<marker>Winterstein, Mhatre, 2005</marker>
<rawString>Daniel Winterstein and Sebastian Mhatre. 2005. Logical forms in wit. In Computational Creativity Workshop of IJCAI 2005, University of Edinburgh, Scotland, UK.</rawString>
</citation>
</citationList>
</algorithm>

