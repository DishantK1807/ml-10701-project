Ellipsis Resolution with Underspecified Scope Michael Schiehlena0 Institute of Natural Language Processing Azenbergstr.
12 70174 Stuttgart Fed.
Rep. of Germany mike@ims.uni-stuttgart.de Abstract The paper presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory).
It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation.
Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al.(1991) as well as a problem noted recently by Erk and Koller (2001).
1 Introduction
Explicit computation of all scope configurations is apt to slow down an NLP system considerably.
Therefore, underspecification of scope ambiguities is an important prerequisite for efficient processing.
Many tasks, like ellipsis resolution or anaphora resolution, are arguably best performed on a representation with fixed scope order.
An underspecification formalism should support execution of these tasks.
This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discourse Representation Theory (UDRT) (Reyle, 1993), so that both ellipsis and anaphora resolution can work on the underspecified structures.
a1 Many thanks for discussion and motivation are due to the colleagues in Saarbrücken.
Several proposals have been made in the literature on how to integrate scope underspecification and ellipsis resolution in a single formalism, e.g.
Quasi-Logical Forms (QLF) (Crouch, 1995) and the Constraint Language for Lambda Structures (CLLS) (Egg et al., 2001).
That work has primarily aimed at devising methods to untangle quantifier scoping and ellipsis resolution which often interact closely (see Section 6).
To this end, description languages have been modelled in which the disambiguation steps of a derivation need not be executed but rather can be explicitly recorded as constraints on the final structure.
Constraints are only evaluated when the underspecified representation is finally interpreted.
In contrast, UDRT aims at providing a representation formalism that supports interpretation processes such as theorem proving and anaphora resolution.
Understood in this sense, underspecification often obviates the need for complete disambiguation.
Another consequence is, however, that the strategy of postponing disambiguation steps is in some cases insufficient.
A case in point is the phenomenon dubbed Missing Antecedents by Grinder and Postal (1971), illustrated in sentence (1): One of the pronoun’s antecedents is overt, the other is supplied by ellipsis resolution.
(1) Harry sank a destroyera2 and so did Bill and theya2a4a3 a5 both went down with all hands.
(Grinder and Postal, 1971, 279) Most approaches to ellipsis and anaphora resolution, e.g.
(Asher, 1993; Crouch, 1995; Egg et al., 2001), can readily derive the reading.
But consider: (2) Harry sometimes reads a book about a seabattle and so does Bill.
They borrow those books from the library.
Computational Linguistics (ACL), Philadelphia, July 2002, pp.
72-79. Proceedings of the 40th Annual Meeting of the Association for Example (2) still retains five readings (Are there two or even more books? are there one, two, or more than two sea-battles?).
An underspecified representation should not be committed to any of these readings, but it should specify that “a book” has narrow scope with respect to the conjunction.
Furthermore, an approach to underspecification and ellipsis resolution should make clear why this representation is to be constructed for the discourse (2).
While QLF fails the first requirement (a single representation), CLLS fails the second (triggers for construction).
(3) * A destroyera2 went down in some battle and a cruiser did too.
Harry sank both destroyersa2a4a3 a5. The discourse in (3) is not well-formed.
But none of the approaches mentioned can ascertain this fact without complete scope resolution (or ad-hoc restrictions).
The paper is organized as follows.
Section 2 gives a short introduction to UDRT.
Section 3 formulates the general setup of ellipsis resolution assumed in the rest of the paper.
Section 4 presents a proposal to deal with scope parallelism in an underspecified representation.
Section 5 shows how ellipsis can be treated if it is contained in its antecedent.
Section 6 describes a way to model the interaction of ellipsis resolution and scope resolution in an underspecified structure.
In section 7 strict and sloppy identity is discussed.
Section 8 concludes.
2 Underspecified
Discourse Representation Structures Reyle (1993) proposes a formalism for underspecification of scope ambiguity.
The underspecified representations are called Underspecified Discourse Representation Structures (UDRSs).
Completely specified UDRSs correspond to the Discourse Representation Structures (DRSs) of Kamp and Reyle (1993).
A UDRS is a triple consisting of a top label, a set of labelled conditions or discourse referents, and a set of subordination constraints.
A UDRS is (partially) disambiguated by adding subordination constraints.
A UDRS must, however, always comply with the following wellformedness conditions: (1) It does not contain cycles (subordination is a partial order).
(2) No label is subordinated to two labels which are siblings, i.e. part of the same complex condition (subordination is a tree order).
Figure 1 shows the UDRS for sentence 4 in formal and graph representation.
(4) Every professor found most solutions.
l0 l5: every( x, l1:, l2: ) l8: professor( x ) l9: solution( y ) l7: find( x, y ) x l6: most( y, l3:,l4: )y a0 a1a3a2, { a1a5a4a7a6 everya8a10a9a12a11 a1a14a13 a11 a1a16a15a18a17, { a1a16a4a7a19a20a1 a2, a1 a13 a6 a9 a1a3a21a22a6 professor a8a10a9 a17, a1a5a21a22a19a20a1 a13, a1a3a23a22a6 most a8a10a9a12a11 a1a3a24 a11 a1a3a25a26a17, a1a5a23a22a19a20a1 a2, a1 a24 a6a28a27, a1a3a29a22a6 solution a8 a27a30a17, a1a5a29a22a19a20a1a5a24, a1a5a31a7a6 find a8a10a9a12a11 a27a30a17 }, a1a16a31a7a19a20a1 a15, a1a16a31a7a19a20a1 a25 } a32 Figure 1: UDRS for sentence (4) For pronouns and definite descriptions another type of constraint is introduced, accessibility constraints.
a33a35a34 is accessible from a33a37a36 (a33a38a36 acc a33a35a34 ) iff a33a39a36a41a40 a33a14a34 or a42a43a33a35a44a46a45a47a33a38a36a48a40a49a33a14a44 and a33a35a44 is a right sibling of a33a50a34 in a condition expressing material implication or a generalized quantifier (Kamp and Reyle, 1993).
An accessibility constraint a33a51a36 acc a33a35a34 indicates that a33a35a34 is an anaphoric element or a presupposition; it thus can be used as a trigger for anaphora resolution and presupposition binding (van der Sandt, 1992).
To bind an anaphor a33a50a34 to some antecedent expression a33a38a44, a binding constraint (a33 a34a53a52a54 a33 a44 ) and an equality constraint between two discourse referents are introduced.
Binding constraints are interpreted as equality in the subordination order.
Any unbound presuppositions remaining after anaphora resolution (corresponding to accessibility constraints without binding constraints) are accommodated, i.e. they end up in an accessible scope position which is as near to the top as possible.
Figure 2 shows the UDRS for sentence (5).
Accessibility constraints are marked by broken lines, binding constraints are shown as squiggles.
(5) John revised his paper.
l7: revise( x, y ) l4: paper( y ) of( y, z ) l6: z = x l5: z l1: x l2: John( x ) l3: y l0 a0 a1 a2, { a1 a13 a6 a9, { a1a5a31 acc a1 a13, a1a16a15a7a6 John a8a10a9 a17, a1a5a15a7a19 a1 a13, a1 a24 a6 a27, a1a5a31 acc a1 a24, a1 a25 a6 paper a8 a27 a17, a1 a25 a19 a1 a24, a1a5a25a22a6 of a8 a27 a11 a1 a17, a1 a4 a6 a1, a1 a25 acc a1 a4, a1a5a23a22a6 gender a8 a1 a17a3a2 masc, a1a5a23a22a19 a1a5a4, a1 a23 a6 a1 a2 a9, a1 a23a5a4a6 a1 a13, a1a16a31a7a6 revise a8a10a9a12a11 a27a30a17 }, a1a16a31a7a19 a1a3a2 } a32 Figure 2: UDRS for sentence (5) 3 Ellipsis Resolution Sag (1976) and Williams (1977) have argued convincingly that VP ellipsis should be resolved on a level where scope is fixed.
Dalrymple et al.(1991) distinguish two tasks in ellipsis resolution: 1.
determining parallelism, i.e. identifying the source clause a7 a8 (the antecedent of the ellipsis), the parallel elements in the source clause a9 a8 a36a11a10a11a12a11a12a11a12a13a10 a9 a8 a14, the parallel elements in the target (i.e.
elliptical) clause a9a16a15 a36 a10a11a12a11a12a11a12a17a10 a9a18a15 a14, and the nonparallel elements in the target a19 a15 a36 a10a11a12a11a12a11a12a13a10 a19 a15a20, 2.
interpreting the elliptical (target) clause a7 a15, given the interpretation of a7 a8 a10 a9 a8 a36 a10a11a12a11a12a11a12a13a10 a9 a8 a14 a10 a9a18a15 a36 a10a11a12a11a12a11a12a21a10 a9a22a15 a14 . The paper does not have much to say about task 1.
Rather, some “parallelism” module is assumed to take care of task 1.
This module determines the UDRS representations of the source clause and of the source and target parallel elements.
It also provides a bijective function a23 associating the parallel labels and discourse referents in source and target.
For task 2 we adopt the substitutional approach advocated by Crouch (1995): The semantic representation of the target a7 a15 is a copy of the source a7 a8 where target parallel elements have been substituted for source parallel elements (a7 a15a25a24 a7 a8a17a26 a9 a8 a36a28a27 a9a18a15 a36a29a10a11a12a11a12a11a12a13a10 a9 a8 a14 a27 a9a18a15 a14a31a30 ).
In contrast to Higher-Order Unification (HOU) (Dalrymple et al., 1991) substitution is deterministic: Ambiguities somehow cropping up in the interpretation process (i.e.
the strict/sloppy distinction) require a separate explanation.
4 Scope
Parallelism It has frequently been observed that structural ambiguity does not multiply in contexts involving ellipsis: A scope ambiguity associated with the source must be resolved in the same way in source and target.
Sentence (6) e.g. has no reading where all professors found the same solution but the students who found a solution each found a different one.
(6) Every professor found a solution, and most students did, too.
Scope parallelism seems to be somewhat at odds with the idea of resolving ellipses on scopally underspecified representations.
If the decisions on scope order have not yet been taken, how can they be guaranteed to be the same in source and target?
The QLF approach (Crouch, 1995) gives an interesting answer to this question: It uses re-entrancy to propagate scope decisions among parallel structures.
In sentence (6), we see that a scope decision can resolve more than one ambiguity.
In UDRT, scope decisions are modelled as subordination constraints.
Consequently, sentence (6) shows that subordination constraints may affect more than one pair of labels.
Remember that in each process of ellipsis resolution a32 the parallelism module returns a bijective function a23 a2 which expresses the parallelism between labels and discourse referents in source and target.
As sentence (6) shows, a subordination constraint that links two source labels a33 a36 and a33 a34 also links the labels corresponding to a33a51a36 and a33a14a34 in a parallel structure a32, i.e. a23 a2a34a33 a33a38a36a28a35 and a23 a2a36a33 a33a35a34a17a35 for all a32 . Thus the subordination constraint does not distinguish between source label and parallel labels.
Formally, we define two labels a33 a36 and a33 a34 to be equivalent (a33 a36a38a37 a33 a34 ) iff a33a39a36 a24 a33a35a34a40a39 a42a41a32 a45a18a33 a33a38a36 a24 a23 a2a34a33 a33a14a34a17a35a42a39 a33a14a34 a24 a23 a2a36a33 a33a39a36a28a35a43a35a42a39 a42 a33a14a44a47a45 a33 a33 a36a38a37 a33 a44a45a44 a33 a44a46a37 a33 a34 a35 . Now we can model the parallelism effects by stipulating that a subordination constraint connects two equivalence classes a26a33 a36 a30a48a47 and a26a33a14a34 a30a48a47 rather than two individual labels a33 a36 and a33a35a34 . But every label in one class should not be linked to every label in the other class.
If a33a51a36 and a33a14a34 are the source labels, it does not make sense, and actually will often lead to a structure violating the wellformedness conditions, to connect e.g. the source label a33 a36 with some target label a23 a2 a33 a33 a34 a35 . Thus we still need a proviso that only such labels can be linked that were determined to be parallel to the source label in the same sequence of ellipsis resolutions.
We talk about a sequence here, because, as sentence (7) shows, ellipses may be nested.
(7) John arrived before the teacher did (1 arrive), and Bill did too (2 arrive before the teacher did (1 arrive)).
For the implementation of classes, we take our cues from Prolog (Erbach, 1995; Mellish, 1988).
In Prolog, class membership is most efficiently tested via unification.
For unification to work, the class members must be represented as instances of the representation of the class.
If class members are mutually exclusive, their representations must have different constants at some argument position.
In this vein, we can think of a label as a Prolog term whose functor denotes the equivalence class and whose argument describes the sequence of ellipsis resolutions that generated the label.
Such a sequence can be modelled as a list of numbers which denote resolutions of particular ellipses.
An empty list indicates that the label was generated directly by semantic construction.
We will call the list of resolution numbers associated with a label the label’s context.
For reasons that will become clear only in section 7 discourse referents also have contexts.
Although subordination constraints connect classes of labels, they are always evaluated in a particular context.
Thus a33a37a36 a40 a33a1a0 (or, more explicitly, a2a4a3 a45 a33a38a36 a26 a3 a30 a40 a33a1a0 a26 a3 a30 ) can be spelled out as a33a37a36 a26 a30 a40 a33a1a0 a26 a30 or a33 a36 a26a6a5 a30 a40 a33 a0 a26a6a5 a30, but never a33 a36 a26 a30 a40 a33 a0 a26a6a5 a30 because in this case context changes.
While scope resolution is subject to parallelism and binding is too (see Section 7), examples like (9) suggest that accommodation sites need not be parallel1.
(“The jeweler” is accommodated with wide 1Asher et al.(2001) use parallelism between subordination and accommodation to explain the “wide-scope puzzle” observed by Sag (1976).
Sentence (8) has only one reading: A specific nurse saw all patients.
(8) A nurse saw every patient.
Dr. Smith did too.
scope, but “his wife” is not.) (9) If Peter is married, his wife is lucky and the jeweler is too.
Ellipsis resolution works as follows.
In semantic construction, all occurrences of labels and discourse referents (except those in subordination constraints) are assigned the empty context (a26a30 ).
Whenever an occurrence of ellipsis is recognized, a counter is incremented.
Let a32 be the counter’s new value.
All parallel labels a33 and discourse referents a7 in the target are replaced by their counterparts in the source (a23 a2a34a33 a33 a35 and a23 a2a36a33a8a7 a35 ).
After substitution proper (a7 a15 a24 a7 a8a17a26 a9 a8 a36 a27 a9a18a15 a36 a10a11a12a11a12a11a12a13a10 a9 a8 a14 a27 a9a18a15 a14a31a30 ), the new resolution number a32 is added to the context of every label and discourse referent in a7 a15 . Finally, the non-parallel target elements (a19 a15 a36a11a10a11a12a11a12a11a12a13a10 a19 a15a20 ), if any, are added to the semantic representation of the target.
Figure 3 shows the UDRS for sentence (6) after ellipsis resolution.
a0 a1 a2a10a9 a11, { a1 a13 a9 a11 a6 everya8a10a9 a9 a11 a11 a1 a15 a9 a11 a11 a1 a24 a9 a11 a17, { a1 a13 a19a20a1 a29, a1a16a15 a9 a11 a6 a9 a9 a11, a1 a25 a9 a11 a6 professor a8a10a9 a9 a11 a17, a1 a25 a19a20a1 a15, a1 a4 a9 a11 a6 a27 a9 a11, a1 a4 a19a20a1 a29, a1a5a23 a9 a11 a6 solution a8 a27 a9 a11 a17, a1a5a23a7a19a20a1a16a4, a1a16a31 a9 a11 a6 find a8a10a9 a9 a11 a11 a27 a9 a11 a17, a1a5a31 a19a20a1 a24, a1 a31 a19a20a1a16a4 a1a5a21 a9 a11 a6 and a8 a1 a29 a9 a11 a11 a1 a29 a9a13a12a14a11 a17, a1a3a21a7a19a20a1a5a2 } a32 a1 a13 a9a13a12a14a11 a6 most a8a10a9 a9a13a12a15a11 a11 a1 a15 a9a13a12a14a11 a11 a1 a24 a9a13a12a15a11 a17, a1a16a15 a9a13a12a14a11 a6 a9 a9a13a12a15a11, a1 a25 a9a13a12a14a11 a6 student a8a10a9 a9a13a12a15a11 a17, a1a16a4 a9a13a12a14a11 a6a28a27 a9a13a12a14a11, a1 a23 a9a13a12a14a11 a6 solution a8 a27 a9a13a12a14a11 a17, a1a16a31 a9a13a12a14a11 a6 find a8a10a9 a9a13a12a14a11 a11 a27 a9a13a12a14a11 a17 }, Figure 3: UDRS for sentence (6) Erk and Koller (2001) discuss sentence (10) which has a reading in which each student went to the station on a different bike.
The example is problematic for all approaches which assume source and target scope order to be identical (HOU, QLF, CLLS).
(10) John went to the station, and every student did too, on a bike.
Erk and Koller (2001) go on to propose an extension of CLLS that permits the reading.
In the approach proposed here no special adjustments are needed: The indefinite NP is designated by labels that do not have counterparts in the source.
The subordination order is still the same in source and target.
5 Antecedent-Contained Ellipsis The elliptical clause can also be contained in the source, cf.
example (11).
(11) John greeted every person that Bill did.
In this case the quantifier embedding the elliptical clause necessarily takes scope over the source.
The treatment of this phenomenon in QLF and CLLS, which consists in checking for cyclic formulae after scope resolution, cannot be transferred to UDRT, since it presupposes resolved scope.
Rather we make a distinction between proposed source and actual source.
If the target is not contained in the (proposed) source, the actual source is the proposed source.
Otherwise, the actual source is defined to be that part of the proposed source which is potentially subordinated2 by the nuclear scope of the quantifier whose restriction contains the target.
6 Interaction
of Ellipsis Resolution and Quantifier Scoping Sentence (6) has a third reading in which the indefinite NP “a solution” is raised out of the source clause and gets wide scope over the conjunction.
In this case, the quantifier itself is not copied, only the bound variables which remain in the source.
Generally, a quantifier that may or may not be raised out of the source is only copied if it gets scope inside the source.
Thus the exact determination of the semantic material to be copied (i.e.
of the source) is dependent on scope decisions.
Consequently, in an approach working on fully specified representations (Dalrymple et al., 1991) scope resolution cannot simply precede ellipsis resolution but rather is interleaved with it.
Crouch (1995) considers ordersensitivity of interpretation a serious drawback.
In his approach, underspecified formulae are copied in ellipsis resolution.
In such formulae, quantifiers are not expressed directly but rather stored in “q-terms”.
Q-terms are interpreted as bound variables.
Quantifiers are introduced into interpreted structure only when their scope is resolved.
Since scope resolution is seen as constraining the structure rather than as an operation of its own, the QLF approach manages to 2a1 a13 is potentially subordinated to a1a16a15 in a UDRS iff the subordination constraint a1 a13 a19a20a1 a15 could be added to the UDRS without violating well-formedness conditions.
untangle scope resolution and ellipsis resolution.
In CLLS (Egg et al., 2001) no copy is made in the underspecified representation.
In both approaches, the quantifier is not copied until scope resolution.
But the Missing Antecedents phenomenon (1) shows that a copy of the quantifier must be available even before scope resolution so that it can serve as antecedent.
But this copy may evaporate later on when more is known about the scope configuration.
We will call conditions that possibly evaporate phantom conditions.
For their implementation we make use of the fact that a UDRS collects labelled conditions and subordination constraints in sets.
In sets, identical elements collapse.
Thus, a condition that is completely identical to another condition will vanish in a UDRS.
Phantom conditions only arise by parallelism; hence they are identical to their originals but for the context of their labels and discourse referents.
To capture the effect of possible evaporation, it suffices to make the update of context in a phantom condition dependent on the relevant scope decision.
To implement phantom conditions in a Prolog-style environment, we insert a meta-variable in place of the context and control its instantiation by a special constraint expressing the dependence on the pertinent subordination constraint (a conditional constraint).
Conditional constraints have the form a0 a24 a33 a33 a36 a40 a33 a34a2a1 a26a32a4a3 Ka30 a45 Ka35 where a0 is the context variable, a32 is a resolution number, and K is some context.
a0 a1a3a2 a9 a11, { a1 a13 a9 a11 a6 everya8a10a9 a9 a11 a11 a1a16a15 a9 a11 a11 a1a5a24 a9 a11 a17, { a1a14a13 a19a20a1a5a29, a1 a15 a9 a11 a6 a9 a9 a11, a1a3a25 a9 a11 a6 professor a8a10a9 a9 a11 a17, a1a5a25a22a19a20a1a16a15, a1 a4 a9 a11 a6a28a27 a9 a11, a1 a4 a19a20a1a5a2, a1 a23 a9 a11 a6 solution a8 a27 a9 a11 a17, a1 a23 a19a20a1 a4, a1 a31 a9 a11 a6 find a8a10a9 a9 a11 a11 a27 a9 a11 a17, a1 a31 a19a20a1a5a24, a1a16a31a7a19a20a1 a4 a1 a21a10a9 a11 a6 and a8 a1a5a29 a9 a11 a11 a1a5a29 a9a13a12a15a11 a17, a1 a21 a19a20a1 a2, a1 a13 a9 a12a15a11 a6 most a8a10a9 a9a13a12a14a11 a11 a1 a15 a9a13a12a15a11 a11 a1 a24 a9a13a12a14a11 a17, a1 a15 a9 a12a15a11 a6 a9 a9a13a12a14a11, a1a3a25 a9 a12a15a11 a6 student a8a10a9 a9a13a12a14a11 a17, a1 a4 a8a6a5 a17 a6a28a27 a8a6a5 a17, a1a3a23 a8a6a5 a17 a6 solution a8 a27 a8a6a5 a17a38a17, a1a5a31 a9 a12a15a11 a6 find a8a10a9 a9 a12a15a11 a11 a27 a8a6a5 a17a38a17 }, a5 a2 a8 a1 a4 a19a20a1 a29a8a7 a9a13a12a14a11 a6 a9 a11 a17 } a32 Figure 4: UDRS for sentence (6) Figure 4 illustrates a UDRS with a phantom condition (again representing sentence (6)).
A graphical l6: solution( y ) l1: every(x,l2:,l3: )x l0 X l8: before( l9, l9 ) Z l1: most(x,l2:,l3: )l1: every(x,l2:,l3: ) l4: professor( x ) l6: solution( y ) l1: most(x,l2:,l3: ) l4: student( x ) l7: find( x, y )l7: find( x, y ) l4: assistant( x )l4: student( x ) l7: find( x, y )l7: find( x, y ) l8: before( l9, l9 ) x x x l10: and( l11, l11) l5: y l5: y l5: y l6: solution( y ) l6: solution( y ) Y l5: y Z=[2|X] X=[1] Y=[2] 121 Figure 5: UDRS for sentence (12) representation of this UDRS can be seen in the first conjunct of Figure 5.
Contexts are marked by dotted boxes, conditional constraints by a dotted subordination link with an equation.
If the subsequent discourse contains a plural anaphoric NP such as “both solutions”, two or more discourse referents designating solutions are looked for.
Two such discourse referents are found (a0 a26a30 and a0 a33 a0 a35 ), but they will collapse unless a0 is set to a26a6a5 a30 . After consultation of the conditional constraint, the subordination constraint a33a2a1a47a40 a33 a0 is added.
If the subsequent discourse contains a singular anaphoric NP “the solution”, anaphora resolution introduces the converse subordination constraint a33a2a3a47a40 a33 a1 . Examples involving nested ellipsis (cf.
sentence (12)) require copying of context variables and conditional constraints.
(12) Every professor found a solution before most students did, and every assistant did too.
To copy a context variable a0, it is replaced by a new variable a4 . The conditional constraint evaluating a0 (a0 a24 a33 a33 a1 a40 a33 a0 a1 a12a11a12a11a12 a35 ) is copied to a conditional constraint evaluating a4 . In this constraint a4 is conditionally bound back to a0 : a4 a24 a33 a33 a1 a40 a33a39a36 a36 a1 a26 a32a4a3 a0 a30 a45 a0 a35, where a32 is the new resolution number and a33 a36 a36 is the top label of the source.
Consider the UDRS for sentence (12) in Figure 5 with three conditional constraints: a0 a24 a33 a33 a1 a40 a33a1a0 a1 a26a6a5 a30 a45 a26a30 a35, a5 a24 a33 a33 a1 a40 a33a39a36 a36 a1 a26a7a6 a30 a45 a26 a30 a35, and a4 a24 a33 a33 a1 a40 a33a38a36 a36 a1 a26a7a6 a3 a0 a30 a45 a0 a35 . The existential NP “a solution” is copied three times (if a33 a1 a40 a33 a0 ), once (if a33 a1a9a8 a33a1a0 and a33 a1 a40 a33a39a36 a36 ), or not at all (if a33 a1a10a8 a33a39a36 a36 ).
7 Strict
and Sloppy Identity In the treatment of strict/sloppy ambiguity, we follow the approach of Kehler (1995) which predicts five readings for the notorious example (13) from Gawron and Peters (1990).
(13) John revised his paper before the teacher did, and Bill did too.
In Kehler’s (1995) approach, strict/sloppy ambiguity results from a bifurcation in the process of ellipsis resolution: There are two ways to copy the binding constraint linking an anaphor with its antecedent if the antecedent is in the source3.
Let a33a38a36a13a33 Ka35 a45 a7 a33 Ka35 a24 a0 a33 Ja35, a33a39a36a17a33 Ka35 a52a54 a33a35a34a31a33 Ja35 be a binding constraint as introduced by anaphora resolution.
The sloppy way to copy the constraint is the usual one, i.e. updating the contexts with the new resolution number.
3If the antecedent of a pronoun is outside the source, the copied pronoun is bound to the source pronoun (strict interpretation), not directly to the antecedent, cf.
the reading missing in sentence (14) in which Bill will say that Mary helped Bill before Susan helped John.
(14) John will testify that Mary helped him before Susan did, and so will Bill.
l8: before( l9, l9 ) l1: x John(x) l3: z z=x l4: y paper(y,z) l7: revise( x, y ) l4: y paper(y,z) l7: revise( x, y ) l3: z z=x l8: before( l9, l9 )l3: z z=z[]l1: x teacher(x) l4: y paper(y,z) l7: revise( x, y ) l3[] l1: x teacher(x) l4: y paper(y,z) l7: revise( x, y ) l0 l10: and( l11, l11) l1: x Bill(x) z=z[1] l3: zl3[1] 21 1 Figure 6: UDRS for a reading of sentence (13) sloppy a33 a36 a26a32 a3 Ka30 a45 a7 a26a32a4a3 Ka30 a24 a0 a26a32a4a3 Ja30, a33 a36 a26a32a4a3 Ka30 a52a54 a33 a34 a26a32a4a3 Ja30 The strict way is to bind the variable of the copied pronoun to the variable of the source pronoun.
strict a33a39a36 a26a32a4a3 Ka30 a45 a7 a26a32a4a3 Ka30 a24 a7 a33 Ka35, a33a39a36 a26a32a4a3 Ka30 a52a54 a33a38a36a13a33 Ka35 Figure 6 shows the UDRS for a particular reading of sentence (13): John and Bill revised their own papers before the teacher revised John’s paper.
The pronoun is first copied strict (a0 a26a6a5 a30 a24 a0 a26 a30 a33 a24 a7 a26 a30 a35 ), then sloppy (a0 a26a7a6 a30 a24 a7 a26a7a6 a30 ), and finally strict again (a0 a26a7a6 a10 a5 a30 a24 a0 a26a6a5 a30 a33 a24 a7 a26 a30 a35 ).
We have tacitly assumed that source pronouns are resolved before ellipsis resolution.
No mechanism has been provided to propagate binding constraints in parallel structures.
But note that the order of operations in anaphora resolution is also constrained by structure: Anaphors embedded in other anaphors need to be resolved first (van der Sandt, 1992).
Ellipsis resolution may be considered on a par with anaphora resolution in this respect.
Anaphors can occur in phantom conditions as well (cf.
sentence (15)).
(15) John revised a paper of his before the teacher did, and Bill did too.
An extension of the copy rules for binding constraints along the lines of Section 6 is straightforward (see below).
If the embedding quantifier gets wide scope (a33 a2 a8 a33 a5 ), source and target constraints collapse (sloppy), or the target constraint asserts self-binding (strict).
sloppy a33a39a36a13a33 a0 a35 a45 a7 a33 a0 a35 a24 a0 a33a2a5 a35, a33a39a36a17a33 a0 a35 a52a54 a33a14a34a31a33a2a5 a35, strict a33a39a36a13a33 a0 a35 a45 a7 a33 a0 a35 a24 a7 a33 Ka35, a33a38a36a13a33 a0 a35 a52a54 a33a38a36a13a33 Ka35 a0 a24 a33 a33 a2a22a40 a33 a5 a1 a26 a32a4a3 K a30 a45 Ka35, a5 a24 a33 a33 a2a22a40 a33 a5 a1 a26 a32a4a3 J a30 a45 Ja35 There are, however, some problems with this extension.
See Figure 7 for the strict-sloppy-strict reading of sentence (15).
If the indefinite NP gets intermediate scope between “before” and “and”, the context variable a0 will be set to a26a30, a5 and a4 to a26a7a6 a30 . A clash follows, since a33a50a44 a26a7a6 a30 is bound both to a33a37a36 a26a7a6 a30 and a33a35a44 a26 a30 . To remedy this defect, we stipulate that resolving the strict/sloppy ambiguity may partially disambiguate the scope structure: If in the course of resolving a particular ellipsis several anaphors are copied with different choices in the strict/sloppy bifurcation, the conditional constraints are evaluated so that the anaphors cannot turn out to be the same.
This condition ensures that in the strict-sloppy-strict reading illustrated in Figure 7 the indefinite NP gets narrow scope under “before”.
8 Conclusion
The paper has presented a new approach to integrate ellipsis resolution with scope underspecification.
In contrast to previous work (Crouch, 1995) l7: revise( x, y ) l7: revise( x, y ) l1: x teacher(x) l4: y paper(y,z) l3: z z=x l1: x John(x) l8: before( l9, l9 ) l7: revise( x, y ) l1: x teacher(x) l7: revise( x, y ) l8: before( l9, l9 ) l0 l10: and( l11, l11) l4: y paper(y,z) paper(y,z) l4: yl1: x Bill(x) l3: zz=x paper(y,z) l4: y X 1 X=[1] l3[] z=z[] l3: z Z Z=[2|X] Y Y=[2] 1 l3: z z=z(X) 2 l3(X) Figure 7: UDRS for sentence (15) (Egg et al., 2001) the proposed underspecified representation facilitates the resolution of anaphora by providing explicit representations of potential antecedents.
To this end, a method to encode “phantom conditions” has been presented, i.e. subformulae whose presence depends on the scope configuration.
Furthermore, a method to deal with scope parallelism in scopally underspecified structures has been proposed.
The proposed method has no trouble accounting for cases where the scope order in antecedent clause and elliptical clause is not entirely identical (Erk and Koller, 2001).
Finally, it has been shown that the approach can cope with a wide variety of test examples discussed in the literature.
References Nicholas Asher, Daniel Hardt, and Joan Busquets.
2001. Discourse Parallelism, Ellipsis, and Ambiguity.
Journal of Semantics, 18(1).
Nicholas Asher.
1993. Reference to Abstract Objects in Discourse.
Kluwer. Richard Crouch.
1995. Ellipsis and Quantification: A Substitutional Approach.
In Proceedings of EACL’95, pages 229–236, Dublin, Ireland.
Mary Dalrymple, Stuart M.
Shieber, and Fernando C.N.
Pereira. 1991.
Ellipsis and Higher-Order Unification.
Linguistics and Philosophy, 14:399–452.
Markus Egg, Alexander Koller, and Joachim Niehren.
2001. The Constraint Language for Lambda Structures.
Journal of Logic, Language and Information, 10.
Gregor Erbach.
1995. ProFIT: Prolog with Features, Inheritance and Templates.
In Proceedings of EACL’95, Dublin, Ireland.
Katrin Erk and Alexander Koller.
2001. VP Ellipsis by Tree Surgery.
In Proceedings of the 13th Amsterdam Colloquium.
Jean Mark Gawron and Stanley Peters.
1990. Anaphora and Quantification in Situation Semantics.
Number 19 in CSLI Lecture Notes.
Center for the Study of Language and Information, Stanford, CA.
John Grinder and Paul M.
Postal. 1971.
Missing Antecedents.
Linguistic Inquiry, 2:269–312.
Hans Kamp and Uwe Reyle.
1993. From Discourse to Logic: An Introduction to Modeltheoretic Semantics of Natural Language.
Kluwer. Andrew Kehler.
1995. Interpreting Cohesive Forms in the Context of Disocurse Inference.
Ph.D. thesis, Harvard University.
Chris Mellish.
1988. Implementing Systemic Classification by Unification.
Computational Linguistics, 14:40–51.
Uwe Reyle.
1993. Dealing with Ambiguities by Underspecification: Construction, Representation and Deduction.
Journal of Semantics, 10(2):123–179.
Ivan Sag.
1976. Deletion and Logical Form.
Ph.D. thesis, MIT.
Rob A.
van der Sandt.
1992. Presupposition Projection as Anaphora Resolution.
Journal of Semantics, 9(4):333–377.
Edwin Williams.
1977. Discourse and Logical Form.
Linguistic Inquiry, 8(1):101–139 .

