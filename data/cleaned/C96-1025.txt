Processing Metonymy: a Domain-Model Heuristic Graph Traversal Approach* Jacques Bouaud, Bruno Bachimont, Pierre Zweigenbaum DIAM: SIM/AP-IIP A 1)el)t (te Biomathdmatiques, Universitd Paris 6 91, boulevard (le l'It6pital F-75634 Paris Cede.x 13 {j b, bb, pz }(<l)biomath.jussiou.fr Abstract We address here the treatment of me, tonymie expressions from a knowledge representation perspe(:tive, that is, in the context of a text understanding system whi('h aims to build a (:onceptual representation from texts according to a domain mode, l ext)resse, d in a knowledge representation formalism.
We focus in this t)aper on the part of tile semantic analyser which deals with semantic eoml)osition.
We explain how we use tile domain model to handle metonymy dynamically, and more generally, to un(lerlie semantic (:omposition, using tile knowledge descriptions atta(:hed to ea(:h (:oneept of our olttology as a kind of eon('el)t-h;ve.l, multii)b.-role (lualia structure.
YVe rely for this on ~t heuristic 1)ath search algorithm that exl)loits the gr~phic aspects of the eon(:eptual gratIhs formalism.
The methods described have 1)een imi)lemente<l and applie(l on French texts in the medical domain.
1 Introduction
\[\]ii(ter the eomt)ositional assulnption, senmntie analysis relies on the combination of the meaning representations of parts to build the meaning representations of a whole.
However, this con> position often needs to call on implicit knowledge whi(:h helps to link the two meaning representations.
This is the (:as(*,, for institute, in metonymi(" expressions, where a word is used to express a notion closely related to its central meaning.
A well-known stream of work addressing this t)henomellon is the Generative Lexicon theory (Pustejovsky, 1991).
At the heart of this theory is a lexical semantic representation called "qualia struc~ lure", Met(mymies are considered to correspond to changes in the semantic types of the words in*This work has been imrtly supporte, d by the Eutel)earn project MENELAS (AIM 2023).
volved, and the qualia structure provides the basis for performing type coercion in a generative, way.
We address here, the treatment of metonymie expressions from a knowledge representation perspe(:tive, in the context of the MENF, I,AS medical text understanding syste, m (Zweigenbaum et al., 1995).
One of the goals of the overall system is to assign stan(tar(lised, medi(:al nomenclature codes to the input texts (patient discharge summaries).
Semantic analysis st~rts from a syntactic representation of each sentence and produces a conceptual representation.
It is then used by seve, ral language-independent, knowledge-based components to perform inferences (pragmatic enrichnlellt) and then code assignment (Delamarre et al., 1!)95).
Therefore,, the, conceptual representation outtmt by the semantic analyser nmst be normalised: it must ('onform to a knowledge representation canon in which the target nomenclature (:odes can lie nlal)ped.
'l'he si)eciiication of this canon relies on the description of a rich model of the domain in a knowledge representation formalism, here Conceptual Graphs (CG) (Sowa, 1984).
We focus in this patter on the part of the semantic analyser that deals with semantic ('oreposition.
The conceptual reI)resentation built must be abstracted from initial linguistic variation, metonymy being a typical problem to be addressed.
We ext)lain how we use the domain mo(lel to handle metonymy, and more generally, to underlie semantic composition, using the knowledge descriptions attached to each concept of our ontology as a kind of concept-level, multiple-role qualia structure.
The methods described have been implemented and applied to French texts.
We first recall the problem addressed (section 2).
Then, the pr()posed method is described (section 3) and illustrated on an example.
We give some information on the imt)lementation and the results of the analyser (section 4), and discuss tit(,' relatiw', merits of the method (section 5).
2 Metonymy
and type coercion A (:lassical exainple of metonynly (Pustejovsky, 1.991, It.
428ff) is 137 (1) John began a novel.
where predicate 'began' expects an event as its second argument, so that some way must be found to relate the object 'novel' to an event such as 'to read a novel' or 'to write a novel'.
In our domain (coronary diseases), one often finds expressions such as (2) une angioplastie du segment II (an angioplasty of segment II) (3) une angioplastie d'une artbre coronaire (an angioplasty of a coronary artery) (4) l'angioplastie de Monsieur X (the angioplasty of Mr X) (5) une angioplastie de la st6nose (an angioplasty of the stenosis) where 'angioplasty' is an action performed on a segment of an artery to enlarge its diameter, while 'stenosis' is the state of an artery which has a reduced diameter.
These four phrases involve the object (or "theme") of action 'angioplasty', i.e., what the angioplasty operates upon.
If one considers that this theme must be a physical object, then examples (2)-(4) conform to the selectional restrictions of 'angioplasty', while (5) violates them.
The mechanism of type coercion (Pustejovsky, 1991) consists in converting a word type into another so that semantic composition can work properly.
(5) is then handled as a metonymy, where the stenosis and the stenosed object enter a state/thing alternation: 'stenosis' is turned into an 'object'.
However, it appears that this phenomenon is dependent on the underlying types (or "sorts") under consideration.
For instance in our ontology, 'segment', 'artery', 'stenosis' and 'human' have four different types, and are not comparable by the IS-A relation, e.g. nothing can be both a segment and an artery} This is a voluntary, methodological choice (Bouaud et al., 1995), motivated by the fact that these objects give rise to different inferences and must not be confused by the reasoning component.
Additionally, in the target normalised conceptual representation, what constitutes the specific theme (in our conceptual model, the purported_oh j) of action 'angioplasty' must be precisely defined.
In the context of our application, 'angioplasty' acts on an artery_segment, a physical object corresponding to a part of an artery, which happens not to be comparable to any of the four preceding themes of 'angioplasty'.
2 Therefore, all four examples (2)-(5) must be considered as metonymies.
1Segment, in our ontology, corresponds to a portion of space, not of matter.
2Notice, though, that these types are strongly linked (by relations other than IS-A) through the knowledge base models.
The semantic analyser precisely recovers these links thanks to the mechanism presented in this paper.
To handle metonymy, Fass (1988) proposes a method based on a list of alternations implemented as specific metonymy rules: Part_for_Whole, Container-for_Contents, etc.
Sowa (1992) considers metonymies around the term "Prix Goncourt", originally introduced by Kayser (1988): this term undergoes different meaning shifts in each of seven example sentences, ranging from the author who won the prize to the amount of money received.
Sowa discusses how background knowledge could help to process these metonymies, based on a knowledge description of what "Prix Goncourt" involves.
In our system, the target conceptual representation is defined by a domain model expressed with CGs.
This same model constitutes the resource which enables the analyser to handle metonymies.
We explain below how results similar to Pustejovsky's type coercion may be obtained with a method based on this domain model instead of a qualia structure.
3 Method
3.1 Rationale The input to the semantic analyser is the syntactic representation of a sentence produced by a previous large coverage syntactic analyser (B~rardDugourd et al., 1989).
This representation connects words, or predicates, with grammatical relations such as subject, object, oblique object, modifier, etc.
The output of the semantic analyser is a conceptual graph on which pragmatic inferences are performed to enrich the representation.
In the semantic lexicon, each word points to one or more conceptual representations.
The grammatical link between two words in a sentence expresses a conceptual link between their two associated conceptual counterparts.
The task of the semantic analyser is to identify this conceptual link.
Rather than including the knowledge needed for this task in the semantic lexicon, or in a specific rule base, the program will examine the domain knowledge to resolve the link.
The method relies on a heuristic path search algorithm that exploits the graphic aspects of the conceptual graphs formalism.
3.2 Domain
knowledge The main domain knowledge elements consist of the domain ontology (Fig.
1) which is a subsumption hierarchy of concept types (henceforth simply 'types') and of relation types, and of a set of reference models attached to the main types.
The reference model of a type represents knowledge about this type as a conceptual graph (Fig.
2). Basically, a conceptual graph is a bipartite graph with concept nodes (or concepts) labeled with a type plus an optional referent, and relation nodes labeled with relation types (Chein and Mugnier, 1992).
A model of a given type has 138 Spatial ote unetion Physie object Inte,,tional O,,an e....
A. ment J Stenosis Angioplasty Velsel Artery-legment Artery Lad_Segment_II Figure 1: An extract of the domain ontology.
an identified head concept with the same type, and the network of its related concepts represents its associated knowledge.
Since types are organised in an IS-A hierarchy, this knowledge is also inherited.
Model Angioplasty(*x) is \[Angioplasty: *x\](pat)--,\[Human~eing:*pat\]-+ (cultural-function)---+ \[Medical_Sub function\] ---+ (cultural .rote) ---+ \[Patient\] (agt)-+ \[Human_Being:*doc\]-+ (cult ural-funetion)--, \[Medical_Subfuuction\] ---+ (cultural a'ole) --~ \[Physician\] (motive)-+ \[State_O f-Mind\](st ate_of)--~\[Human_Being:*doc\] (content)--+ \[Stenosis:*st 1\] % (purported..obj)--~ \[Artery~Segment :*as\](involves) +-\[St enosis:*st 1\] (involves) ~-\[Int ernal-Stat e:*is3\] (par t) +\[tIumau_Being:* pat\] % (descriptive..goal) +-\[Internal_State:*is3\]Figure 2: An extract of reference model for type Angioplasty.
3,3 Semantic lexicon The semantic analyser relies on a two-tier semantic lexicon: one for predicates, the other for grammatical relations.
Predicates map to conceptual graphs; most of them are reduced to one concept, since most of the words in the lexicon are technical terms for which a type exists.
Figure 3 reports some lexical entries.
It is difficult to map grammatical relations to static, predefined conceptual representations, since their meaning in the domain depends on their context of use, and mostly on the predicates they link.
Besides, one cannot think of envisioning all the possible uses of such a relation, partly because of the use of metonymy.
The conceptual representation of an actual grammatical link will therefore be computed dynamically by the semantic analyser using its context: the linked predicates and domain knowledge.
However, each grammatical relation may have conceptual preferences for types or for conceptual relations.
These preferences are associated with the grammatical relation.
Our grammatical relations include oblique complements, so that prepositions in our semantic lexicon are expressed under this second paradigm (Fig.
3). Entry angioplastie-f is \[Angiopiasty: *x\].
Entry stenose_f is \[Stenosis: *x\].
Entry segment-iI_f is \[SegmentAh*x\](relative_to)-+\[Artery\] (spatial.l"ole) +\[Spatial_Object\] -+ (zone_of)-+ \[Artery ~egment\].
Gram~natieal-rel de¢ :prefers purported_obj involved_obj pat motivated_by before.state after-state rel.
Figure 3: Some semantic lexicon entries for predicates and a grammatical relation.
3.4 Algorithm
Given an input triple predicate, grammatical relation, predicate (P1; Gr; P'2), the semantic analyser first replaces the two predicates with their semantic entries -two conceptual graphs.
It then endeavours to link them, that is, to find a conceptlevel relation between their two head concepts C1 and C2 that, first, is compatible with the semantic preferences of grammaticM relation Gr, and, second, conforms to the representational canon made of the reference models.
3.4.1 Design
principle.
The basic idea is to project the two head concepts onto the domain knowledge and find a plausible concept-level relation between the two.
We implement this by heuristic graph traversal through the reference models and the type hierarchy, looking for a chain made of concepts and conceptual relations (i.e.
a linear conceptual graph), which could link concepts of the same types as C1 and C2 and at the same time would satisfy the conceptual preferences of Gr.
Semantic analysis then consists in solving recursively every grammatical link starting from the sentence head predicate and then joining the obtained conceptual chains to build the conceptual representation of the whole sentence.
We focus here only on the link resolution algorithm.
3.4.2 Chain
production methods.
We consider that each predicate Pi is associated with the head concept Ci of a model Mi.
Let Ti be the type of Ci.
We also assume a partial order 139 on types.
We focus here only on the strategy for i)roducing the set of all possible chains between Cl and C2.
Wc can use three methods of increasing complexity to find chains to link C1 and C2: 1.
Concept fllsion: the two concepts may be redundant.
If T1 < T2 or Tl > T2, then C, and 6'2 could be merged, and an empty chain is returned.
2. Concept inclusion: a concept may be "included" in the other's model.
(a) For every concept C' of type T' ill M1 such that T' > T2, every path between Cl and C' in Mt is a returned chain.
(b) For every concept C' of type T' in 3/& such that T' >_ Tt, (;very path in Mu between C' and C9 is a returned chain.
3. Model join: two arbitrary concepts in the two could be joined.
For every pair of concepts (C\[, C~) where C~ of type T" is in Mi, and such that T\[ < T.~ or T\[ > T.~, all the paths Pathsl between C1 and C~ in M, and Paths.2 between C~ and 6'2 in \]1/\[2 are produced.
Then, for every pair (Pt,P'2) in Paths1 x Paths2, the chain made of the two paths where last(p,) is joined to first(p.e) is returned.
At this point, we are provided with all chains extracted from the pair of models (MI, Me).
3.4.3 Model
identification.
The models that associate knowledge to a given predicate P can be ranked according to their level of generality.
The most specific model is the predicate definition in the semantic lexicon.
The next one is the reference model associated with the type T of the head concept of the definition.
Then, the following models are the reference models inherited along the ontology through supertypes of T.
As the type hierarchy is, in our system, a tree (Bouaud et al., 1995), the models for a predicate are strictly ordered.
Considering two grammatically linked predicates, the product of their models constitutes as many model pairs that can be potentially used to look for possible chains.
Such pairs are structured by a partial order based on the generality rank of their members, a 3.4.4 Heuristic chain selection.
At this stage, we are provided with all the possibles chains between P1 and P2 extracted from their models.
The remaining problem ix to choose tile most appropriate chain to substitute for Gr.
After some experimentation, we chose the following scheme.
The best chain ix selected according to five heuristic criteria: (1) satisfiability of aA model pair (To.
1, rn2) is more specific than (rn\[, rn~) if max_rank(ml, m.~) is less than max_rank(m~, rn~), or if equal, rain_rank(m1, re.e) is less than min_rank(m~, m'2).
Gr preferences; (2) most specific,nodel pair, i.e., the use of most specific knowledge associated with words is prefered; (3) simplest chain production method (see 3.4.2); (4) most specific or highest priority of Gr preferences; (5) shorter chain length.
When inultiple chains remain in competition, one is selected randomly.
To reduce search, tile link resolntion strategy does not consider all possible chains, and implements the first; two criteria directly in the chain production step.
Chains that violate Gr preferences are discarded, and model pairs are explored starting fi'om the most specific pair.
3.5 An
example Let us illustrate the, resolution on example (2) (an angioplasty of segment II).
Tile inimt triple is (angioplastie_f;de_f;segment_iI_f).
The corresponding types, Angioplasty and Segment_II, are not compatible and tile "fusion" inethod fails.
The "inclusion" method also fails since no model for angioplastie_f includes a concept compatible with Segment_II, and no model for segment_ii_f includes a concept compatible with Angioplasty.
However, with the "join" method, the algorithm identifies 6063 possible chains that satisfy the preferences attached to preposition des (Fig.
3). The selected chain uses the reference model of Angioplasty (Fig.
2) and tile definition graph for segment/I_f (Fig.
3) which are connected on concept trtery~qegment.
The resulting conceptual representation .joins the two corresponding paths: \[Angioplasty\]-* (purported-obj)-+\[A rt cry_Segment\].
\[artery_Segment} ~--(zone_of)~--\[Spatial_O bjcct\] ~ (spatial_role)-*\[Segment AI\], into \[Angioplasty\]-~ (purported-obj)-~\[Art cry_Segment 1 ~(zone_of) ~\[Spatial_Object\] -+ (spatial_role)--~\[Segment_I I\].
This representation reflects the fact that in the context of an 'angioplasty', 'segment II' is considered from the point of view of the physical artery segment the angioplasty is to act upon (instead of the spatial notion Segment_II expresses).
4 Implementation
and results This analyser has been implemented on top of a conceptual graph processing package embedded in Common Lisp.
In the current state, the ontology contains about 1,800 types and 300 relation types; over 500 types have their own reference model; the lexicon defines over 1,000 predicates and about 150 grammatical relations and prepositions.
The analyser correctly handles typical expressions found in our texts, including examples (2)-(5) (see table 1).
The complete processing chain has been tested on a set of 37 discharge summaries (393 sentences, 5,715 words) (Zweigenbaum et ~1., 1995).
This corpus included development texts, so the results are somewhat opti140 Table 1: Conceptual rel)resentations obtained fl)r sentences (2) (5).
(#) phrase total chains method models partial chains selected (2) 'angiot)lasty of segmenl, H' 6063 join Angiol)lasty \[Ailgioplasty\] ~ (imrl)or ted_oh j)-, \[At tery~%(~gnmnt \] \[Artery_Segment\] ~(zone_of),-\[Spatial_()l)ject\]--+ (slmt ial J'ole)-~ \[Segment J 1\] 'segme.nt II' definition (3) 'angiophtsty of a coronary artery' 2387 inclusion Angiol)lasty \[Angiol)lasty\]-+ (purlmr tedx)l)j)+ \[Ar t(n'y~eg ....... t\] ~-(pal't)~ .\[Coronary_Artery\] ---(4) 'angioplasty of Mr X' 3633 inchlsion Angioplasty \[Angiophtstyl-,(p,,rported ml,j)-~\[Ar tery2qegme,~t\]~ (part) +--\[llumanAteing l (5) 'angioi)lasty of a stenosis' 2217 \[A ngiot)lasty\]-~ (purported.
oh j) * \[hrtery~Seg ...... t\]~ -(i ....
Ires),-\[Stenosis\] inclusion Angioplasty mistie; on the other hand, the systern is in an ilu:Oml/lete state of develolltnent.
The test consisted in code a.ssignlne, t~t and answering a fix('.(\[ questionnaire, the gold standard being given by health (:are professionals.
Overall recall and precision were measured at /1:8 % and 63 % on the (:o(ling task, and 66 % and 77 % on the questionnaire task.
No ewfluation has been performed on 1here basic components of the system; we can however provide statistics drawn from the global test for the semantic analyser.
For 274 sentences received, the link resolution procedure was called on 8,749 grammatical links and exI/lored 247,877 chains, with an average of 28 chains per call and 904 per sentence.
The numbea" of paths found depends heavily on the richness of the lnodels used, which varies with the types involved, l%r instance, the model for type angioplasty (involved in table 1) is central in the domain.
It is the most eoinplex in the knowledge base and (:ontain8 54 (:oneet)ts and 78 relations, which at:counts fl)r the, greater number of paths found in these examples.
Ilowever, inadequate expai~sion8 are, SOlnetilnes made due to lack of lnodels, or to their complex ity, which makes the heuristic principles not selective enough.
Such limitations also stem froin a lack of "actual" selnantic knowledge.
The semantic analyser goes directly fi'om gralnmatical relations to concet)tua\] relations without any interme(liate selnantic ret)resentatioll.
Usefll\] ilfforlnatioll~ Sll(',h as the arglllnellt~tl or thelnati(: structure of predicates ((e.g., Mel'(:uk et al.(1995), Pugeault et al.(1994)), could prol)a})ly overcome seine of its shortcomings.
5 Discussion
()IIC eouhl (;omtm.re this approach to a concel)tbased, multi-role qualia structure.
The semantic definition of ~t word is here the reference model of its head concept type; each relation path starting fi'om the head eon(:ept of this reference model is similar to a qualia role, in that; it; describes one of the semantic facets or 1)ossible uses of the word.
In the context of a predicate, one of the concepts in the reference model is selected as the incolning point of a link from the predicate's inealfing representatk) n, The coneel)t-oriente, d domMmnlodel apl)roaeh advocated here hyI)othesizes that the behaviour of words is driven by their conceptuM ro|es in the domain.
This has the advantage of factoring knowledge at the conceptual level, rather than having to distribute it at the level of words.
This knowledge can then be shared by severM words.
Sharing even o(:(:urs across languages (e.
9. Dutch (Spyns and Willems, 1995)).
Moreover, the type hierarchy Mlows concepts, hence words, to inherit reference models from more M)stract (:olmepts, thus enabling more sitaring mM modularity.
The distinction between local information aim information inherited through the hierarchy in filrthermore exploited when ranking different chains between two concept types.
Another differelme resi(tes in the way flexibility is obtained, in \]hlstejovsky's coercion ine(:hanism (Pustejovsky, 1991), the argument's semantic type changes for a semantic type found in one of its qualia.
In a variant approach (Mineur and Buitelaar, 1995), a word has no a priori semantic type; it in selected at composition time among the types found in the qualia.
In our approach, the head concept type associated with an argument does not change.
The chain found between this concept and the predicate's head concept only brings forward internmdiate concepts and relations which are aetualised in th(; presence of the I)re(ticate, and lead to a particular representation of their lnt?aning.
As a side-effect, this approach ix able to handle sentences like (6) (7): (6) dotm bought a h)ng nOV6`-I (Godard and,layez, :\[993) (7) an aIlg'ioI)lasty of a sovere stenosis Since the modifier (long, sew',re) and the action (verb 'bought', noun 'angioplasty') require incompatible types of the same noun (novel: event vs ot)ject, stenosis: state vs object), tyl)e changing via coercion cannot work on such sentences.
This prol)lein does not occur in our approach.
Type coercion assumes that the t)redi(:ate drives semantic eompositioll, and that the semantic representation of the argument inllst adapt to it.
In 241 our method, both predicate and argument can make a step towards finding their semantic link.
The resulting conceptual chain, as a whole, represents both the specific facet of the argument which is involved in the sentence and the conceptual role it plays in the predicate.
The preferences that grammatical relations assign to conceptual relations drive path selection, taking into account the specific syntactic context in which a semantic composition is to occur.
This is crucial to let, e.g., prepositions, influence the choice of the conceptual link and the resolution of the metonymy.
6 Conclusion
The overall goal of the MENELAS text understanding system was to build a normalised conceptual representation of the input text.
The aim of semantic analysis, in this context, is to build a representation which conforms to a domain model.
We therefore experimented how this domain model could help semantic analysis to go from the flexibility of natural language to a constrained conceptual representation, a typical problem encountered being metonymy.
The approach presented here shows how this can be performed.
It has been fully implemented, and used with a reasonable size knowledge base as a part of the MENELAS text understanding system.
Metonymy processing is based on the domain model.
Provided a new domain and task, with the corresponding domain model, this enables the generic method to adapt directly to this new domain and give results that are specific to it.
Building such a domain model is generally feasible in sufficiently limited domains, typically, technical domains.
Much of the strength of the method then hinges on the quality of the domain model: the concept type hierarchy and the attached reference models must be built in a principled way (Bouand et al., 1995).
References A.
B@rard-Dugourd, J.
Fargues, M.-C.
Landau, and J.-P.
Rogala. 1989.
Un syst~me d'analyse de texte et de question/r~ponse bass sur les graphes conceptuels.
In P.
Degoulet, J.-C.
Stephan, A.
Venot, and P.-J.
Yvon, editors, Informatique et Gestion des Unitds de Soins, Informatique et Sant~, chapter 5, pages 223-233.
Springer-Verlag, Paris.
Jacques Bouaud, Bruno Bachimont, Jean Charlet, and Pierre Zweigenbaum.
1995. Methodological principles for structuring an "ontology".
In IJCAI'95 Workshop on "Basic Ontological Issues in Knowledge Sharing", August.
M. Chein and M.-L.
Mugnier. 1992.
Conceptual graphs: fundamental notions.
Revue d'InteUigence A rtificielle, 6(4):365-406.
Denis Delamarre, Anita Burgun, Louis-Paul Seka, and Pierre Le Beux.
1995. Automated coding system of patient discharge summaries using conceptual graphs.
Methods of Information in Medicine, 34:345-351.
Dan Fass.
1988. Metonymy and metaphor: What's the difference?
In Proceedings of the 12 th COLING, pages 177-181, Budapest, Hungary.
Danielle Godard and Jacques Jayez.
1993. Towards a proper treatment of coercion phenomena.
In Proceedings of the 6 th EACL, pages 168-177, Utrecht, The Netherlands.
Daniel Kayser.
1988. What kind of thing is a concept?
Computational Intelligence, 4(2):158165.
Igor A.
Mel'Suk, Andr~ Clas, and Alain Polgu~re.
1995. Introduction ~ la lexicologie explicative et combinatoire.
Duculot, Louvain-la-Neuve.
Anne-Marie Mineur and Paul Buitelaar.
1995. A compositional treatment of polysemous arguments in categorial grammar.
CLAUS Technical Report 49, University of the Saarland.
Also available by ftp on xxx.lanl.gov as cmplg/papers/9508/9508002.
F. Pugeault, P.
Saint-Dizier, and M.G.
Monteil.
1994. Knowledge extraction from texts: a method for extracting predicate-argument structures from texts.
In proc.
Coling 93, Kyoto.
James Pustejovsky.
1991. Towards a generative lexicon.
Computational Linguistic, 17(3):409441.
John F.
Sowa. 1984.
Conceptual Structures: Information Processing in Mind and Machine.
Addison-Wesley, London.
John F.
Sown. 1992.
Logical structures in the lexicon.
In James Pustejovsky and Sabine Bergleh editors, Lexical Semantics and Knowledge Representation, Lecture Notes in Artificial Intelligence, pages 39-60.
Springer-Verlag, Paris.
Peter Spyns and Jos L.
Willems. 1995.
Dutch medical language processing: Discussion of a prototype.
In Robert A.
Greenes, Hans E.
Peterson, and Denis J.
Protti, editors, Proc MEDINFO 95, pages 37-40, Vancouver.
Pierre Zweigenbaum, Bruno Bachimont, Jacques Bouaud, Jean Charlet, and Jean-Francois Boisvieux.
1995. A multi-lingual architecture for building a normalised conceptual representation from medical language.
In Reed M.
Gardner, editor, Proc 17th Annu Symp Computer Applications in Medical Care, New Orleans, November. 142

