1:182	MultimodalDialogueManagementintheCOMICProject RobertaCatizone,AndreaSetzer,YorickWilks DepartmentofComputerScience UniversityofSheffield R.Catizone, A.Setzer, Y.Wilks @dcs.shef.ac.uk Abstract The next generation internet applications will feature not only the ability to understand spoken and written natural language text, (pen) gestures and body postures, they will also and importantly be able to engage with the user in a natural dialogue about the application.
2:182	In this paper we will describe the design of a multimodal dialogue and action management module, partoftheCOMICdemonstrator, which is aimed at these next generation applications.
3:182	The design uses well understood structures like stacks and augmented transition networks in a novel way to obtain the flexibility needed for mixed-initiative dialogue.
4:182	Wealsoshow how this is applied to the application oftheCOMICdemonstrator -bathroom design.
5:182	1 Introduction Even though the usage of the Internet has grown over the last years, the usage of internet services such as eCommerce and eWork did not meet the expectations.
6:182	One of the main factors is the steep learning curve that users have to tackle before they can effectively use the service.
7:182	The basic functionality, such as browsing through articles, adding items to a shopping cart etc. are familiar to the user, and thus the difficulty must lie in nonintuitive interfaces.
8:182	Next generation applications aim to overcome these immense difficulties by using perceptual user interfaces which combine human-like sensing and perceiving capabilities with social skills and conventions.
9:182	This requires a rich multimodal communicationenvironment,inwhichnaturallanguage can be freely used, or only with few constraints.
10:182	With perceptual interfaces, the user is always given the opportunity to interact in the way that isconvenient tohimor her.
11:182	To support a multimodal communication environment, the system has to be able to understand speech and natural language typed text, gestures, pen input, facial expressions, and body posture.
12:182	One of the main features is the ability to engage in a natural dialogue with regards to the application withthe user.
13:182	The COMIC project, addresses the problems and has the objectives of (a) developing software that will improve the usability of eCommerce and eWork services and (b) demonstrating the usability in form of a novel application for the support of bathroom design.
14:182	In this paper we will concentrate on the dialogue and action management (DAM) module, which is the module responsible for maintaining a natural dialogue with the user.
15:182	We will describe our approach as well as justify the reasons for designing it the way we did in section 3.
16:182	The basic design of the DAM involves a stack, containing Augmented Transition Networks (ATNs) and a control mechanism for pushing and popping the ATNs.
17:182	Section 4 will talk about how ATNs are created.
18:182	The dialogue relies also on an application oriented ontology, which will be described in section 4.1.
19:182	The penultimate section of the paper, section 4.2, addresses the issue of how particular ATNsare chosen to deal withthe task at hand.
20:182	2 TheCOMICProject COMIC (COnversational Multimodal Interaction with Computers) is a recently launched IST project 1 which will last for three years.
21:182	The mainaimofCOMICistodefinegeneric cognitive models for multimodal interaction and to evaluate these in anumber of demonstrators.
22:182	The main demonstrator COMIC will build will demonstrate the significantly increased usability that is the result of adding multimodality to conventional point and click applications.
23:182	It is based on an elaborate bathroom design tool, which was developedbytheCOMICpartnerViSoft 2 andwith which bathrooms can be designed and decorated.
24:182	The demonstrator, which adds multimodality to the tool, allows a naive user to design and decorate his or her own bathroom.
25:182	Using the modalities of speech, pen gestures, and facial output, the system assists the user in entering the measurements and outline ofthebathroom and choosing the decoration and sanitary ware for the bathroom.
26:182	The demonstrator will be implemented in bothEnglishandGerman,andwillintegrate separatemodulesdevelopedatthepartnersites.
27:182	Asimplifiedoverviewofthearchitecture, showingthese modules, can be seen infigure 1.
28:182	Automatic speech (ASR) and pen recognition (APR) comprise the input processing module.
29:182	ASR focuses on the recognition of paralinguistic information, whereas APR addresses handwriting recognition, 2Dand 2.5Dpen gestures.
30:182	Fusion, the responsibility of DFKI, analyses and interprets multiple concurrent input modes simultaneously to create acomprehensive representation of the communicative goals and actions of the user.
31:182	The meaning representations from this processing stage are hypotheses for reasoning in thedialogueandactionmodule(DAM)inthecontextof the ongoing human-computer interaction.
32:182	The dialogue and action Management, being developed at the University of Sheffield, is the fo1 Contract number IST-2001-32311 2 www.visoft.de cus of this paper and will be described in detail in the following sections.
33:182	A Fission module then receives meaning representations from the DAM which represent the goals and actions of the system which can be user or system-driven.
34:182	Fission decides the actual lexical content and which output channels to use.
35:182	Three main output channels are available: verbal channels, including speech and text; head channels, including facial expressions, gaze, lip movements, and whole-head gestures such as nodding; and other visual channels, including drawings and graphics.
36:182	The output processing module consist of three sub-modules reflecting these output channels.
37:182	SpeechGeneration realisestheverbalchannel, the avatar isthe vehicle for the head, and the ViSoft 3 DesigningtheDialogueandAction ManagementModuleinCOMIC 3.1 InitialConsiderations Any survey of this field right now might suggest that we may be in something of the same position as the field of Information Extraction (IE) when Jerry Hobbs(Hobbs, 1993) wrote his brief note on a generic IE systems, on the assumption that all functioning IE systems contained roughly the same modules doing the same tasks, and that the claimed differences were largely matters of advertising, plus dubious claims to special theories with trademarked names.
38:182	However, we may be in a worse position with dialogue systems because, unlike IE, there is little or no benchmarked performance withwhich to decide which modules and theoretical features aid robust dialogue performance.
39:182	The lack of an established evaluation methodology is, by common consent, one of the main features holding back robust dialogue development methodology.
40:182	We cannot even appeal to some accepted progressionofsystemstowardsanagreedlevelofmaturity,asonecaninsomeareasonNLP:evenvery primitive dialogue systems from long ago contain featureswhichmanywouldassociatewithverysophisticated systems: Carbonells POLITICS(Carbonell, 1979) seems to be just a series of questions and answers to a complex knowledge base, Recognition Speech Gesture Recognition Generation Speech Bathroom Application Avatar Management Dialogue & Action Fusion Fission Figure 1: Simplified COMICarchitecture and might therefore be deemed a very simple dialogue grammar, lacking even a global structure of greetingsandgoodbyes.
41:182	Butitisclearthatheconsiders the system to deploy coded forms of goals, beliefs and plans, which one might take as a sufficient property for amore developed class ofsystems.
42:182	Again, PARRY (Colby, 1971) the most developed and robust of the early dialogue systems, might also seem to be simply a dialogue grammar atheart, yet itvery clearly had the goal ofinforming the user of certain things and, even though it hadnoexplicitrepresentation ofgoalsandbeliefs, it did have a primitive but explicit model of the user.
43:182	We have assumed in COMIC that a plausible DAMsystem must beable to have at least the following functionalities: (a) determine the form of response locally, where appropriate, to dialogue turn pairs, where appropriately means in both pragmatic (i.e. dialogue actfunctional) and semantic terms(i.e. give correct answers to questions ifknown).
44:182	(b)havesomeformofrepresentation ofawhole dialogue, whichmeansnotonlyopening andclosing itappropriately, but knowing whenatopic has beenexhausted,andalsohowtoreturntoit,ifnecessary, even though it is exhausted from the systems point of view.
45:182	This functionality need not imply an explicit global representation or grammarof adialogue.
46:182	(c) have appropriate access to a data base if there is to be question answering on the basis of stored (usually application relevant) knowledge.
47:182	(d) have appropriate access to a database that can be populated if information is to be elicited from the user aspart of abasic task.
48:182	(e)have someformofreasoning, goal/intention representation, user modelling and planning sufficient to perform these tasks, though this need not imply any particular explicit form of representation or mechanism for implementing these functionalities.
49:182	(f) have some general and accessible notion of whereintheperformance itisatanymoment: this can take the form of where in the dialogue it is or whereintheoveralltaskperformance (ifthereisa task) or both.
50:182	The only exception to this would be Loebner type systems, whose only function is to keeptalkingcoherentlyandnotrepeatthemselves.
51:182	Not all the above are essential, since some dependontheoverallapplication/functional environment: e.g.
52:182	(c) above is needed only for systems that know something and can answer questions about it, and (d) above applies only to tasks that can be described as form filling.
53:182	The COMIC application, and most conceivable ones, requires both of those.
54:182	A trickier matter will be (f) where itisbynomeans agreed whatapplications require explicit models of users and of their goals, beliefs and intentions etc. Again, the power of any reasoning system impliedby(f)isbynomeansclear, given both the certainty, from Church, that inconsistencies cannot in general be detected, as well astheoverallmediocreperformance ofgeneralAI reasoning systems.
55:182	Our proposal in this most complex and inviting area will be to so design the DAM so that minimal systems can serve some of these functions initially, though without preventing the substitution of richer ones later on.
56:182	At every stage, our prejudice willbeinfavour oflimited, constrained, knowledge-based systems, rather than general inference mechanisms ofunconstrained power.
57:182	Thefunctionalities abovewillprobablynotgive rise to much dispute, nor will the sorts of module in a DAM to implement them, at least not if the Hobbs-vanilla assumption at the beginning is broadly right.
58:182	However, something must be said aboutotherdesiderata andconstraints (beforeproceeding to a DAM sketch), ones that follow both from our own theoretical prejudices and from the global design of COMIC within which we now have towork.
59:182	The global design of COMIC implies (unsurprisingly) what one might term an (almost) fully interlingual DAM: one in which the DAM deals only with coded representations of content and function as input and output (i.e. first order English moreorless)andnotwithsurface language strings (in German in this case).
60:182	We write almostbecause weexpect theCOMICDAMtoget the German input string (though we do not want to attempt a second parsing of it) but not the German output string, which is the job of Fission to create (or its other-modal equivalent).
61:182	However, this conventional (indeed archaic) modularisation ofthe DAMleads totwowell-known problems.
62:182	(g) (We will continue to label key issues alphabetically, even though they are not all of the same type)ThereistheissueofaDAMnotknowingthe outputstring,andtheproblemthatE.M.Forsterexpressed as How do I know what I think till I see what I say.
63:182	DAM does not know what COMIC says, sohowcan itknow whatit thinks?
64:182	In a sense this is absurd, at least in terms of AI/NLP orthodoxy, but there are other serious problems attendant on no-string-access that we will later call the information retrieval problem: how do we find the relevant task/response structure without the surface information in input and potential output?
65:182	There is also the psychological problem for researchers, known since the1960sandimmortalisedinMcDermottspaper (McDermott, 1981), that NLP researchers cannot work with, or even create, structures they cannot understand, and structures in first order English may or may not be comprehensible to the DAM team, particularly if made up by another (Fusion team) working in another natural language.
66:182	Lets call this just a minor development problem, known to everyone outside the purely statistical/connectionist NLP camp (if that still has any members).
67:182	TheDAM,inourviewisthus aChinese Room, in Searles sense (REF), receiving and emitting coded forms it may not understand, and that may include theresearchers aswellasthe algorithm itself.
68:182	The solution is obvious and we shall just announce itasaprinciple: (h) The DAM team will decorate its own structuresandruleswithstringsofarbitrarylengthconsisting of English and German words, for both retrieval and mnemonic functions.
69:182	These may in many cases correspond to the most plausible generated output in English or German or both and thesewillbepassedontoFissionwhocandowith them what they like.
70:182	It should be obvious that retrieval of relevant action frames is more likely with a set of retrieval terms/wider than the internal predicate set.
71:182	An important research issue is how Fusion, DAM and Fission teams in a highly modularised dialogue systemaretounderstand recursive expressions in the first-order content language in the same way, as developers and as consumers ofthose codings.
72:182	Onecould compare here the little discussed issue in machine translation as to how analysis and generation teams in an interlingual MT project know they understand the intermediate representations inthe same way.
73:182	Another assumption follows naturally here and, if accepted, will have considerable consequences for Fission: (i) the format and range of slots to be filled in the interface objects that pass from a DAM to a Fission module should be identical to those that pass from Fusion to DAM.
74:182	In some sense this is obvious, and anyone who dislikes it should produce convincing cases where it is inadequate, whichwillmeanfindinginformationtypesbeyond the standard Fusion-to-DAM information set of (roughly): semantic content, dialogue act, (possibly) intention form, language string, modality.
75:182	It may well be inappropriate to pass the latter from DAM-to-Fission except as arecord of the original input(andunlessthatisindependently unavailable toFission fromthe dialogue history itself).
76:182	None of this prolegomenon reaches the core of the DAM design, but just (re)states assumptions, manyofthemobvious.
77:182	Wecannowaddsomefurther ones, not normally discussed in the literature much but well-known to those who have had to produce working systems, particularly those subject toevaluation or assessment, as wehave.
78:182	The key problems for dialogue system performance, and therefore reasons forfailure, are: (j) the inability of a dialogue system to find the relevant structure/frame that encapsulates what is known to the system about the subject under discussion, normally one introduced by user initiative.
79:182	This is the main form of what we referred toearlierastheinformation retrieval(IR)problem in dialogue management and, unsurprisingly, we shall use IR methods to solve it, by using, as one main determinant of what structure to load as the current structure, overlap of terms between input and (our own indexing of potential) output.
80:182	The same method will be asked to provide constant confirmation that the current structure is the appropriate one,overandaboveconsiderations from heuristics about expected input and global/local dialogue actsequencing.
81:182	This last can be thought of as principles of notgetting-lost orknowing-where-we-are, yetitisnot aproblemthatcanbesolvedbyanysingleconsideration or simply assigned to any magic module.
82:182	Another problem thatmaybenomorethan (j)under another description is that of knowing-whatto-do-now: (k) this is a problem central to all dialogue systems, and quite different strategies are out in the field: e.g. the Rochester-style strategy (Allen and Perrault,1980)ofthesystemtakingadefinite,and possibly wrong, line with the user, relying on robust measures for revision and recovery if wrong, as opposed to a hesitant (and potentially irritating) system that seeks constant confirmation from the user before deciding on any action.
83:182	We shall alsooptfortheformerstrategy, andhopeforsufficiently robust recovery, while building in implicit confirmations wherever appropriate.
84:182	But the issue here is narrower than simply one ofhavingadditionalmodules: itrequiresacoredialogue engine that is both a simple and perspicuousvirtualmachine(andnotalotofdata/linksand functionalities under no clear control) and which can capture (given good data structures) the right compromise between push (user initiative) and pull(systeminitiative)thatanyrobustsystemmust have.
85:182	OurCOMICDAMsketch below,nowbeing implemented, is intended above all to capture this combination of perspicuity (for understanding the system and allowing data structures to be written for it) and compromise.
86:182	3.2 ChoosingaLevelofStructure The opening remark above about vanilla-DAMs was not strictly true in one respect: there still is no consensus over whether a DAM should be expressed as a set of rules (from finite state to context sensitive) or as some forms of script/frame or network that expresses a set of rules, rather in the way a syntactic RTN expressed a set of context free rules.
87:182	The same opposition was present in AI planning theory between rule-driven planners and systems like SRIs STRIPS that pioneered more structural objects consisting of expected default actions.
88:182	TheTRINDIsystem(Cooperetal.,1999) is expressed as basically a set of rules (plus other structures,suchasQUD,QuestionsUnderDiscussion) whereas the WITAS system (Lemon et al., 2001) was initially, at least, based on ATN-like structures.
89:182	The argument between them is, at bottom, is about (i) how much stereotopy one expects in a dialogue and (b) how much is it worth collecting allrules relevant toasubtopic together, within some structure or partition?
90:182	Stereotopy in dialogueiscloselyconnectedtothenotionofsysteminitiative or top-down control, which is strongest in form-filling systems and weakest in chatbots.
91:182	If there is little stereotopy in dialogue turn ordering then any structure, like an ATN, risks being over-repetitious, since all possibilities must be present in many nodes.
92:182	If one must always be ready to change topic at any turn, it can be argued,thenwhatisthepurposeofbeinginahigher level structure that one may have to leave; the answer being that it is possible to be always ready to change topic but to continue on ifchange isnot forced.
93:182	As with all frame-like structures since the beginning of AI, they express no more than defaultsorpreferences.
94:182	TohaveQUDsisnomoreor less than to express this preference in a different way.
95:182	In the COMIC DAM we shall opt for an ATN system with a single stack (with one slight modification) and argue that the WITAS argument for abandoning ATNsnamely, that structure was lost whenanet ispoppedis easily overcome, andthat their alternative (dialogue trees) brings new problems of its own.
96:182	We envisage ATNs of radically different sizes and types: complex ones for large scale information eliciting tasks, and small ones for dialogue control functions such as seeking to reinstate atopic.
97:182	Our argument will be that the simplicity and perspicuity of this (well understood and easily writtenandprogrammed)virtualmachinehasbenefits that outweigh any disadvantages, and in particular the ability to leave and return to a topic in a natural and straightforward way.
98:182	As we shall see below, this is a complex issue, and the need toreturn tounpopped syntactic ATNs,soastoensure completeness of parsing, is quite different in motivation fromthatofreturning toaninterrupted topic in dialogue processing.
99:182	In syntactic parsing one must so return, but in dialogue one can sometimes return in a way that is pragmatically inappropriate and wemust deal withthat below.
100:182	3.3 AModestDAMProposal (l) We propose a single pop-push stack architecture that loads structures of radically differing complexities but whose overall forms are ATNs at most (though this power will not always be needed).
101:182	The algorithm to work such a stack is reasonably trivialandwellunderstood, thoughbelowwewillneedtosuggest oneamendmenttothe classicalalgorithmsoastodealwithadialoguerevision problem that cannot be dealt with by structure nesting.
102:182	(m) The argument for such a structure is its combination of power, simplicity and perspicuity (we used it in the simple mini-CONVERSE system designed for an interactive childs toy).
103:182	Its keylanguage-relevant features(knownbacktothe timeofWoods(Woods,1970)inpracticalparsing) are: (n) the fact that structures can be pushed down to any level and re-entered via suspended executionallowsnestingoftopicsaswellasfeatureslike barge-in and revision with a smooth and clear return to unfinished materials and topics.
104:182	This is so well known that it has entered the everyday language of computer folk as stack that topic for a moment.
105:182	The note of caution is that, although in recursive syntax, incomplete parsing structures mustbereturnedtoandcompleted,indialoguenot all incomplete structures should be re-entered for completion.
106:182	(o)theATNstructures (tobestacked) haveTuring Machine power, and are subject to no limitations of a finite state sort: i.e. a command on a transition arc can do anything from filling a data slot to causing a new structure to be pushed; they cannaturally beseenasupdate rules intermsof the systems discussed earlier, which suggests that Dialogue Move Engine may be little more than a renaming of conventional structures.
107:182	They are also perspicuous to write and understand (given our ability inour Chinese roomtomakeanynotes on our structures welike).
108:182	Turing Machine formal power is a diversion here: it may well be the case that, for efficiency, some later COMIC should have all its structuresreimplemented asfinitestaterulesorgraphs.
109:182	But that is irrelevant here, since such structures, though easy towrite,arehard tounderstand inthe absence ofany context dependence.
110:182	(p) There will be such ATNs corresponding to each of the system-driven sub-tasks (i.e. form fillingthe form the bathroom salesman aims to end up with at the end of a client session) which are for information eliciting (and whose ATN commands write direct to the output database), as well as ATNs for standard Greetings and Farewells,andforcomplextaskslikerevisionsand responses to conversational breakdowns.
111:182	MiniATNswillexpress simple dialogue act pairs (such asQA)whichcanbepushedatanytime(fromuser initiative) and will be exhausted (and popped) after anSQLquery tothe bathroom database.
112:182	We propose that the stack be preloaded with a (default) ordered setofsysteminitiative nets,with Greeting at the top, Farewell at the bottom and suchthatthedialogueendswithmaximumsuccess whenalltheseandalltheinformationelicitingnetworks have been popped.
113:182	This would be the simplest case of a maximally cooperative user with no initiative whatever; he may berare but must be catered for ifhe exists!
114:182	Anobviousproblemariseshere(notedinearlier discussion), which may require that we adapt the overall DAMcontrol structure: (q) If the user proposes an information eliciting task before the system does (e.g. the client wants to discuss tile-colour-choice before that structure isreached in thestack) then that structure mustbe pushedintothestackandexecutedtillpopped,but obviously its homologue in the stack must not be executed again when it reaches the top.
115:182	The integrity of the stack algorithm needs to be violated only to the extent that any task-driven structure at thetopofthestack isonlyexecuted iftherelevant part ofthe database isempty.
116:182	However, a closely related, (indeed inverse) issue (and one that caused the WITAS researchers to change their DAM structure, wrongly in our view)isthesituationwhereauser-initiative forces the revision/reopening of a major topic already popped from the stack; i.e. the user chooses pink tile but later, and ather owninitiative, decides she would prefer blue and brings up the topic again.
117:182	This causes, our proposal, no problems: the tilecolour-choice structure is pushed again (empty and uninstantiated) but with an entry subnetwork (no problem for ATNs) that can check the database, see it is non-empty, and begin the subdialogue in a way that shows it knows a revision is being requested.
118:182	It seems clear to us that a simplestackarchitecture isproofagainstsimplearguments based on the need to revisit popped structures.
119:182	A similar device will be needed when a long dormant, partly executed, net on the stack is reentered after a long delay; a situation analogous to a very long syntactic dependency or long range coreference.
120:182	In such cases, auser should be asked whether hewishes to continue (to completion) the suspendednetwork.
121:182	Thiswillrequire,ateverynetworknode,aloopthatcheckssometimerandasks aconfirmingquestionifthetimelagsincetheexecution ofthe preceding node istoo great, atwhich point it could respond with a prefix like I know its been a while but should we finish up the discussion of net name ?
122:182	What has not been touched upon here is the provision, outside the main stack and contentstructures, of DAM modules that express models oftheusersgoals/beliefs/intentions andwhichreason over these.
123:182	We shall postpone this as inessential for getting a DAM started provided what we ultimately propose can transition from simpler to more complex structures and functions without radical redesign.
124:182	At this stage, we do not believe anything ascomplexastheViewGensystem(BallimandWilks,1991)willeverberequiredfornormal applications.
125:182	To use it for bathroom advice would require an implausible scenario where the advisor has to deal e.g. a client couple, possibly talked to separately so that the system has to construct acouples views ofeach others wishes.
126:182	We do not believe weshould start by taking account of the needs of this scenario, fun though it would be for research.
127:182	However, we will expect to build into the DAM some explicit representation ofplan tasks,and thiswillgivenoproblem to an ATN since recursive networks can be, and often have been, a standard representation of plans, which makes it odd that some soi-disant radical redesigners of DAMs have argued against ATNs as DAM models, wrongly identifying them with low-level dialogue grammars, rather than, as they are, structures (ATNs) more general than those for standard plans (RTNs).
128:182	It is worth remembering here that twenty-five years ago, Schank modelled his text-processing scripts on the SRI planning structures of STRIPS,of which they were no morethanalinguistic version.
129:182	Itistimetobring the modelling ofplanning and dialogue modelling back together, long after they were split apart by the plan-analysis approach to dialogue of Allen et al.130:182	(Allen etal.,1995) 4 HowtheATNsareCreated AtthemomenttheATNsarecreated manually using expert knowledge of the application domain.
131:182	Since our application task is goal-driven, we produced a schema of sub-tasks that the user will address in order to complete the final task (in this case, designing a bathroom).
132:182	The sub-tasks provide an inherent modular structure for the creation of ATNs.
133:182	Given the conversational nature of the interface, the user may stray from the intended task and sub-tasks.
134:182	For such cases we will bebuilding general purpose ATNsthatcapturethe gist of the utterance, and try to give a reasonable response.
135:182	To do this, we may use a general resourcesuchasEuroWordnettocapturetheessence of the topic words that are not part of our application domain and interpret them in a context taken from hypernyms of Wordnet (Miller (Ed.), 1990).
136:182	Wewill,ofcourse,thentrytosteertheuserbackto their point ofdeparture from theapplication task.
137:182	As was explained earlier, we will start the program with a stack of ATNs that represent the tasks/sub-tasks that the user needs to satisfy inorder to complete the overall task of our application.
138:182	When our program is using system-initiative to drive the program, we will know which ATNs toruntofulfileach particular sub-task.
139:182	Duetothe stack structure, we also know the order of ATNs to process.
140:182	However, like most user-friendly systems today, this system is mixed-initiative so that theusermaydrivetheorderoftasks(ornon-tasks) at any point.
141:182	It is this issue that brings us to consider howwe willselect the most relevant ATNin oursysteminordertoaddresstheusersutterance.
142:182	When we are in the greeting ATN and prompting for the users name, we will expect a name as input.
143:182	If, in return, we get an utterance without a name, then we must scan for change of topic.
144:182	we can only be sure that we dont have a name if we have a category such as NAME with a list of all possible names to check against.
145:182	Likewise, wewillneedcategoriesforCOLOURandSTYLE which will contain all members of each category.
146:182	But of course, it is not enough to recognise that a member of a class is part of the users utterance, because it may be a negation I dont like the classicalstyleorshowmeanythingbutthecountrystyle Each ATNhas associated with it a list of topics and events.
147:182	Every arc of each ATN has associated with it a category which indicates the type of response we are expecting to receive.
148:182	The categories for each arc of an ATN taken all together give an indication of the function/meaning of that ATN.
149:182	This gives the ATN an identifier which we can use in deciding which ATN is best suited to a particular user utterance.
150:182	Examples of our ATNsare: Bathroom Styles ATNallows a user to choose one of 4general bathroom categories Bathroom Style Projects ATNallows a user tochooseoneofsixprojectsdoneinaparticular bathroom style BathroomMeasurementsATN-allowsauser to input their own bathroom measurements.
151:182	This ATN has sub-ATNs for getting the different parts of the bathroom wall vs. floor etc. 4.1 TheCOMICOntology The COMIC Ontology serves two purposes.
152:182	It links the user terminology to the concepts used in the COMIC application.
153:182	For example, users may refertoatoilet (concept toilet) usingdifferent lexical items toilet, loo, john, comode, etc. It also links the Bathroom application specific Database (ViSoft) to the concepts in the COMIC application; thus style and colour features stored for different kinds of sanitary ware in the Database are linked to the COMIC directly to the COMIC Ontology.
154:182	The COMIC Ontology will be built manually using corpus-based studies of user interactions with bathroom design applications as well as the existing bathroom database classification scheme.(ViSoft).
155:182	The corpora will be gathered through a set of WOZ experiments that simulate our application capturing the language, style and multimodality of the users.
156:182	4.2 IdentifyingtheMostAppropriateATN foranUtterance The ATNs are selected using the COMIC Ontologyandthesemanticinformationextractedduring the language processing module (Fusion).
157:182	There will be a list of words associated with each of the concepts in the COMIC Ontology.
158:182	This will be done in an early stage of processing.
159:182	Anexampleconcept issanitarywareandtheassociated lexical items are bathroom furniture, bathroom furnishings, bathroom china, etc. It is important to note that the lexical items are not only Figure 2: Sample COMICOntology single words, but also include phrases with multiple words.
160:182	We will identify significant words and phrases using a corpus-driven approach.
161:182	Using WOZ experiments, we will identify the relationship between concepts in our ontology and lexical items closely linked to such concepts.
162:182	Most of the nodes in our ontology signify nouns, which although contentful, are not all we need to establish the context of the users utterance.
163:182	What the userwantstodowiththebathroomobjectisnecessaryinformation thatweneed inordertoestablish which ATNshould be accessed atany given time.
164:182	Butitisnotenoughtoindex/select theATNsby keywords alone.
165:182	There are many activities/tasks thatcanbeachievedgivenanyparticularkeyword.
166:182	For example, given the topic of tiles, a user may want to 1) change the colour, change 2) size of thetiles,3)swapforcompletely different tilesetc.
167:182	This shows that the activity or task that the user wantstoperformalsoactstonarrowdownthecontext ofan interaction.
168:182	As we said earlier, this interaction is a taskbased scenario, where the user undertakes a series of subtasks to complete the overall task of our application (bathroom design).
169:182	As such, we will refer to the tasks as events and have listed below an example list of events that will be used in our domain.
170:182	The information returned from the language processing module (Fusion) will be put into the form of subject-verb-object triples  . Through this formalism, we can decide how to index the list of ATNsthat wehave.
171:182	Examples: I like this bathtub Subj (user) verb (like) obj(bathtub) Show me the classical style Subj(system) verb(show) obj (classical style) Show me project 5 Subj (system) verb (show) obj (project 5) Please exchange the blue tilesfor white ones.
172:182	Subj(system) verb(exchange) obj (blue tiles) misc( white tiles) Wewillhave apre-defined set of bathroom events which correspond to verbs.
173:182	We will enrich the list of lexical items associated with each event using a thesaurus-like knowledge base called EuroWordnet.
174:182	Below, there is a list of bathroom eventswiththeircorrespondinglexicalitemstaken from Wordnet 1.6 (same as the English part of EuroWordnet) . It is worth noting that since EuroWordnet is a multilingual resource, we have a way of associating multilingual lexical items to our bathroom events and objects Examples: show event: show, display, list, present, reveal etc. exchange event: exchange, substitute, swap, arrange event: arrange, put, set, place, position choose event: choose, prefer, like, select, pick out 4.2.1 ChangingTopicorDomain The issue of changing topics is a very serious one in any dialogue system.
175:182	Given that a user can change topic at any point in the conversation, a human-computer system mustalways bescanning for topic change.
176:182	Although handling topic change outside a domain is not fundamentally different from handling topic change within a domain, the former requires a potentially limitless amount of knowledge and therefore has strong practical implications.
177:182	Our approach will handle topic shift withinadomainbyattaching keywordsandevents totopicareas(implementedasATNS),butwillnot handle topic shift outside of our application domainexcepttotrytosteertheuserbacktothetask athand.
178:182	5 Conclusion Whether a dialogue management system can be completely general is a debatable point, but we have presented a system that is aimed to that end as much as possible.
179:182	This was done by separating the application specific knowledge from the control structure allowing for maximum reusability across applications.
180:182	We have shown how our system is integrated into the EU COMIC project and we have explained our choice of using well knownstructures likeATNsandstacksinaninnovative way to support flexible next generation internet applications.
181:182	In the future we intend to test the reuseablity issue in two other dialogue interface applications a career/job matching system and apersonal/email organiser system.
182:182	6 Credits Many thanks to the COMIC partners: Max Planck Institute for Psycholinguistics, Nijmegen, The Netherlands; Max Planck Institute for Biological Cybernetics, Tubingen, Germany, University of Edinburgh, Division of Informatics, United Kingdom; Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), Intelligent User Interfaces, Saarbrucken, Germany; Katholieke Universiteit Nijmegen, Nijmegen InstituteforCognitionandInformation, TheNetherlands; ViSoft,Sindelfingen, Germany.

