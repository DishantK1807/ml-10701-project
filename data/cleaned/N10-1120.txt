Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the ACL, pages 786–794,
Los Angeles, California, June 2010. c©2010 Association for Computational Linguistics
Dependency Tree-based Sentiment Classiﬁcation using CRFs with Hidden
Variables
Tetsuji Nakagawa∗, Kentaro Inui∗† and Sadao Kurohashi∗‡
∗National Institute of Information and Communications Technology
†Tohoku University
‡Kyoto University
tnaka@nict.go.jp, inui@ecei.tohoku.ac.jp, kuro@i.kyoto-u.ac.jp
Abstract
In this paper, we present a dependency tree-
based method for sentiment classiﬁcation of
Japanese and English subjective sentences us-
ing conditional random ﬁelds with hidden
variables. Subjective sentences often con-
tain words which reverse the sentiment po-
larities of other words. Therefore, interac-
tions between words need to be considered
in sentiment classiﬁcation, which is difﬁcult
to be handled with simple bag-of-words ap-
proaches, and the syntactic dependency struc-
tures of subjective sentences are exploited in
our method. In the method, the sentiment po-
larity of each dependency subtree in a sen-
tence, which is not observable in training data,
is represented by a hidden variable. The po-
larity of the whole sentence is calculated in
consideration of interactions between the hid-
den variables. Sum-product belief propaga-
tion is used for inference. Experimental re-
sults of sentiment classiﬁcation for Japanese
and English subjective sentences showed that
the method performs better than other meth-
ods based on bag-of-features.
1 Introduction
Sentiment classiﬁcation is a useful technique for an-
alyzing subjective information in a large number of
texts, and many studies have been conducted (Pang
and Lee, 2008). A typical approach for sentiment
classiﬁcation is to use supervised machine learning
algorithms with bag-of-words as features (Pang et
al., 2002), which is widely used in topic-based text
classiﬁcation. In the approach, a subjective sen-
tence is represented as a set of words in the sen-
tence, ignoring word order and head-modiﬁer rela-
tion between words. However, sentiment classiﬁ-
cation is different from traditional topic-based text
classiﬁcation. Topic-based text classiﬁcation is gen-
erally a linearly separable problem ((Chakrabarti,
2002), p.168). For example, when a document con-
tains some domain-speciﬁc words, the document
will probably belong to the domain. However, in
sentiment classiﬁcation, sentiment polarities can be
reversed. For example, let us consider the sentence
“The medicine kills cancer cells.” While the phrase
cancer cells has negative polarity, the word kills re-
verses the polarity, and the whole sentence has pos-
itive polarity. Thus, in sentiment classiﬁcation, a
sentencewhichcontainspositive(ornegative)polar-
ity words does not necessarily have the same polar-
ity as a whole, and we need to consider interactions
between words instead of handling words indepen-
dently.
Recently, several methods have been proposed to
cope with the problem (Zaenen, 2004; Ikeda et al.,
2008). However, these methods are based on ﬂat
bag-of-features representation, and do not consider
syntactic structures which seem essential to infer
the polarity of a whole sentence. Other methods
have been proposed which utilize composition of
sentences (Moilanen and Pulman, 2007; Choi and
Cardie, 2008; Jia et al., 2009), but these methods
userulestohandlepolarityreversal,andwhetherpo-
larity reversal occurs or not cannot be learned from
labeled data. Statistical machine learning can learn
useful information from training data and generally
robust for noisy data, and using it instead of rigid
rules seems useful. Wilson et al. (2005) proposed
a method for sentiment classiﬁcation which utilizes
head-modiﬁer relation and machine learning. How-
ever, the method is based on bag-of-features and po-
larity reversal occurred by content words is not han-
dled. One issue of the approach to use sentence
composition and machine learning is that only the
whole sentence is labeled with its polarity in gen-
eral corpora for sentiment classiﬁcation, and each
component of the sentence is not labeled, though
such information is necessary for supervised ma-
786
Whole Dependency Tree
Polarities of Dependency Subtrees
It cancer and heart disease.
prevents
cancerand heart disease.
preventscancer and heart disease.
+− −
Figure 1: Polarities of Dependency Subtrees
chine learning to infer the sentence polarity from its
components.
Inthispaper, weproposeadependencytree-based
method for Japanese and English sentiment classiﬁ-
cation using conditional random ﬁelds (CRFs) with
hidden variables. In the method, the sentiment po-
larity of each dependency subtree, which is not ob-
servable in training data, is represented by a hidden
variable. The polarity of the whole sentence is cal-
culated in consideration of interactions between the
hidden variables.
Therestofthispaperisorganizedasfollows: Sec-
tion 2 describes a dependency tree-based method
for sentiment classiﬁcation using CRFs with hid-
den variables, and Section 3 shows experimental re-
sults on Japanese and English corpora. Section 4
discusses related work, and Section 5 gives conclu-
sions.
2 Dependency
Tree-based Sentiment
Classiﬁcation using CRFs with Hidden
Variables
In this study, we handle a task to classify the polar-
ities (positive or negative) of given subjective sen-
tences. Intherestofthissection,wedescribeaprob-
abilistic model for sentiment classiﬁcation based on
dependency trees, methods for inference and param-
eter estimation, and features we use.
2.1 A
Probabilistic Model based on
Dependency Trees
Let us consider the subjective sentence “It prevents
cancer and heart disease.” In the sentence, cancer
and heart disease have themselves negative polari-
It cancerand heart disease.prevents
s0+
<root>
s10 s2+ s3− s4−
Figure 2: Probabilistic Model based on Dependency Tree
s0 s1 s2 s3 s4
g1 g2 g3 g4
g5g6 g7 g8
Figure 3: Factor Graph
ties. However, the polarities are reversed by modi-
fying the word prevents, and the dependency subtree
“prevents cancer and heart disease” has positive po-
larity. As a result, the whole dependency tree “It
prevents cancer and heart disease.” has positive po-
larity (Figure 1). In such a way, we can consider
the sentiment polarity for each dependency subtree
of a subjective sentence. Note that we use phrases as
a basic unit instead of words in this study, because
phrases are useful as a meaningful unit for sentiment
classiﬁcation1. In this paper, a dependency subtree
means the subtree of a dependency tree whose root
node is one of the phrases in the sentence.
We use a probabilistic model as shown in Fig-
ure 2. We consider that each phrase in the subjective
sentence has a random variable (indicated by a cir-
cle in Figure 2). The random variable represents the
polarity of the dependency subtree whose root node
is the corresponding phrase. Two random variables
are dependent (indicated by an edge in Figure 2) if
their corresponding phrases have head-modiﬁer re-
lation in the dependency tree. The node denoted as
<root> in Figure 2 indicates a virtual phrase which
represents the root node of the sentence, and we re-
gard that the random variable of the root node is the
polarity of the whole sentence. In usual annotated
corpora for sentiment classiﬁcation, only each sen-
tence is labeled with its polarity, and each phrase
(dependency subtree) is not labeled, so all the ran-
dom variables except the one for the root node are
1From an empirical view, in our preliminary experiments
with the proposed method, phrase-based processing performed
better than word-based processing in accuracy and in computa-
tional efﬁciency.
787
hidden variables that cannot be observed in labeled
data (indicated by gray circles in Figure 2). With
such a probabilistic model, it is possible to utilize
properties such that phrases which contain positive
(or negative) words tend to have positive (negative)
polarities, and two phrases with head-modiﬁer rela-
tion tend to have opposite polarities if the head con-
tains a word which reverses sentiment polarity.
Next, we deﬁne the probabilistic model as shown
in Figure 2 in detail. Let n denote the number of
phrases in a subjective sentence, wi the i-th phrase,
and hi the head index of the i-th phrase. Let si de-
note the random variable which represents the po-
larity of the dependency subtree whose root is the
i-th phrase (si ∈ {+1,−1}), and let p denote the
polarity of the whole sentence (p ∈ {+1,−1}). We
regard the 0-th phrase as a virtual phrase which rep-
resents the root of the sentence. w,h,srespectively
denote the sequence of wi, hi, si.
w = w1 ···wn, h = h1 ···hn, s = s0 ···sn,
p = s0.
For the example sentence in Figure 1, w1 =It,
w2 =prevents, w3 =cancer, w4 =and heart dis-
ease., h1 = 2, h2 = 0, h3 = 2, h4 = 2. We deﬁne
the joint probability distribution of the sentiment po-
larities of dependency subtrees s, given a subjective
sentence w and its dependency tree h, using log-
linear models:
PΛ(s|w,h)= 1Z
Λ(w,h)
exp
{ K∑
k=1
λkFk(w,h,s)
},
(1)
ZΛ(w,h)=∑
s
exp
{ K∑
k=1
λkFk(w,h,s)
}, (2)
Fk(w,h,s)=
n∑
i=1
fk(i,w,h,s), (3)
where Λ = {λ1,···,λK} is the set of parameters
of the model. fk(i,w,h,s) is the feature function
of the i-th phrase, and is classiﬁed to node feature
which considers only the corresponding node, or
edge feature which considers both the correspond-
ing node and its head, as follows:
fk(i,w,h,s)=
braceleftbiggfn
k(wi,si) (k ∈ Kn),
fek(wi,si,whi,shi) (k ∈ Ke),
(4)
where Kn and Ke respectively represent the sets of
indices of node features and edge features.
2.2 Classiﬁcation of Sentiment Polarity
Let us consider how to infer the sentiment polarity
p ∈ {+1,−1}, given a subjective sentence w and
its dependency tree h. The polarity of the root node
(s0)isregardedasthepolarityofthewholesentence,
and p can be calculated as follows:
p=argmax
pprime
PΛ(pprime|w,h), (5)
PΛ(p|w,h)= ∑
s:s0=p
PΛ(s|w,h). (6)
That is, the polarity of the subjective sentence is ob-
tained as the marginal probability of the root node
polarity, by summing the probabilities for all the
possible conﬁgurations of hidden variables. How-
ever, enumerating all the possible conﬁgurations of
hiddenvariablesiscomputationallyhard,andweuse
sum-product belief propagation (MacKay, 2003) for
the calculation.
Belief propagation enables us to efﬁciently calcu-
late marginal probabilities. In this study, the graph-
ical model to be solved has a tree structure (identi-
cal to the syntactic dependency tree) which has no
loops, and an exact solution can be obtained us-
ing belief propagation. Dependencies among ran-
dom variables in Figure 2 are represented by a factor
graph in Figure 3. The factor graph consists of vari-
able nodes si indicated by circles, and factor (fea-
ture) nodes gi indicated by squares. In the exam-
ple in Figure 3, gi(1 ≤ i ≤ 4) correspond to the
node features in Equation (4), and gi(5 ≤ i ≤ 8)
correspond to the edge features. In belief propa-
gation, marginal distribution is calculated by pass-
ing messages (beliefs) among the variables and fac-
tors connected by edges in the factor graph (Refer
to (MacKay, 2003) for detailed description of belief
propagation).
2.3 Parameter
Estimation
LetusconsiderhowtoestimatemodelparametersΛ,
given L training examples D = {〈wl,hl,pl〉}Ll=1.
In this study, we use the maximum a posteriori es-
timation with Gaussian priors for parameter estima-
tion. We deﬁne the following objective function LΛ,
788
and calculate the parameters ˆΛ which maximize the
value:
LΛ=
L∑
l=1
logPΛ(pl|wl,hl) − 12σ2
K∑
k=1
λ2k, (7)
ˆΛ=argmax
Λ
LΛ, (8)
where σ is a parameter of Gaussian priors and is set
to 1.0 in later experiments. The partial derivatives of
LΛ are as follows:
∂LΛ
∂λk =
L∑
l=1
[∑
s
PΛ(s|wl,hl,pl)Fk(wl,hl,s)
−∑
s
PΛ(s|wl,hl)Fk(wl,hl,s)
]
− 1σ2λk.
(9)
The model parameters can be calculated with the
L-BFGS quasi-Newton method (Liu and Nocedal,
1989) using the objective function and its partial
derivatives. While the partial derivatives contain
summation over all the possible conﬁgurations of
hidden variables, it can be calculated efﬁciently us-
ing belief propagation as explained in Section 2.2.
This parameter estimation method is same to one
used for Latent-Dynamic Conditional Random Field
(Morency et al., 2007). Note that the objective func-
tion LΛ is not convex, and there is no guarantee for
global optimality. The estimated model parameters
depend on the initial values of the parameters, and
the setting of the initial values of model parameters
will be explained in Section 2.4.
2.4 Features
Table 1 shows the features used in this study. Fea-
tures (a)–(h) in Table 1 are used as the node fea-
tures (Equation (4)) for the i-th phrase, and fea-
tures (A)–(E) are used as the edge features for the
i-th and j-th phrases (j=hi). In Table 1, si denotes
the hidden variable which represents the polarity of
the dependency subtree whose root node is the i-
th phrase, qi denotes the prior polarity of the i-th
phrase (explained later), ri denotes the polarity re-
versal of the i-th phrase (explained later), mi de-
notes the number of words in the i-th phrase, ui,k,
bi,k, ci,k, fi,k respectively denote the surface form,
base form, coarse-grained part-of-speech (POS) tag,
Node Features
a si
b si&qi
c si&qi&ri
d si&ui,1,···,si&ui,mi
e si&ci,1,···,si&ci,mi
f si&fi,1,···,si&fi,mi
g si&ui,1&ui,2,···,si&ui,mi−1&ui,mi
h si&bi,1&bi,2,···,si&bi,mi−1&bi,mi
Edge Features
A si&sj
B si&sj&rj
C si&sj&rj&qj
D si&sj&bi,1,···,si&sj&bi,mi
E si&sj&bj,1,···,si&sj&bj,mj
Table 1: Features Used in This Study
ﬁne-grained POS tag of the k-th word in the i-th
phrase.
We used the morphological analysis system JU-
MAN and the dependency parser KNP2 for pro-
cessing Japanese data, and the POS tagger MX-
POST (Ratnaparkhi, 1996) and the dependency
parser MaltParser3 for English data. KNP outputs
phrase-based dependency trees, but MaltParser out-
puts word-based dependency trees, and we con-
verted the word-based ones to phrase-based ones us-
ing simple heuristic rules explained in Appendix A.
The prior polarity of a phrase qi ∈ {+1,0,−1} is
the innate sentiment polarity of a word contained in
the phrase, which can be obtained from sentiment
polarity dictionaries. We used sentiment polarity
dictionariesmadebyKobayashietal.(2007)andHi-
gashiyama et al. (2008)4 for Japanese experiments
(The resulting dictionary contains 6,974 positive ex-
pressionsand8,428negativeexpressions),andadic-
tionary made by Wilson et al. (2005)5 for English
experiments (The dictionary contains 2,289 positive
expressions and 4,143 negative expressions). When
a phrase contains the words registered in the dictio-
naries, its prior polarity is set to the registered po-
larity, otherwise the prior polarity is set to 0. When
a phrase contains multiple words in the dictionaries,
the registered polarity of the last (nearest to the end
2http://nlp.kuee.kyoto-u.ac.jp/nl-resource/
3http://maltparser.org/
4http://cl.naist.jp/˜inui/research/EM/sentiment-lexicon.html
5http://www.cs.pitt.edu/mpqa/
789
of the sentence) word is used.
The polarity reversal of a phrase ri ∈ {0,1} rep-
resents whether it reverses the polarities of other
phrases (1) of not (0). We prepared polarity revers-
ing word dictionaries, and the polarity reversal of
a phrase is set to 1 if the phrase contains a word
in the dictionaries, otherwise set to 0. We con-
structed polarity reversing word dictionaries which
contain such words as decrease and vanish that re-
verse sentiment polarity. A Japanese polarity revers-
ing word dictionary was constructed from an auto-
matically constructed corpus, and the construction
procedure is described in Appendix B (The dictio-
nary contains 219 polarity reversing words). An
English polarity reversing word dictionary was con-
structed from the General Inquirer dictionary6 in the
same way as Choi and Cardie (2008), by collecting
words which belong to either NOTLW or DECREAS
categories (The dictionary contains 121 polarity re-
versing words).
Choi and Cardie (2008) categorized polarity re-
versing words into two categories: function-word
negators such as not and content-word negators such
as eliminate. The polarity reversal of a phrase ri ex-
plained above handles only the content-word nega-
tors, and function-word negators are handled in an-
other way, since the scope of a function-word nega-
tor is generally limited to the phrase containing it in
Japanese, and the number of function-word negators
is small. The prior polarity qi and the polarity rever-
sal ri of a phrase are changed to the following qprimei and
rprimei, if the phrase contains a function-word negator (in
Japanese) or if the phrase is modiﬁed by a function-
word negator (in English):
qprimei=−qi, (10)
rprimei=1 − ri. (11)
In this paper, unless otherwise noted, the word po-
larity reversal is used to indicate polarity reversing
causedbycontent-wordnegators,andfunction-word
negators are assumed to be applied to qi andri in the
above way beforehand.
As described in Section 2.3, there is no guaran-
tee of global optimality for estimated parameters,
since the objective function is not convex. In our
6http://www.wjh.harvard.edu/ inquirer/
preliminaryexperiments,L-BFGSoftendidnotcon-
verge and classiﬁcation accuracy was unstable when
the initial values of parameters were randomly set.
Therefore, in later experiments, we set the initial
values in the following way. For the feature (A) in
Table 1 in which si and sj are equal, we set the ini-
tial parameter λi of the feature to a random number
in [0.9,1.1], otherwise we set to a random number in
[−0.1,0.1]7. Bysettingsuchinitialvalues,theinitial
model parameters have a property that two phrases
with head-modiﬁer relation tend to have the same
polarity, which is intuitively reasonable.
3 Experiments
We conducted experiments of sentiment classiﬁca-
tion on four Japanese corpora and four English cor-
pora.
3.1 Data
We used four corpora for experiments of Japanese
sentiment classiﬁcation: the Automatically Con-
structed Polarity-tagged corpus (ACP) (Kaji and
Kitsuregawa, 2006), the Kyoto University and NTT
Blog corpus (KNB) 8, the NTCIR Japanese opinion
corpus (NTC-J) (Seki et al., 2007; Seki et al., 2008),
the 50 Topics Evaluative Information corpus (50
Topics) (Nakagawa et al., 2008). The ACP corpus
is an automatically constructed corpus from HTML
documents on the Web using lexico-syntactic pat-
terns and layout structures. The size of the corpus
is large (it consists of 650,951 instances), and we
used 1/100 of the whole corpus. The KNB corpus
consists of Japanese blogs, and is manually anno-
tated. The NTC-J corpus consists of Japanese news-
paper articles. There are two NTCIR Japanese opin-
ion corpora available, the NTCIR-6 corpus and the
NTCIR-7 corpus; and we combined the two cor-
pora. The 50 Topics corpus is collected from various
pages on the Web, and is manually annotated.
We used four corpora for experiments of English
sentiment classiﬁcation: the Customer Review data
7The values of most learned parameters distributed between
-1.0 and 1.0 in our preliminary experiments. Therefore, we de-
cided to give values around the upper bound (1.0) and the mean
(0.0)tothefeaturesinordertoincorporateminimalpriorknowl-
edge into the model.
8http://nlp.kuee.kyoto-u.ac.jp/kuntt/
790
(CR)9, the MPQA Opinion corpus (MPQA)10, the
Movie Review Data (MR) 11, and the NTCIR En-
glish opinion corpus (NTC-E) (Seki et al., 2007;
Seki et al., 2008). The CR corpus consists of re-
view articles about products such as digital cameras
and cellular phones. There are two customer review
datasets, the 5 products dataset and the 9 products
dataset, and we combined the two datasets. In the
MPQA corpus, sentiment polarities are attached not
tosentencesbutexpressions(sub-sentences),andwe
regarded the expressions as sentences and classiﬁed
the polarities. There are two NTCIR English cor-
pora available, the NTCIR-6 corpus and the NTCIR-
7 corpus, and we combined the two corpora.
The statistical information of the corpora we used
is shown in Table 2. We randomly split each corpus
into10portions,andconducted10-foldcrossvalida-
tion. Accuracy of sentiment classiﬁcation was cal-
culated as the number of correctly predicted labels
(polarities) divided by the number of test examples.
3.2 Compared
Methods
We compared our method to 6 baseline methods,
and this section describes them. In the following,
p0 ∈ {+1,−1} denotes the major polarity in train-
ing data, Hi denotes the set consisting of all the an-
cestor nodes of the i-th phrase in the dependency
tree, and sgn(x) is deﬁned as below:
sgn(x)=



+1 (x > 0),
0 (x = 0),
−1 (x < 0).
Voting without Polarity Reversal The polarity of
a subjective sentence is decided by voting of
each phrase’s prior polarity. In the case of a
tie, the major polarity in the training data is
adopted.
p=sgn
parenleftBigg n∑
i=1
qi + 0.5p0
)
. (12)
Voting with Polarity Reversal Same to Voting
without Polarity Reversal, except that the po-
larities of phrases which have odd numbers of
9http://www.cs.uic.edu/ liub/FBS/sentiment-analysis.html
10http://www.cs.pitt.edu/mpqa/
11http://www.cs.cornell.edu/People/pabo/movie-review-
data/
reversal phrases in their ancestors are reversed
before voting.
p=sgn
parenleftBigg n∑
i=1
qi ∏
j∈Hi
(−1)rj + 0.5p0
)
. (13)
Rule The polarity of a subjective sentence is deter-
ministically decided basing on rules, by con-
sidering the sentiment polarities of dependency
subtrees. The polarity of the dependency sub-
tree whose root is the i-th phrase is decided by
voting the prior polarity of the i-th phrase and
thepolaritiesofthedependencysubtreeswhose
root nodes are the modiﬁers of the i-th phrase.
The polarities of the modiﬁers are reversed if
their head phrase has a reversal word. The de-
cision rule is applied from leaf nodes in the de-
pendency tree, and the polarity of the root node
is decided at the last.
si=sgn
parenleftBigg
qi + ∑
j:hj=i
sj(−1)ri
), (14)
p=sgn(s0 + 0.5p0). (15)
Bag-of-Features with No Dictionaries The polar-
ity of a subjective sentence is classiﬁed us-
ing Support Vector Machines. Surface forms,
base forms, coarse-grained POS tags and ﬁne-
grained POS tags of word unigrams and bi-
grams in the subjective sentence are used as
features12. The second order polynomial ker-
nel is used and the cost parameter C is set to
1.0. No prior polarity information (dictionary)
is used.
Bag-of-Features without Polarity Reversal Same
to Bag-of-Features with No Dictionaries, ex-
cept that the voting result of prior polarities
(one of positive, negative or tie) is also used
as a feature.
Bag-of-Features with Polarity Reversal Same to
Bag-of-Features without Polarity Reversal, ex-
cept that the polarities of phrases which have
12In experiments on English corpora, only the features of un-
igrams are used and those of bigrams are not used, since the
bigram features decreased accuracies in our preliminary experi-
ments as reported in previous work (Andreevskaia and Bergler,
2008).
791
Language Corpus Number of Instances (Positive / Negative)
ACP 6,510 (2,738 / 3,772)
Japanese KNB 2,288 (1,423 / 865)
NTC-J 3,485 (1,083 / 2,402)
50 Topics 5,366 (3,175 / 2,191)
CR 3,772 (2,406 / 1,366)
English MPQA 10,624 (3,316 / 7,308)
MR 10,662 (5,331 / 5,331)
NTC-E 3,812 (1,226 / 2,586)
Table 2: Statistical Information of Corpora
Method Japanese English
ACP KNB NTC-J 50 Topics CR MPQA MR NTC-E
Voting-w/o Rev. 0.686 0.764 0.665 0.727 0.714 0.804 0.629 0.730
Voting-w/ Rev. 0.732 0.792 0.714 0.765 0.742 0.817 0.631 0.740
Rule 0.734 0.792 0.742 0.764 0.743 0.818 0.629 0.750
BoF-no Dic. 0.798 0.758 0.754 0.761 0.793 0.818 0.757 0.768
BoF-w/o Rev. 0.812 0.823 0.794 0.805 0.802 0.840 0.761 0.793
BoF-w/ Rev. 0.822 0.830 0.804 0.819 0.814 0.841 0.764 0.797
Tree-CRF 0.846* 0.847* 0.826* 0.841* 0.814 0.861* 0.773* 0.804
(* indicates statistical signiﬁcance at p < 0.05)
Table 3: Accuracy of Sentiment Classiﬁcation
odd numbers of reversal phrases in their ances-
tors are reversed before voting.
Tree-CRF The proposed method based on depen-
dency trees using CRFs, described in Section 2.
3.3 Experimental
Results
The experimental results are shown in Table 3. The
proposed method Tree-CRF obtained the best ac-
curacies for all the four Japanese corpora and the
four English corpora, and the differences against
the second best methods were statistically signiﬁ-
cant (p < 0.05) with the paired t-test for the six
of the eight corpora. Tree-CRF performed better
for the Japanese corpora than for the English cor-
pora. For both the Voting methods and the Bag-of-
Features methods, the methods with polarity rever-
sal performed better than those without it13.
Both BoF-w/ Rev. and Tree-CRF use supervised
machine learning and the same dictionaries (the
13The Japanese polarity reversing word dictionary was con-
structed from the ACP corpus as described in Appendix B, and
it is not reasonable to compare the methods with and without
polarity reversal on the ACP corpus. However, the tendency
can be seen on the other 7 corpora.
prior polarity dictionaries and the polarity revers-
ing word dictionaries), but the latter performed bet-
ter than the former. Our error analysis showed that
BoF-w/ Rev. was not robust for erroneous words in
the prior polarity dictionaries. BoF-w/ Rev. uses the
voting result of the prior polarities as a feature, and
the feature is sensitive to the errors in the dictionary,
while Tree-CRF uses several information as well as
the prior polarities to decide the polarities of depen-
dency subtrees, and was robust to the dictionary er-
rors. We investigated the trained model parameters
of Tree-CRF, and found that the features (E) in Ta-
ble 1, in which the head and the modiﬁer have op-
posite polarities and the head word is such as pro-
tect and withdraw, have large positive weights. Al-
though these words were not included in the polar-
ity reversing word dictionary, the property that these
words reverse polarities of other words seems to be
learned with the model.
4 Related
Work
Various studies on sentiment classiﬁcation have
been conducted, and there are several methods pro-
792
posed for handling reversal of polarities. In this pa-
per, our method was not directly compared with the
other methods, since it is difﬁcult to completely im-
plement them or conduct experiments with exactly
the same settings.
Choi and Cardie (2008) proposed a method to
classify the sentiment polarity of a sentence bas-
ing on compositional semantics. In their method,
the polarity of the whole sentence is determined
from the prior polarities of the composing words by
pre-deﬁned rules, and the method differs from ours
whichusestheprobabilisticmodeltohandleinterac-
tions between hidden variables. Syntactic structures
were used in the studies of Moilanen and Pulman
(2007) and, Jia et al. (2009), but their methods are
based on rules and supervised learning was not used
to handle polarity reversal. As discussed in Sec-
tion 1, Wilson et al. (2005) studied a bag-of-features
based statistical sentiment classiﬁcation method in-
corporating head-modiﬁer relation.
Ikeda et al. (2008) proposed a machine learning
approach to handle sentiment polarity reversal. For
eachwordwithpriorpolarity, whetherthepolarityis
reversed or not is learned with a statistical learning
algorithm using its surrounding words as features.
The method can handle only words with prior polar-
ities, and does not use syntactic dependency struc-
tures.
Conditional random ﬁelds with hidden variables
have been studied so far for other tasks. Latent-
Dynamic Conditional Random Fields (LDCRF)
(Morency et al., 2007; Sun et al., 2008) are prob-
abilistic models with hidden variables for sequen-
tial labeling, and belief propagation is used for in-
ference. Out method is similar to the models, but
there are several differences. In our method, only
one variable which represents the polarity of the
whole sentence is observable, and dependency re-
lation among random variables is not a linear chain
but a tree structure which is identical to the syntactic
dependency.
5 Conclusion
In this paper, we presented a dependency tree-based
method for sentiment classiﬁcation using condi-
tional random ﬁelds with hidden variables. In this
method, the polarity of each dependency subtree
of a subjective sentence is represented by a hid-
den variable. The values of the hidden variables
are calculated in consideration of interactions be-
tween variables whose nodes have head-modiﬁer re-
lation in the dependency tree. The value of the
hidden variable of the root node is identiﬁed with
the polarity of the whole sentence. Experimental
results showed that the proposed method performs
better for Japanese and English data than the base-
line methods which represents subjective sentences
as bag-of-features.
Appendix
A Rules for Converting Word Sequence to
Phrase Sequence
Let v1,···,vN denote an English word sequence, yi
the part-of-speech of the i-th word, and zi the head
index of the i-th word. The word sequence was con-
verted to a phrase sequence as follows, by applying
rules which combine two adjacent words:
LT ≡{“,(,-LRB-,-LSB-,-LCB-,CC}
RT ≡{”,),,,--,.,:,POS,-RRB-,-RSB-,-RCB-}
PP ≡{IN,RP,TO,DT,PDT,PRP,WDT,WP,WP$,WRB}
NN ≡{CD,FW,NN,NNP,NNPS,NNS,SYM,JJ}
do
for i := 1 to N −1
if xi and xi+1 are not yet combined ∧
(xi ∈ LT ∨
xi+1 ∈ RT ∨
((yi = yi+1 ∨yi = i+1∨yi+1 = i) ∧
(xi ∈ PP ∨
(xi ∈ NN ∧xi+1 ∈ NN)))) then
Combine the words vi and vi+1
until No rules are applied
B Construction of Japanese Polarity
Reversing Word Dictionary
We constructed a Japanese polarity reversing word
dictionary from the Automatically Constructed
Polarity-tagged corpus (Kaji and Kitsuregawa,
2006). First, we collected sentences, each of which
contains just one phrase having prior polarity, and
the phrase modiﬁes a phrase which modiﬁes the root
node. Among them, we selected sentences in which
the prior polarity is not equal to the polarity of the
whole sentence. We extracted all the words in the
head phrase, and manually checked them whether
they should be put into the dictionary or not. The ra-
tionale behind the procedure is that the prior polarity
can be considered to be reversed by a certain word
in the head phrase.
793
References
Alina Andreevskaia and Sabine Bergler. 2008. When
Specialists and Generalists Work Together: Overcom-
ing Domain Dependence in Sentiment Tagging. In
Proceedings of the 46th Annual Meeting of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies, pages 290–298.
Soumen Chakrabarti. 2002. Mining the Web: Dis-
covering Knowledge from Hypertext Data. Morgan-
Kauffman.
Yejin Choi and Claire Cardie. 2008. Learning with
Compositional Semantics as Structural Inference for
Subsentential Sentiment Analysis. In Proceedings of
the 2008 Conference on Empirical Methods in Natural
Language Processing, pages 793–801.
Masahiko Higashiyama, Kentaro Inui, and Yuji Mat-
sumoto. 2008. Acquiring Noun Polarity Knowledge
Using Selectional Preferences. In Proceedings of the
14th Annual Meeting of the Association for Natural
Language Processing, pages 584–587. (in Japanese).
Daisuke Ikeda, Hiroya Takamura, Lev-Arie Ratinov, and
Manabu Okumura. 2008. Learning to Shift the Po-
larity of Words for Sentiment Classiﬁcation. In Pro-
ceedings of the 3rd International Joint Conference on
Natural Language Processing, pages 296–303.
Lifeng Jia, Clement Yu, and Weiyi Meng. 2009. The Ef-
fect of Negation on Sentiment Analysis and Retrieval
Effectiveness. In Proceeding of the 18th ACM Con-
ference on Information and Knowledge Management,
pages 1827–1830.
Nobuhiro Kaji and Masaru Kitsuregawa. 2006. Auto-
matic Construction of Polarity-Tagged Corpus from
HTML Documents. In Proceedings of the COL-
ING/ACL 2006 Main Conference Poster Sessions,
pages 452–459.
Nozomi Kobayashi, Kentaro Inui, and Yuji Matsumoto.
2007. Opinion Mining from Web Documents: Extrac-
tion and Structurization. Journal of the Japanese So-
ciety for Artiﬁcial Intelligence, 22(2):227–238.
Dong C. Liu and Jorge Nocedal. 1989. On the limited
memory BFGS method for large scale optimization.
Mathematical Programming, 45(3):503–528.
David J. C. MacKay. 2003. Information Theory, Infer-
ence, and Learning Algorithms. Cambridge Univer-
sity Press.
Karo Moilanen and Stephen Pulman. 2007. Sentiment
Composition. In Proceedings of the Recent Advances
in Natural Language Processing International Confer-
ence, pages 378–382.
Louis-Philippe Morency, Ariadna Quattoni, and Trevor
Darrell. 2007. Latent-Dynamic Discriminative Mod-
els for Continuous Gesture Recognition. In Proceed-
ings of the 2007 IEEE Conference on Computer Vision
and Pattern Recognition, pages 1–8.
Tetsuji Nakagawa, Takuya Kawada, Kentaro Inui, and
Sadao Kurohashi. 2008. Extracting Subjective and
Objective Evaluative Expressions from the Web. In
Proceedings of the 2nd International Symposium on
Universal Communication.
Bo Pang and Lillian Lee. 2008. Opinion Mining and
Sentiment Analysis. Foundations and Trends in Infor-
mation Retrieval, 2(1-2):1–135.
Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan.
2002. Thumbs up? Sentiment Classiﬁcation using
Machine Learning Techniques. In Proceedings of the
2002 Conference on Empirical Methods in Natural
Language Processing, pages 79–86.
Adwait Ratnaparkhi. 1996. A Maximum Entropy Model
for Part-of-Speech Tagging. In Proceedings of the
1996 Conference on Empirical Methods in Natural
Language Processing Conference, pages 133–142.
Yohei Seki, David Kirk Evans, Lun-Wei Ku, Hsin-His
Chen, Noriko Kando, and Chin-Yew Lin. 2007.
Overview of Opinion Analysis Pilot Task at NTCIR-
6. In Proceedings of the 6th NTCIR Workshop, pages
265–278.
Yohei Seki, David Kirk Evans, Lun-Wei Ku, Le Sun,
Hsin-Hsi Chen, and Noriko Kando. 2008. Overview
ofMultilingualOpinionAnalysisTaskatNTCIR-7. In
Proceedings of the 7th NTCIR Workshop.
Xu Sun, Louis-Philippe Morency, Daisuke Okanohara,
and Jun’ichi Tsujii. 2008. Modeling Latent-Dynamic
in Shallow Parsing: A Latent Conditional Model with
Improved Inference. In Proceedings of the 22nd In-
ternational Conference on Computational Linguistics,
pages 841–848.
Theresa Wilson, Janyce Wiebe, and Paul Hoffmann.
2005. Recognizing Contextual Polarity in Phrase-
Level Sentiment Analysis. In Proceedings of the 2005
JointConferenceonHumanLanguageTechnologyand
Empirical Methods in Natural Language Processing,
pages 347–354.
Livia Polanyi Annie Zaenen. 2004. Contextual Lexical
Valence Shifters. In Proceedings of the AAAI Spring
Symposium on Exploring Attitude and Affect in Text.
794

