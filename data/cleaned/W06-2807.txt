Novelle,acollaborativeopensourcewritingtoolsoftware FedericoGobbo DICOM 21100,InsubriaUniversity Varese,Italy federico.gobbo@uninsubria.it MicheleChinosi DICOM 21100,InsubriaUniversity Varese,Italy michele.chinosi@gmail.com MassimilianoPepe DICOM 21100,InsubriaUniversity Varese,Italy massimiliano.p@gmail.com Abstract Inthispaperwediscussthenotionsofhypertext,blog,wikiandcognitive mapping inordertofindasolutiontothemainproblemsofprocessingtextdatastoredinthese forms.Weproposethestructureandarchitectureof Novelle as a new environment to composetexts.
Its flexiblemodelallows the collaborationfor contentsanda detaileddescriptionof ownership.
Data are storedin a XMLrepository, so as to use the capabilitiesof this language.
To developquicklyandefficientlywechoose AJAXtechnologyover theRubyonRails framework.
1 Introduction
Computationallinguistsare facingthe explosion of new formsof writingas a massphenomenon.
Tellingpersonalandcollaborativestoriesthrought webtechnologiesisknownundertheetiquettesof ‘blog’and ‘wiki’.
It thereforebringsnew challengestothefieldofnaturallanguageprocessing.
Wearetryingtoaddressthembyrenderingexplicitly the structureof thesenew formsof text in a way suitableforlinguisticcomputation.In order to do so, wearebuildingan opensourcewriting toolsoftware,calledNovelle.
1.1 HypertextasaNewWritingSpace
Bolter(1991)was the first scholarwhostressed theimpactofthedigitalrevolutiontothemedium of writing.
Termsas ‘chapter’,‘page’or ‘footnote’simplybecomemeaninglessinthenewtexts, or they highly change their meaning.
When Gutenberg inventedthe printingpressand Aldo Manuzioinventedthe bookas we know it, new formsofwritingsarose.Forexample,whenbooks shouldn’t be copiedby handany longer, authors tooktheadvantageandstartwritingoriginalbooks andevaluation– i.e. literarycriticism– unlike in theprevioustimes(Eisenstein,1983).Nowadays the use of computersfor writinghas drammaticallychanged,expeciallyaftertheirinterconnectionviatheinternet,sinceat leastthefoundation of the web(Berners-Lee,1999).
For example,a ‘webpage’is moresimilarto an infinite canvas thana writtenpage(McCloud,2001).Moreover, whatseemstobelostistherelations,like thetextureunderpinningthetext itself.
Froma positive pointofviewthesenewformsofwritingmayrealizethepostmodernistanddecostructionistdreams of an ‘operaaperta’(openwork), as Eco would defineit (1962).Froma morepessimisticone,an authormayfeelto have lostpowerin thisopenness.
Henceforththe collaborative traitsof blogs andwikis(McNeill,2005)emphasizeannotation, comment,and strongediting.
They give more powerto readers,eventuallyfillingthe gap the so-calledactive readersbecomeauthorsas well.
Thissituationcouldmake new problemsriseup: Whoownsthetext?Whichroleissuitableforauthors?We have toanalysethembeforepresenting thearchitectureofNovelle.
1.2 Knownproblems
It is certainlytrue that wikisand blogsare new formsof text.
It is alsotruethatwehave already mettheseproblemsinthefirstformofpurelydigital texts – hypertexts.
Now we are facingthe samequestionduringprocessingtextsinblogsand wikis.We considerhypertextsasparentsofblogs andwikis.Ouraimistousetheanalysisofhypertextsforinterestinginsights,usefulforblogsand wikistoo.
40 Followingthe exampleof Landow (1994),we willcalltheautonomousunits of a hypertext lexias (from ‘lexicon’),a word coinedby Roland Barthes(1970).Consequently, a hypertextisa set oflexias.
Inhypertextstransitionsfromonelexia toanotherarenotnecessarilysequential,butnavigational.
Themainproblemsof hypertexts, acknowledgedsincethebeginning,havebeentraced asfollows(Nelson,1992): • Theframingproblem, i.e. creatingarbitrary closedcontexts of verylarge documentcollections.
When extractingsub-collections, somelinksmaybecutoff.
• Comparingcomplex alternatives, i.e. to get paralleloralternateversionsofthesamedocumentin a simpleandeffective way, oneof themaingoalofXanadu,theultimate“global hypertext”dreamtbyNelson.
• Typologyoflinks, i.e.whenlinksbecometoo many, weneedatypologyforlinks,avoiding confusiontothereader/author.
• Version control, as the systemshouldkeep trackof thehistoryof every document,saving differencesand pointingout correspondencies.
We take fromwikisthe conceptof document historyanditsconsequences.We considerit as a goodapproximationof the‘versioncontrol’conceptasshownabove.
Inwikiseverydocumentkeepstrackofitsown history:creatinga documentmeanstostarta history, editinga documenttomove ahead,restoring tomovebackontothehistorytimeline,destroying a documentto stopthe historyitself.
Moreover, a sandboxis a temporaryview of a documentitselfi.e. a sandboxcannotcausea changeinthe history(CunninghamandLeuf,2001).
Figure1 showsthemodel.
creation a very old version the document history timeline an old version the current version the last version a restorean edit destruction sandbox Figure1: Thedocumenthistorymodel Historysnapshotsof thetimelinemaybe consideredas permanentviews, i.e. views with a timestamp.
Consequently, exceptin the caseof sandboxes, everychangein thedocumentcannot be erased.
Thismodelwillhave a strongimpact ontheroleoflinksandontheunderpinningstructureofNovelleitself.
2 TheStructureofNovelle
Ouraimistocreateanopensourcehypertextmodelingsoftware,calledNovelle.‘Novelle’isanItalian old-fashionedwordmeaning‘novels’,andin Germanitmeans‘novel’too.ItresemblestheEnglishword‘novel’andtheFrenchword‘nuovelle’.
Webelievethatthisnameisclearlyunderstableto every peopleeducatedin a European-basedculture,andthisiswhywehavechosenit.
Theemphasisonnarrativitytakes intoaccount theuseofblogsaspublicdiariesontheweb,that is stillthe maincurrentinterpretationof this literarygenre,or metagenre (McNeill,2005).
Furthermorewenoticedthatblogsandwikisarecurrentlysubjectedto osmosis,becausethey have in commontheunderlyingcoretechnology.
Soblogs area literarymetagenrewhichstartedasauthored personaldiariesor journals.Now they tryto collectthemselvesinso-called‘blogspheres’.Onthe otherside,wikisstartedascollectiveworkswhere eachentryis notownedby a singleauthore.g.
Wikipedia(2005). Now personalwikitoolsare arisingforbrainstormingandmindmapping.See Section4forfurtheraspects.
2.1 TheProblemofOwnership
The maindifferencebetweenblogsand wikisis in the ownershipof documents.Mostblogsfollow theannotationmodel, wherea singlelexiais centraland the othersare comments,sometimes in threads.
Every lexia is authoredand changes areminimal.Peopleprefercommentinginsteadof editing.Theparadigmis“writeonce,readmany”.
On the contrary, in wikisno lexia is authored andthereis no hierarchy betweenlexias.
In fact a documentisstilla setoflexias,buteverydocumentis onlythe set of historicalversionsof the documentitself.
Generally, peopleavoid commenting,preferringto edit eachdocument.
The paradigmis “writemany, readmany” (CunninghamandLeuf,2001).
Webelievethatownershiphasanimportantrole and we do not want to forceour usersto take a 41 non-attributivecopyrightlicencetotheirwork.We considertheCreativeCommonsmodelasthemost suitableone to let eachauthorchoosethe rights to reserve (Lessig,2004).
Narrative writingsor essaysarecreative worksandthey generallytreat ownershipasauthorship,evenforthemostenthusiasticfellowsoffreeculture(Stallman,2001).
2.2 TheRepresentationofContext
InthestructureofNovellewearetryingto retain authorshipandthecoreconceptofdocumenthistoryof wikisthrougha typologyof links,taking whatwe considerthe best of the two worldsof blogsandwikis.
In Novelleeachuserownshisownlexias,and the relationsbetweenthem,i.e.
links. Furthermore authorsare free to read and to link other users’lexias.
In otherwords,eachuserdoespermiteveryonetolinkitsownlexiasforfree,atthe conditionthattheothersdothesame.Everyuser mayrecallthelinklistoneachelement(e.g.asingleword)ofhislexiasateverytime,buthecannot destroythem.Lexiasmaybecommentedbyevery user,buttheauthormayretainforhimselftheright toedit.Thisdecisionhastobetakenwhena lexia iscreated.
Ifa userletsotherseditsomelexias,hehasthe righttoretain orrefusetheattributionwhenother usershaveeditedit.
Inthefirstinstance,theedited versionsimplymovesaheadthedocumenthistory.
Inthesecondone,thelastuser,whohaseditedthe lexia,mayclaimtheattributionforhimself.The lexiawillbemarkedasaderivativeworkfromthe originalone, and a new documenthistorytimelinewillstart(seeFigure2).
Authorsmaychoose thisrightwiththeNo-DerivoptionoftheCreative Commonslicences(Lessig,2004).
creation the document history timeline an old version the current version creation of a derivative work a new document history timeline Figure2: Howtocreatederivativeworks If nobodyclaimsthe documentfor himself,it willfallinthepublicdomain.Thesetoflexiasin thepublicdomainwillforma specialdocument, ownedbya specialuser, calledPublicDomain.If theauthorrefusesthepermissiontocreatederivative works,i.e.
to edithis own lexias,usersstill have therightto commenttheauthor’s work.
So astocometotermswiththisidea,weneeda conceptinventedbyNelson(1992),i.e.transclusion.
the document history timeline the current version an other document history timeline a freezed quotation transclusion Figure3: Howtransclusionworks Rather than copy-and-pastecontentsfrom a lexia, a user may recall a quotationof the author’s lexiaandwritea commentinthesurroundings.
In doingso, the link list of the author’s lexia willbe updatedwitha specialcitationlink marker,calledquotationlink(seelaterfordetails).
Usually, the quotationwillbe ‘frozen’,as in the momentwhereit was transcluded(seeFigure3).
Consequentlythetransclusionresemblesacopiedand-pastedtext chunk,but thelinkto theoriginal documentwillalwaysbeconsistent,i.e.
neitherit expiresnorit returnsanerror.
Otherwisetheuser whohastranscludedthequotationmaychooseto keepupdatedthe linksto the originaldocument.
Thischoicehastobemadewhenthetransclusion isdone.
the document history timeline an old version an other document history timeline an up-to-date quotation transclusion the current version Figure4: Anup-to-datetransclusion If so,thetranscludedquotationwillupdateautomatically, followingthe historytimelineof the originaldocument.
For example,if the original 42 documentchangestopicfromstarsto pentagons, the quotationtranscludedwill changetopic too (seeFigure4).
2.3 ContentsandtheTypologyofLinks
Followingour modelof ownership,thereare at least two categoriesof links: shallow linksand deeplinks.Byshallowlinkswemeanvisuallinks occurringinasinglecanvas,usuallyownedbythe sameauthor.
Thesewillrepresenticonicallythe relationshipspaceof lexias,as explainedby McCloud,talkingaboutwebcomics(2001).Theyare particularlyusefulwhencomparingparallelversionsof the sametext, e.g. digitalvariants(see Conclusions).
We considera webpage,or bettera webcanvas,asa view of lexias, i.e. a groupoflexiasand theirrelationsvisuallyshownwithshallow links.
Asetoflexiasisadocument. Everyauthorhasthe rightto decidetherelationtypeofa setoflexias, i.e. toforma document.Adocumentcanalsobe consideredasacollectionofhistorytimelines,i.e.
thesetofrelatedlexiasandtheirversions.Theset of documentsis thedocuverse, a wordcoinedby Nelson(1992).
We usethe worddocuverse,unlikelytheoriginalsense,withthemeaningofaset ofdocumentsownedbyasingleauthor.
Every documentcan be viewed withina web canvas, but usersmay clickon a deep link and so changeview.
With deeplinkswe meanlinks whichlettheuserchangeview, i.e. rearrangeelementsin the web canvas for revealingshallow linksbetweenlexias,belongingtothesamedocumentornot.Thereforeawebcanvasmayshowrelationsbetweenviewsownedbydifferentauthors.
We considerquotationlinks,i.e.
linkscreatedby transclusion,as a specialkindof deeplinks.
Authorsmaycreatespecificviews addinglabelsto links.
Theset of labelswillforma typologyof links,customizedby everyuserandeven shared, ondemandofusers’desires.
Withourtypologyoflinks,weaimtosolve the framingproblemas definedin Section1.2.
We wanttomodelviewsasdynamicobjectsthecreationofcontextwillbestillarbitrary, butchanges are very easily.
We would also provide a user facilityfor choosingthe right licencefor every lexia,followingthemodelof Creative Commons licences(Lessig,2004).
3 TheArchitectureofNovelle
We have consideredmany hypothesesin orderto choosea firstlayerarchitectureto save a repository.
We useda multi-tiermodelbasedonXML.
Ourideaisbasedonmergingtogethersomeofthe mostcommondesigntechniquesusedinblogsand wikis.
Recentlyprevious implementationtechniqueshavebeenstudiedfromtheirnewaspectsto findinnovativewebtechnologies.Abasicscheme of Novelle architectureis presentedin Figure5.
Thefirstlayeristhemostimportant.Itisbasedon AJAX Ruby on Rails RDBMS XML DBMS / Filesystem GUI Figure5: Novelle:multi-tierarchitecture aninfrastructureforstoringeffectivelydatarepositoryinordertoobtainthebestperformances.We have studiedtwo alternatives for the repository.
Ononesidewehave differenttechniquesto map XMLtreesontoa databasemanagementsystem.
OntheothersidewemaymapXMLtreesdirectly onafilesystem–seebelowfordetails.
ThesecondlayerisrepresentedbyXML.Messages,dataandmetadataareexchangedbetween layersusingthecapabilityof thislanguage.This allowstotreatdataandmetadataondifferentlevel ofabstraction.
The Rubyon Rails(2006)framework permits us to quicklydevelop web applicationswithout rewritingcommonfunctionsandclasses.
We usedtheAsyncronousJavascriptAndXML (or AJAX)paradigmto createthe graphicaluser interface.
AJAXfunctionletsthecommunication worksasyncronouslybetweenaclientandaserver throughasetofmessagesbasedonHTTPprotocol andXML(Garrett,2005).
3.1 XMLrepository
We chosetouseXMLtreestostoretogetherdata, metadata,messagesandtheirmeaningsbecauseit hassomebenefits.Themostimportantis storing 43 XMLdata.TheotherbenefitsofanativeXMLsolutionare:thestoringwithoutmappingyourXML tosomeotherdatastructurelikeobjects,classesor tables;theneatnessof thestructure;theunderlyingtechnologyfromtheabstractlayertothephysicalonesisbasedonauniquestandard,widelyacceptedby the community.
Datamaybe entered andretrievedasXML.Anotheradvantageisflexibility,gainedthroughthesemi-structurednatureof XMLandtheschemaindependentmodelusedby mostofnative XMLdatabases.This is especially valuablewhenyouhaveverycomplexXMLstructuresthatwouldbedifficultorimpossibletomap to a morestructureddatabase.At thistimethere are not XMLdatabasesso stableto be usedinto projectofthiskind.
Xindice(developedby ApacheGroup)proved betterthanothers.
ApacheXindiceis a database designedfromthe groundup to storeXMLdata orwhatis morecommonlyreferredtoasa native XMLdatabase.
It storesshortXMLdocuments incollectionswithruntimegenerationofindexes.
UnfortunatelyXindiceseemsnottohavebeendevelopedanymoresinceApril2004.
AnothernativeXMLdatabase,moreusableand supported,iseXist.
eXistisgrowingquicklyandit implementssomefunctionalitiesof Xindice.The standardssupportisnotcompletedandsomefunctionsarecurrentlybeingrewrittendirectlyembeddedintothesoftware.Afterdoingmanytestsonit, itrevealsworseperformanceswithrespecttoother platforms,evenifitismorecompleteincomparisontotheothers.
Anyway our interestkeeps focusingon them waitingfor the firststablereleaseeffectively usable in Novelle.
We have consideredthe possibilityto mapXMLtreesto relationalor objectorienteddatabasemanagementsystemsthatsupportXML.WecanmapdirectlyanXMLtreeinto amemorytreestructure,madeupwithclassesand objects,withobject-orienteddatabases,aswecan seein Ozoneproject(2006).
Thelast stableversion of Ozonewas releasedin 2004.
The main problemwithOzoneandwithothersOODBMS is the overheadrequestedto the memoryfor storinga complex tree.
On the otherside,many RDBMSwithXMLsupportmapdirectlyanXML treetoanentity-relationshipschema.InsomeinstancesXMLtreesarestoredasBinaryLargeObject,or BLOB,intoonebig table.
In othersituationsXMLtreesare parsed,splittedandfinally storedin tableswhereattributes have the same namesthanXMLnodes.
RonaldBourret(2006)mantainsandupdatesa verycomprehensive listofnative XMLdatabases onhiswebsite.
While we are waiting for a native XML databasestableandusefulforourproject,wehave decidedto getinspirationfromthecommonidea usedinmanyblogsandwikis.Mostofthesearchitecturesareusedto storemessagesin a structure thatis similartoa directorytreesavedonfilesystem.Oftenthisideaisonlydevelopedtopresentto usersmessagesorganizedincollectionorderedby time(e.g.
blogs),but all the platformsarebased on RDBMS.We have found in ourresearchonly oneotherprojectinwhichmessagesarestoreddirectlyon filesystem:the Gblog project(Gblog, 2005).Nobodyusuallyadoptthissolutionbecause thesecurityof thewebsiteis lessstrong.
In ordertorepresentmessagesarchivesthemostcommonstructureis thetriple../year/month/day/...
In our assumption,a messageis a history.
Thereforea structureof thiskindworksverywellwith ouridea.We aregoingtobuilda filesystemtimebasedstructurein whichwecandirectlymapour messagesi.e.ourhistories.Thisstructureisalsoa tree.
We can writealsoan XMLdocumentthat mantainsan architectureschemewith some indexes to speedup queries.
Moreover, we store withamessageanotherXMLdocumentrepresentingallthepasthistory(i.e.
thepaths)ofthemessage.
So as to sum up, every time a user storesa message,he hasto save thefirstXMLdocument withthemessage,thensaves or updatesa second XMLdocumentrepresentingits pasthistoryand finallysavesorupdatesathirdXMLmessagewith filesystemdirectorytree.
Theoverheadon bandwith and net speedof this solutiondoes not let usersnoticesignificantdifferences,eventhoughit isnecessarytograntwritingpermissionstoeveryoneontheentirerepository.
HavinganativeXML databasewillgive the advantageof savingXML documentsin a rapid,neatandindicizedway, in ordertobeabletoexecuteefficientqueriesonthe repository.
3.2 eXtensibleMarkupLanguage We choseXMLas languageand meta-language becausewe neededto be able to save messages with their meanings.
Every lexia is saved with 44 sometagsandattributeswhichdescribeitsmeaning.Thepossibilityofstoringseparatelydatafrom their representations lets a systemaccessmore quicklyto a dataandextracttherequestedinformation.XMLis a W3Cstandardandthismakes ourprojectreadyto be changedandextended,as wellastobeconnectedwithotherapplicationsand services(XML,2005).XMLwillbeusedtorepresentdata,metadata,linktyping,messagesand pathsmap, and to exchangemessagesbetweeen differentlayers.
3.3 RubyonRails
RubyonRails, orRoR,isa frameworkrichinextensionsandlibrarieswithlicencessuitableforour usage,inparticularXMLBuilderandgdiff/gpatch.
Thefirstlibraryoffersasetofclasseswhichallows to generateXMLcodein a simpleway (Builder, 2006).
Gdiff/gpatchlibraryis an implementation ofthegdiff protocol,thatcreatesapatchfromtwo files and then a new file fromone of the previousfilesandthepatch(Gdiff, 2005).
Usingthis librarywe are goingto be ableto storethe historyandthelastversionin an easyway andsavingspace.Creatinga documentis thereforea sequenceofpatches.Storingworksinthesameway, thatis executinga gdiff protocolandstoringthe new patch.
Movingacrossthe documenthistory meansretrievinganumberofpatchcommandsuntilyoureachthedesiredversionofthedocument.
Rubyon Rails does not supportnative XML databasesat this time,thereforein our architecturetherewillbeprovisionallyarelationalDBMS dedicatedto RoR,whichhadno problemwitha filesystemrepository.
3.4 AsyncronousJavascriptAndXML
AJAXis nota technologyinitselfbuta termthat refersto the use of a groupof technologiestogether, inparticularJavascriptandXML.Inother wordsAJAXis a webdevelopmenttechniquefor creatinginteractivewebapplicationsusingacombinationof XHTMLand CSS, DocumentObjectModel(orDOM),theXMLHTTPRequestobject(Wikipedia,2005).
AJAX paradigmhas been recently defined, whensomeonehas rediscovered a simplefunctionoriginallydevelopedbyMicrosoftasActiveX control.Thisfunction,namedXMLHTTPRequest lets clientsask servers for some particulardata usingasyncronoushandshake.
In thisway users cancontinueusingwebapplication(typicallyfilling web forms)while the client and the server exchangedata and messages.
Otherdevelopers have publisheda concurrentversionof thisfunction for other browsers than InternetExplorer, like Mozilla/Gecko, Operaand Safari.
Theweb pagesbuildedwiththis technologygive the impressionto have dynamiccontent.ImportantexamplesbuildedwithAJAXparadigmareGmailby Google,Writely, Kiko, Webnote,Meebo.
Using AJAXto developwebapplicationsandwebservicesneedssomeattention.FirstofallJavascript mustnotbedisabledinbrowsers.Itisalsonecessarytopayattentiontoestimatecorrectlythetime spentin exchangingmessagesbetweenclientand server so to exploitthe goodcapabilitiesgained withAJAX,fullysupportedby andintegratedin RubyonRails.
3.5 Accesspoints
We are goingto add to every view of Novelle a searchenginethatreturnsa list of meaningsand a set of linkbetweenthem.
Theselinksare representedinourprojectwithimages.Everyimage is itselfa mapthattheusercansurfand/oropen toincreasedetailslevel.
Whentheuserhasfound the message,he can accessto it simplyclicking onit.
Anusercancommentormodifyeverylexia, if theseactionsaregrantedbytheoriginalauthor, as explainedabove.
Userscan createnew links betweenlexias and they can describewhatkind of linkthey intendto createthroughappropriate linktype.Thesemodificationsarestoredusingthe documenthistorymodelof Novelle throughfollowingpatch.
4 RelatedWorks
Themainsourceof Novelle arewikisandblogs.
While wikis have spread from a detailed design(CunninghamandLeuf,2001),unfortunately blogs have not been designedunder a model.
So we have testedand comparedthe mostused toolsavailableforblogging:Bloggers,WordPress, MovableTypeandLiveJournal.
Generallyspeaking,we find that the personal public diary metaphorbehind blogs (McNeill, 2005)maybringto an unsatisfactoryrepresentationofthecontext.Theonlywaytoretrieveinformationis througha searchengineor a calendar, i.e. thedateofthe‘post’– a lexiainthejargonof bloggers.
Moreover, we usesomenew webapplications 45 to take andsharenotesor to browsereveryone’s bookmarks,e.g.
del.icio.us. Mostly, theseweb applicationsorientedto writinggive a strongemphasison collaborationandsharing.
Thisled us torethinkownershipandtousetheCreativeCommonsmodeltodesignthecontentsofNovelle.
Finally, we noticed that personal wikis are used for storing cognitive maps of individuals andbrainstorming.Thisusewas alreadythought bythefoundersof wikis(CunninghamandLeuf, 2001),butithasnotbeenwidelyexploredinpractics,asfarastheauthorsknow.
However, thisdirectionof workis notactuallynew conceptand mindmapping,thetwomainparadigmsforcognitivemaps,havebeenusedforseveralyears.
Conceptmappinghasbeenusedat leastin educationfor over thirtyyears,in particularat the CornellUniversity, wherePiaget’s ideasgave the rootstotheassimilationtheorybyDavidAusubel.
Verybriefly, conceptmapsshowtherelationships betweenconceptslabellingbothnodesand arcs.
Everyarcalwayshasa definitedirection,i.e.
arcs arearrows(Novak,1998).
In contrast,mindmapsspreadfroma centre, withbranchesradiatingout.
Furthermore,mind maps,asthoughtandcopyrightedbyTonyBuzan, can label only nodes, not arcs.
The resulting shapeof mindmapsis sometimessimilarto neurons’(Buzan,2000).
Wehavetestedbothconceptandmindmapping software tools, availablefor freeor in a trialperiod.
In particular, CmapTools software is currentlyusedattheCornellUniversityandit isfree as a client.
It mayrunonCmapServers,andit is a verygoodwaytosharetheknowledgestoredin cognitive maps.Unfortunately, it doesnotcollect datain a formatsuitablefortheweb,andit does notpermittoviewconceptsacrosscognitivemaps ownedby differentusers(Tergan, 2005).
More, conceptmapsrequirea learningcurve very high whenstartedtobeused,atleastinourexperience.
Onthecontrary, mindmapsarebyfarmoreintuitive.
Thereare a lot of mindmappingtools,which are clonesof MindJetMindManager, the official software for Buzan’s mindmapping.
The mind mappingtoolwewerelookingforshouldhavehad anopensourcelicence,usedaformatfordatastoragesuitablefortheweb,andbeencross-platform.
Infact,Freemind,astheclosestapproximationof ourneeds(Mueller, 2000),succeededin running on the three majoroperatingsystemsavailable, withoutsensibledifferences.
Figure6: OurfreemindmapforNovelle Evenif welike theideabehindmindmaps,we needtohave a multiauthoredenvironment,where arcs may be labeled.
In otherterms,the centre of themapshouldchangeaccordingto theuser’s desire.Thatis why wethoughtaboutwebcanvas as documentviews.
If weconsiderdocumentsas freemindmaps,thenodeswillbe lexiasandthe arcswillbelinks.
Apartfrom wikis, blogs, and cognitive mapping,wewerealso inspiredbytheexperiencesof earlyhypertext writingtools,in particularIntermediaand Storyspace.
In fact, they were used expeciallyin academicwritingwith some success.
Intermediais no moredevelopedand nobodyof us hadtheopportunityto tryit (Landow, 1994).StoryspaceiscurrentlydistributedbyEastgate(2005),andwehave useditfora time.However, inouropinionStoryspaceis a productofits time and in fact it isn’t a web application.
Althoughit is possible to labellinks,it lacksa lot offeaturesweneed.Moreover, nohypertextwritingtoolavailableisreleasedunderanopensource licence.WehopethatNovellewillbridgethisgap wewillchoosetheexactlicencewhenourfirst publicreleaseisready.
We arepersuadedthatthereis nocontradiction incollaborativemindmappingandacademicwriting.
Maybeit is notby chancethatEastgatehas alsoreleaseda “personalcontentmanagementassistant”(Eastgate,2006).Ourpurposeis tobring back again collaborative writingand free brainstorming,asitshouldbe.
46 5 ConclusionsandFurtherWorks We arecurrentlydevelopinga prototypeof Novelle.WearguethatthemodelunderNovellewould be an explicitrepresentationof thecontext anda clearmodelforthecontents.Oneofthemainapplicationof oursoftwareis naturallanguageprocessing.Wearegoingtotestitexpeciallyondigitalvariantsofliterarytexts.
Acknoweledgements We want to acknowledge Dr.
Marco Benini, Dr.
AlbertoTrombettafortheirdeepinsightsand GabriellaCancianifor havingreviewedthe final draftofthispaper.
References RolandBarthes.1970.S/Z.
EditionsduSeuil,Paris.
Tim Berners-Lee.1999.
Weavingthe Web.
Harper, SanFrancisco.
JayDavidBolter. 1991.WritingSpace:theComputer, Hypertext,andtheHistoryofWriting.
ErlbaumAssociates,Hillsdale,N.J.
RonaldBourret.2006. XMLDatabaseProducts.
Url: http://www.rpbourret.com/xml/.
Retrieved the 3rd ofJanuary.
Builderlibrary.for example 2006.
Project: Builder.
Provide a simpleway to create XMLmarkupand datastructures.
Url: http://builder.rubyforege.org/.
Retrievedthe4th ofJanuary.
Tony BuzanandBarryBuzan.
2000. TheMindMap Book.
BBCWorldwideLimited,London.
WardCunninghamandBoLeuf. 2001.
TheWikiWay -QuickCollaborationontheWeb.
Addison-Wesley, Boston.
Eastgate 2005.
Storyspace. Url: http://www.eastgate.com/storyspace.
Retrieved the31st ofDecember.
Eastgate 2006.
Tinderbox. Url: http://www.eastgate.com/tinderbox.
Retrieved the2nd ofJanuary.
UmbertoEco. 1962.Opera aperta.
Bompiani,Milan, Italy.
ElizabethL. Eisenstein.1983.
ThePrintingRevolutionin EarlyModernEurope.
CambridgeUniversityPress,Cambridge,UK.
Jesse James Garrett.
2005. Ajax: A New Approach to Web Applications.
Url: http://www.adaptivepath.com/publications/essays/ /archives/000385.php.
Retrieved the 22nd of December.
Gblog2.0. 2005.
Gblog 2.0.
Blog, reloaded.
Url: http://gblog.com/.Retrievedthe27th ofDecember.
Gdiff/Gpatch library.
2005. Gdiff/Gpatch.
An implementationof the W3C gdiff protocol.
Url: http://ruby.brian-schroeder.de/gdiff/.
Retrieved the 28th ofDecember.
GeorgeP. Landow 1994.
Hypertext 2.0.TheConvergenceof Contemporary CriticalTheoryand Technology.
TheJohnsHopkinsUniversityPress,Baltimore,Maryland.
LawrenceLessig2004.FreeCulture: HowBigMedia UsesTechnologyandtheLawtoLockDownCulture andControlCreativity.
PenguinBooks. ScottMcCloud.2001.
UnderstandingComics. ParadoxPress,NY.
LaurieMcNeill. 2005.
GenreUnderConstruction: TheDiaryontheInternet.Language@Internet, 1.
Joerg Mueller.
2000. FreeMind.
Url: http://freemind.sourceforge.net.
Retrieved the 31st ofDecember2005.
TheodorHolmNelson.1992.LiteraryMachines90.0. Muzzio,Padua,Italy.
JosephDonaldNovak. 1998.
Learning, Creating, andUsingKnowledge: Concept MapsAs FacilitativeToolsin SchoolsandCorporations.
Lawrence ErlbaumAssociates.
Ozone DatabaseProject.
2006. Ozone Database Projectopeninitative.Url:http://ozone-db.org/.
Retrievedthe03rd ofJanuary.
Ruby on Rails.
2006. Ruby on Rails.
Web developement that doesn’t hurt.
Url: http://www.rubyonrails.org/.
Retrieved the03rd of January.
RichardM.Stallman.2001.FreeSoftware, FreeSociety: SelectedEssaysofRichard M.Stallman.
GNU Press,Cambridge,Massachusetts.
Sigmar-OlafTerganandTanjaKellers. 2005.
Knowledge AndInformationVisualization:Searchingfor Synergies.
Springer, Berlin.
Dave ThomasandDavidHeinemeierHansson.2005.
AgileWeb Developmentwith RailsA pragmatic guide.
PragmaticBookshelf. Wikipedia.
2005. Wikipedia.
From Wikipedia, the free encyclopedia.
Url: http://en.wikipedia.org/wiki/Wikipedia.
Retrieved the31st ofDecember.
XML, eXtensible Markup Language.
2005. Extensible Markup Language (XML).
Url: http://www.w3.org/XML/.
Retrieved the 27th ofDecember.

