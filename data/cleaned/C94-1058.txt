DEFAULT HANDLING IN INCREMENTAL GENERATION Karin ItarbuschL Gen-ichiro Kikui, Mine l(ilgeri ATR*, Pax: (+81 7749) 5 la08, E-mail: kikuiOitl.atr.eo.jp DFKI, Fax: (+49 681) 302 5341, E-mail: harbusch\[kilger@dfld.uni-sb.de Abstract Natural language generation must work with insufficient input.
Underspecifications can be caused by shortcomings of the component providing the input or by the prelhninary stal.e of incrementally given input.
The paper Mms to escape from such dead-end situations by making ~ussumptions.
We discuss global aspects of default handling.
Two i~roblem classes for defaults in the incrementM syntactic gener;ttor VM-GEN are presented to substantiate our discussion.
1 MOTIVATION
Natural Language Generation, i.e., the process of building an adequate utterance for some given content, is by nature a decision making problem (Appelt, 1985).
Interna.1 decisions are made on the basis of the specified input.
Unfortunately, input information can be insufficient in two respects: • If the input structure for generation is provided by another AI-system,.qloba.l problems in producing svJ.Jicicnl inp't,t iuJ'orm.a.tio~, for the generator may occur, e.g., because o\[' translation mismatches in inachine translation (Kameyama, 19!)1).
In this case, the generator eitl,er has to use a default or formulat.e a request for clarification in order to be abh~ to continue its processing, i.e., to produce an utterance.
During simultaneous interpret a.tion requests are rather unusual.
Ilere defaults allow for a sta.ndalone handling of t:he problem.
For example, problems during speech recognition of automatic interprel:ation can lead to results like, "the (man/men) will come to the hotel tomorrow".
If the system is not able to give a preference for one of the alternatives, e.g., by evaluating context information, the generator has to choose "The author is eurrent, ly at NTT Network lurer mation Systems Laboratories (kikui((Nlttnly.ntt..i P).
a probable number value on its own to complete verbalization.
• Furthermore, for incremental generation, the input information is produced and hande.d own' step by step, so that it can be temporaril 9 ineomplele -although as a whole it may become sufficient.
This behaviour of a generator is motiw, ted by psycholinguistic observa.tions which show that people~ start speaklug 1)e\[bre all necessary linguistic material has been chosen (e.g., articulating a noun phrase be\['ore, the dominating w'.rb is selected).
As a consequence of undersl)ecification, incremental generation is essentially based on working with defaults, l'~lements are uttered before the processing or input consuml%ion has been finished.
(Kita.no, 1990) gives an example for defaults in i:he context of simultaneous interpretation: In Japanese, negation is specified at the end of the sentence while in English, it has to be specified ill \['rent of the finite verb.
Tllere\[bre, during .lapanese-English translation, where analysis, l;ransfer, and general;ion are l)erformed in a para.llel and incremental way, the system has to commit, e.g., positive wdm', l~el'ore knowing the actual polarlty I.
Generally spea.kiug, dcfa.'ull h.andlin, g specities how processing, i.e., furthe,' decision-making, can contimu, witl~out sufficient input information.
So, one can compare default handling with advice to the system, l?or reasons o1" uncertainty of assumptions, incremental systems with this facility must be able to repair the default decision when the a.ssumption i;urns out to be wrong by information given later.
Ca.tchi,lg on to the above exampie, there can be a nega.tion specifier given at the end of the Japanese input sentence which cannot be simply integrated into the output lAlt.ernatively, the system could use i,he dialogue COllt.exl. 1:o iufer a negal.ion wdue +/-.
356 sentence because the finite verb has ah'eady been uttered.
In this case, the output has to be repaired, e.g., by repeating parts of the ut> terance: "I will be able to meet you ...oops ...I won't; be able to meet you at the hotel this evening".
In the tbllowing sections, we argue Ibr l.he appropriateness of processinq-conformi~ttj default handling.
Basically, tlte processing-conforming mode makes the overall system homogenemzs because the combination of default-caused processing and input-licensed processing requires no specific description.
The homogeneity becomes especially hell)ful in the case where the inlmt wwifies the &,fault assumption rendering mlnecessary any recomputation.
For 1;he opposite case where the default ll'ltlSt; be withdrawn we haw~ to mark all defaults.
Even more homogeneity is introduced to an hlcrementa.1 system iJ' the default descriptions are giwm in terms oJ" i~tput specifications.
Tiffs representai;ion Mlows for easy checking the coincidence between a chosen default and input giwm later.
The content of this paper can he summarized as follows.
Section 2 provides a geucral description for defaults iu generation emphasizing the specific requirements in an incremental system.
After identifying the conditions under which defaults are triggered (set> tion 2.1), the application of a default (set> tion 2.2) and the delhfition of its descrilltioll (section 2.3) is outlined.
The crucial case of removing defa.ults not coi,lcidiug; wil.h n(,wly arriving input in an incremental system is discussed in section 2.4.
In section 3, this mechanism is applic~l I.o the incremental sentence generator V M--(I EN.
In tile beginning of the section, the basic <h'sign of the sysi;em is outlined.
Lator on, default handling is included and exemplified for two general cases.
In tile final section we summarize the main results of the paper, l,'urthermore, we discuss how default handling can I)e adapt¢'d to multilingual generatim~, as required by l:llc speech-to-speech translation system \/I~I.IL MOBIl, (Block et al., I!)92).
2 GENERAL
DISCUSSION OF DEFAULTS In the literature of norl-incremental generation, the need for defaults is hardly ever taken into account.
The conunon point of view restricts the iulmt to be sulIicient for generation (see, e.g., the Te:ct Slructure by (Meteer, 1990) for a syntactic generator).
In incremental gm,eration, most authors agree on the necessity of using defaults (see, e.g., (l)e Smedt, 1990; Kitano, 1990; Ward, 1991)).
Nevertheless, they do not in sufficient depth answer the question of how to guide the processes of default handling an(l repair wil;hin a generator.
This I~roblem is the starting--point tbr the following considerations.
We assume tlm.t generation is a decision-making process witll the aim o\[' producing it phmsiMe ul:t(wance 1)ased on given information.
As mentioned in section 1, there are cases where this I)rocess stops (caused by underspccifical.ioll of the input) before finishing its output.
We define a module named d@tv.l! handh:r which tries to resume the process by giving advice to il;, i.e., by maldng assumptions about tile missing input specification.
With respect to this task it is discussed 1.
in whicll situations de.faults are applied (see section 2.1 ), 2.
how default handling is integrated into a sb, st:cm (see sectiou 2.2), 3.
Ilow 1.he knowh'dg:e for de\['ault handling is ~h!scrihed (see.
s<'ctioll 2.3), and d.
how assumptious arc cancelled when they I.urll out 1.o Im inconsistent wil,\], newly arriving input; (see section 2.4). hi incremental generation, as mentioned in section 1, interleaved input consumption and OUtlml.
l)rodllcl.ion causes spc'cific default situations.
An incremental processing scheme allows for an increase of elficiency and flexibility, e.g., by making tlm analysis and general.ion l~rocesses of a system \['or simultane,ous interl~ret, al:ion ow~rlap in Lime.
There are two COmlml.ing goals of incremental generai;i(m for spoken oul, imt, thai, mnsl; be tal,:en 357 into account when estimating the usefulness of defaults: Fluency: Long hesitations should be a.voided during the production of an utl;erance, in order to be aeceptalde to the hearer 2.
Reliabillty:Errors in an utterance may cause misunderstanding.
In most cases, errors should be recovered by appropriate selfcorrections a.
Excessive use of self-corrections or erroneous expressions should be avoided because they decrease intdligibility of the utterance.
Obviously there is a trade-off between fluency and reliability: maximal reliability requires 'secure' decisions and theretbre leads to output delay.
On the other hand, maximal fluency necessitates the use of assuml)tions and repair, respectively.
2.1 When
to Trigger Default Handling We define as de.fa.~dt sit'ltatio~z the situation where a generation system has not yet finished the utterance but at the same t;ime has consumed all given iul)ut and is not ahle to continue processing.
In non-incremental gel> eration, this corresponds to the fact that the input lacks necessary informatiou, because the entire input is assumed to be given at one time (e.g., the undecidable number wdue of the example described in section 1 ).
Thus, default handling should be triggered inunediately.
In incremental generation, however, tile system may gel; a new piece of infBrmation lai:er on that enables it to continue processing (e.g., the specification of a negation wdue + as outlined in the example in section 1).
Tllerefore, possible alternatives are either to wait for the next inpnt or to trigger default handling.
The former violates the fluency goal, the latter may violate the reliability goal.
We propose the explicit use of time-limits .lot delay intervals 4 . =Ilumans often fill such pauses with filler.s like %r" or "what shall I say".
aSometimes, correct, ion is mmeeessary il' (I.he speaker believes that) the hearer ean inl>r t.he intended utterance from errol~eous speech.
4An explicit parameter expressing tile desired degree of fluency influences the time--limit.s.
Furthermore, the certainty of a &fault is described by a value.
As soon aM a default situation is identified, the certainty of the default is checked to see whether it exceeds a predefined threshold that: determines the degree of fluency/relia.bility r'.
l'.ach application o1" a default decreases the global certainty o\[' the system's state.
Consequently, there should be a limit Jbr the mnzireal n'~,mbcr of dcfoults apl)licable to the same sentence.
2.2 How
to Integrate Default Handling Basically, there are two strategies to integrate default handling into ongoing processing.
\])efanlts may be handled in a way that dif\[>rs from the 'normal' processing of the system, e.g., as short-cuts.
One. advantage can be an eflicient haudling o\[' defaults, lVurther more, the.
designm' o\[' the de\['a.ult component is completely free in decidiug about the realization of defaults in the system.
A disadwmtage is the di\[\[icull;y of providing consistency between del'aull;-caused and inputliceused processhlg.
Alternal:iw~ly, l:l~e ongoing processing can deal with the de('aull: values in a.n ordinary manner (processing conlbrming default handling).
This may he less efficient but guaran_tees consistency during processing, especially in case of a replacement by an input-licensed wdue.
got incremental generation, tile system has to provide repair fa.cilil;ies in any case.
So, they can also be used \['or nmt-monoloT/c nlodi\[ical,iOllS {~\[" d~q'aull, caused results.
We lake this opl;iou in order to make the own'all system \]J.(~mogc,~co'tzs.
2.a How to Describe Defaults The knowledge source that is used for defaulg handling should provide the most plausible actions \[Br a dei'ault: situation.
We represenl; the Iwlowledge as a sel: o\[' heuristic rules called dq/'a'tdl dc.~'("~'ip/io~.s.
A default description defines a.
set el' ol)eratious t\]lal; should be carried '>Pile I~asis for assigning cel'l,aill|,y wflues 1.o defaults should be a corl311s sl.udy l.hal, can be used 1,o find sl.al.isl.ical evidem'e for various Datures with all.ernal.iw' values (like Immb(% w)ice, ..., see, e.g., (Beck aim Warr~m, 1!~85)).
358 out in a certain situation where the generation process can not be continued.
A def'ault description has the following form: \[default default eerl<ti',zt.y\] preconditions ~ body ; val,.c The set of defaull prceondilions defines tests that are applied to the given situal`ion in order to find out whether the corresponding default body can be acl,ival,ed.
They include tests for the existence of parl,icular information, tests for the strucl`ure undc'r creation and tests for the sl,ate of processing.
The default body describes how to continue 1)rocessing with de\['aull`s in an adequat.e way.
For incremenl`al systems, we propose to express the body as a specification of input increments.
An impotl,anl, prerequisil:e is that the size of inct'ements is defin(~d \[h'xibly enough to cope With varying amount;s o\[" information.
Obviously, an import;ant; a(lvangage of this approach is homogeneity of l`\]te overall system.
Especially, l;he homogeneous represenl,ation of default-caused and inputlicensed sl`ructures is the easiest a.lld mosl` direct way l,o tesl` coincidences or conl`radicl~ious between defaull,-specified and hlpul; caused values.
Ill section 3, this a.ppvoach is outlhled by differenl, examples.
For non-h~cremenl`al systems, an operal,ional approach is pre\['ezable since l,here is no way to consume ad(til,ional input increments, presul)lmshlg l`hal; l,he input has been considered as a whole hefore a defaull` situation occurs';.
If several defaull` precon(lil:ions are al)ldi-cable, the certainty vrtlucs for (lel'aull: d('scvil)tions are examined to find which provides l.he system wil`h the most l)lausil)le aci.hm.
The individual default (lescril~tions should take into account the aloha\] constraints \['~)r processing stated in the knowledge sources of the system.
For example, the assuml)l`iol~ ()f nominative case for a, German NI' comph'menl, can regularly be made only once \['or the aThe difl'erence between incremental aml nonincremental generation I)econles small(w, if we assume that defaults ira a non-incremental system can he triggered alter the system has only considered parts of its inlmt information, hr this case, tim input cousidel'ed after default han<lling I)ec<>m~s COml>aral)le to later increments.
same verb.
For reasons of homogeneity, the defaull, description should at least be compatible wil`h the specificat;ions of tile knowledge used \[Br basic processing.
Ill order to guaranl,ee consisl:ency, def'aull` descriptions should merely contain whal: is orl,hogonal to tire basic 1,:nowledge sources.
2.4 How
to Cancel Defaults The repair of false assumptions is a crucial point of defaull, llandling in l`he contexl, of incremenl`al processing because the defaull, informal`ion does not remain locally bul` cap.
cause \['m'lahe.r decisions of the system.
Contrarily, for non--ilwremental input l`here will l)e no wdue gixq!n l.\]lal: can conl`radict default, Vgllrr(?s.
As a \[h'st: step o\[' rc'.pah', inconsistencies l)el, ween \[lllml~--provlded and default:camsed va.1ues are hle.nl, ified by simply real, citing the values.
Tllen e\[\['ecl`s of l.he respecl`iw~ defaults are wil`hdrawn hll,roducing the inpul`-l)rovidcA values iul.o the sysl`eln.
(\[enerally, a decision during general.ion il~fluences other decisions all over the system.
Thus l`he ell'eel` o\[' a deI'aull, body may tw.
propagal`t;d through I;\]te enl:ire sysl,en: (e.g., choosing a consl`rucI:ion o\[' ma.iu clause, wil;h causal subordinate clause influences l.he choice o\[" synl`acl`ic rca.liza.l`ions).
Roughly speaking, wil:hdrawlng a defaull` assuml~t.iou can be l'ea.lized l)y baekh'acking I`o the earlier sl`at,e o\[' the sysl`em where the d(d'aull~ had beeu inl`roduced or 1)y ~mu-mono/o,dc c/iruUics I.o t.he current, sl,ai.e o\[' the sysI.em.
The disa(lvalll;age of 1)ackln'acking is thai; imrt.ia\] resull`s are t:llrown away which could be reused duriug fm'I:her processhtg.
Nonmonol.onic changes preserw; l,hese resull`s.
Ill this framework, cancelling defaull`s requires l`lle sysl;em t:o idenl`i\[~, which resull;s are caused by del'a.ult, handling.
1)cpcnde.ney ling:s beI.ween l`he immedial`e r'esull, of a defaulI; body and result:s of lshe influenced decisions allow for l`his ideul`ifica.l`iou.
The disadvanl`age of non--monol:onic changes is I.he complexity o\[" COmlml.at:ion, e.g., SUl)lrorl`ed by a I;rul;h maint:enance system.
When designing an increment.el sysl`em, simple lm.ckl,racking is ruled 359 out because the part of the sentence uttered cannot be withdrawn after it has been perceived by the addressee of the message r.
So, we end up with a processing-conforming default handler for generation realizing repair by non-monotonic changes.
3 EXAMPLES
OF DEFAULTS IN VM-GEN The adaptation of our general discussion of default handling to the system VM-CEN not only provides concrete examples for the reader but also shows that a homogeneous combination of default handling, regula.r processing, and utterance repair is possible.
The syntactic generator VM-GI'~N is a further development of TA G-G E N (Kilger, 19!)4) within the fi-amework of VERBMOBIL, a speech-to-speech translation system.
Its usefulness for simultaneous interpretation results from its incremental and pa'rallel style of processing.
VM-GEN is able to consume input increinents of varying size.
q'hese, increments describe lexical items or semantic relations between them.
Single input increments are handed over to objects of a distril)uted parallel system, each of which tries to verbalize the structure that results from the corresponding input increment.
VM-O,\]'~N uses ml extension of Tree Adjoining Gra'm'mct'rs (TACs, c\['.
(aoshi, 1985)) as its syntactic representation formalism that is not only adequate for Ihe description of natura.1 language hut also supports incremental genera.lion (I(ilger aml Finkler, 1994).
In the following, we iul;roduce examl)h:'s for default processing triggered during the (lerman inflection process in VM-GI'2N to suhstantiate tile global statements made in sec~ Lion 2.
Inflection uses some synta.cLic properties of an element to compute its morphological form.
This information has partly t:o be specified in the input (e.g., the numl)er for a noun) and is partly inherited fi'om other elrlf some phrases inllueneed by defaull.s have already been verbalized, the eft'eel; of verl~alizaLion can be cancelled by using repair words like "oops" or "sol ry" when starting t, he modified utt.erance. ements (e.g., tile number for a verb or tile case for a noun).
The two reasons for missing information necessitate different methods of treatment which nevertheless both can uniformly be integrated into regular processing.
If information of the first type is missing (e.g., because of problems during analysis, see section 1), an assuml~tion can be made locally by simulating the respective part of the input.
The default for missing number information in VM-CIBN would look as follows: \[ (e*.I(OBJ,=N) (I;,'NTITY OB.I \] ( ....... ber(OBd)=NIL) => ('au',,dm,' sg)) ; 0.8 8 The set of default preconditions is applied to all 'j objects (OB.1) of VM-GEN in order to Lest the kind of underspecification ('number' in the example).
The default body introduces a new value (sg) by creating an input increment as a.
default. The test for coincidence with the input-licensed value is realized by a comparison in the objects of VM-CEN.
There is a.
uuique association of input increments and objocts of VM-(~EN (OBJ is used as identifier)l:hat allows for translating an input mo(lifica.l:ion into a.
modification of the state of the respective object.
In ease of contradictions the dofa.ult and all default-caused decisions are revised m (see below).
Making a.n assumption can Im influenced by .qlolml constra.ints.
An example, which is well studied in psycholinguistics, is the utterance o\[" a noun before the vc~'l~ has been chosen.
If, e.g., the nol.lll "Besucher" (l",nglish: "visitOl"') iS I':.IIOWll t(} I)e the agellt of all action, il: nlay Im uttered as sul@-ct in the first posit, ion of the sentence l~y del'a.ult.
This treatretail, l)reSUl)l)OSes I,lle clloi(;e of a ~(htmmy' v(.'rl), which at least sul)cal,egorizes a subject a.nd has active voice 11.
The use of a dummy ~'ENTITY' introduces information al)ouL a lexical item.
For reasons of inerementaliLy, there may be several l~,NTlq'Y--lmCkages specified for the same item which are composed to reeeiw'.
I,he global itl\['ormM;iOl|.
For certainly values, we use wdues tmt.ween O and I, where I means high reliability.
~lhl the ael.ual imldementat.ion we preselect candidates with missing values fi~r re;tsolls of efficiency.
l°l,'or ongoing work on repair in VM-(IlCN see (Finkler, 1994).
l lThis kind of expansion is called "provisional upward expansioll" by (I)e SmedL, 1990).
360 verb and an underspecified verbal structure, the NP is integrated inl,o allows for a shnl)le global test tlmt rules out the same case wdue assignment to different NP coml)h'ment:s as it is required for most of the C, erman verbs.
This rule is represented in the grammar as a p~rt of the description of subcategorizal:ion fl'ames for verbs.
For reasous of homogoue-ity we use the information stored in the syntactic knowh'Age source, s of VMG\]';N for ex~ pressing syntactic constraints during default handling as well.
'Fit(', adwmtage of this approach is, that processing is continued iu a consistent way, which eases the introduction of the input--licensed wdue.
One default for choosing a missing case-wdue ix specified as lbllows: (l';NT'IT"Y ()ILl' \] cat(OttJ)=N) (UAT',,) \[ ......
(O~</)=NH3 (vole J,:,,,,ti,,,3), => ;(1.81 I~ f~mction(OB,l)=agent ) (I?I,:LATION llb;L I t .........
(h~,,t(Ot~,l))=NIt,) (/II,:AI) OBJ') \] (AIODIIrlI?I~ ()H,I)) J The default preconditions of l,he rule characterize a sit;mttion where an object (O1LI) con.
tains no information about the case \]>llt ideutifies the input category as'N' for noun.
Furthermore, the semantic fuuction of l;\]w o\])jecl: is specified as 'a.gent ~ but no verb deIim'(l yot (le,nma(h,,aa(Or J))=Nlr0 i,, lte.(t (,,ject.
That is why, the N--object cannot inherit a case value and also does not know whether it is allowed to occupy the f'ront position ilt the utterance.
\]'3valuating the (l('faull; body, I.he s.ysl.(.lll creates a V-object OILI'.
On the basis of the input ildbrma.tion in (I.NTrI'Y ()ILl')... it chooses a lllillilllal sylll;actic sI;rllCtllre \['roHl the inheritance net o\[' the grammar, thai.
just desribes ~t verb category without conclel;c filler (a dummy verb) plus a subject cmnpleuwnt and active voice for the verbM phrase.
Now, the N-strucl;ure is com_bilwd with the V.
strm:ture of the introduced V-ol)jecl.
its dut'iug uof real processing.
Therefore, the case va.llle cau be inherit(xl.
Additionally, the first posil:iou 12'I/,ELtVFION' inl.l'oduces the specitical.iou of a relation bel.ween two \]exi(:al ii.enas whMl are ident.ified by the names of their objects.
can be a.ssigne, d t,o Lhe subject which can be uttered now.
Tile basic VM GI';N module provide.s re~ pair strategies in order to allow for tile specificatiou of additions, modifications and deletions o\[' input \]llCl'el'l/(Hlts, i,e.
1 t;o lilodet it flexible input inl:er\['a.ce.
Throe fea, tures o\[' the system are lmsicMly used for repair: Fh'st, input illCrelllelitS are uuiquely associated with objects of VM-.(IEN, so that input modifications can Im translated into modifications of the objects' states.
Sccoud, each modification C' an object's state makes it compare new and old information.
Iu case of a difference, the modified parts a.re sent to all concerned objecl:s.
Third, the del)eudency relations tha.t determine l, he communi(:ation links between objects allow for a, hierarchical orgaIfization of tile olLiccts, which ix the, basis \[br synchrouizing repair.
A repair must be triggered in the exam-pie described abovo if, e.g., a verb wil.h wfice passive ix actually specified, in this case, the it~al)l)iug o1' tlm selnaut:ic role 'agent' I;o tim sylkl:acth: \['uuction 'subject' is revised.
The ;igell\[; IIOW \]lit.S to \])e realized as part of a "you" phrase, e.g.
"dieser Tel'rain wh'd yon dcm lh:mwhc'r gewiiuscht".
(word-for-word: "this date is whished b':l lhc visilor (dative ob.iect)").
F'urthermore, the object checks wlmtlwr the previously uttered part of the seul.em'e iuch|des some of the revised material (i.e., whether the ol@~ct itsel\[' has lmrticilmted hi littering).
I\[' this is the case, it seuds an error message Itl~ 1.o tim Ul)l)ermost object C' the hierarchy l:llat actually is engaged in uH.crillp;.
Tills o\[,jecl, is aide to synchronize global repair, lip to now, we just realized a simple tel)air stra.i:egy that consists of repeat;ing the concerned 1)ari:s el the utterance, e.g.
"der Besucher ...fih ...dieser Terrain wird yon dcm l~e.~'twhc'r gewfinscld?'.
4 DISCUSSION
This l)al)er prolmses a.
processiug conformh~g default: hau(ller for geueration realizing repair hy non monotouh" changes.
We provide the system with def'ault descriptions.
The set of default preconditions expresses possil)le rea~ 361 sons for dead-end situations.
A default is triggered, if the preconditions match the cu> rent situation and the certainty value of the default exceeds the i)redefined threshold.
The default body is expressed in terms of the missing input specification in order to make the system work homogeneously.
We have verified the advantages of processing-conforming default handling by implementing a default handler for VM-GEN.
As future work, we will extend the default preconditions towards handling complex contextual information.
We will apply default handling to microplanning and lexical choice within VERBMOBIL.
With respect to a sophisticated output, we aim to combine VM(\]I3N with a flexible repair component.
The system VM-GEN is used in the VI"llBMOBIL scenario for multilingual generation (English, German, and .Japanese).
We mean by multilinguality that; the sa.me processing is applie(l for diflZ'rent languages.
In the underlying knowledge sources language-specific constraints are defined.
Default handling can be easily adapted to the requirements o\[' multilingual generation \])y using language-si)eci(? ic default-descriptions.
For all know/edge sources the question arises how knowledge can be shared.
We Jut:end t:o use core knowledge so'urccs for representing common phenomena.
The core set of (lefault descriptions for F, nglish and German, e.g., contains the description of a reactiol~ i:o a missing mmflmr vahm for a, nou.ll.
We ailn to develo I) an efficient storing mechanism using a hierarchy of locally inl;ersectil~g core descriptions.
References Appelt, D.
(1985). Phmning l'Tnglish,%ntcnccs.
Cambridge, MA: Ca.tnl)ri(Ige University Press.
Block, II.-U., Bosch, P., Engelkamp, .l., v.
Ila.hn, W., llauensehild, C., l\[~3ge, I1., llohror, C., Tilhnann, II., G., Wahlster, W., Waibel, A.
(1992). Wissenschaflliche Ziele +rod Ncl> pliine fiir das VEI~BMOIIIL-Projekt.
Technica.l report, (,*et'lnan Research Cent;er for Artificial Intelligence (1)FKI Gmbll), Sa;u'briicken, (lermany, 1992.
Bock, J., and Warren, R.
(198,5).
Conceptual accessibility and syntactic structure in sentence fol'rnnl,%ion.
Cognition, 2i, 47-(17.
f)e Smedt, K.
(1990). incremental Sentence Generation: a Computer Model of Grammatical Encoding.
PhD thesis, Nijmegen Institute for Cognition Research and Inform,~tion Technolo~;y, Nijmegen, N1CI TR No 90-01.
Finkler, W.
(1994). Performing Self-Corrections During Incremental Natu~ul Language Gcneralimz.
Document, Germ,~n Research Center for Artificia.l Intelligence (DFKI Gmbll), Saarbrficken, Germany, 1994.
to appear.
Joshi, A.
(I985). An hd.roduetion to TAGs.
Technical Rel)ort MS-CIS-8(1-64, LINC-LAI3:11, l)ep;trtnmnt o\[' Coral)tiLer and Information Scionce, Moore School, University of PennsylVa.ll ia,.
l(anmyama, M., Ochitani, II., a.nd Peters, .q.
(19!/1). Resolvi?t 9 Tra'nslation Mismatches llqth hd'ormation Flow.
29th Annua,l Meeting o\[' the Association for Cotnl)uta.tional Linguistics, 13erkeh, y, CA, 1)p.
19:{-200. Kitger, A.
a.nd Finkh+r, W.
(1994). 7'AG-bascd \[nctrmenlal (:encralion.
"I~chnica.l report, German //esea.rch Center Ibr Artilicia\] Intelligence (DFKI Gmbll), Sa.arbriicken, Germ,'tny.
to apl)ea.r.
Kilger, A.
(1994). Using UTAGs for Incrententa.l and Pa.rallel Generation.
Comlmtalional \[nlclligenco.
to a.ppear.
Kit+a,t+o, I1.
(1990). Incremental Sentence Production wilh a l',rallel Marker-Passing Algorithm.
13th International Conference on Comlmtat+ion;d l,ingulstics, llelsinki, Finland, 1)p.
217 222.
Meteor, M.
(1990). Thc "Ge'ncralion Gap": the Problem of \]~xprcs.sibilil9 in Te:rl Plan*ti*t 9.
I)Ol:ctrt.ln<!llt; of ('.OUlpUl.er a.lld Information Science, Ulfiversity of Massachusetts, Amherst, MA, BBN lteport No.
7347. Wa.rd, N.
(1991). A l;'le:rible, Parallel Model of Natural Langmt/\]c Ceneration.
PhD thesis, Computer Science Division (EFCS), University of Ca.lifornia., Berkeley, CA, Report No.
UCP,/(',S D 91/629. 362

