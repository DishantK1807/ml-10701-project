Adjective based inference Marilisa Amoia INRIA/Universit´e de Nancy 1 & University of the Saarland Saarbr¨ucken Germany amoia@coli.uni-sb.de Claire Gardent CNRS/Loria Campus Scientifique BP 239 54506 Vandoeuvre-les-Nancy, France claire.gardent@loria.fr Abstract In this paper, we propose a fine grained classification of english adjectives geared at modeling the distinct inference patterns licensed by each adjective class.
We show how it can be implemented in description logic and illustrate the predictions made by a series of examples.
The proposal has been implemented using Description logic as a semantic representation language and the prediction verified using the DL theorem prover RACER.
Topics: Textual Entailment, Adjectival Semantics 1 Introduction Understanding a text is one of the ultimate goals of computational linguistics.
To achieve this goal, systems need to be developed which can construct a meaning representation for any given text and which furthermore, can reason about the meaning of a text.
As is convincingly argued in (Ido Dagan and Magnini, 2005), one of the major inference task involved in that reasoning is the entailment recognition task: Does text T1 entail text T2?
Indeed entailment recognition can be used to determine whether a text fragment answers a question (e.g., in question answering application), whether a query is entailed by a relevant document (in information retrieval), whether a text fragment entails a specific information nugget (in information extraction), etc.
Because the Pascal RTE challenge focuses on real text, the participating systems must be robust that is, they must be able to handle unconstrained We thank la R´egion Lorraine, INRIA and the University of Sarrebruecken for partially funding the research presented in this paper.
input. Most systems therefore are based on statistical methods (e.g., stochastic parsing and lexical distance or word overlap for semantic similarity) and few provide for a principled integration of lexical and compositional semantics.
On the other hand, one of the participant teams has shown that roughly 50% of the RTE cases could be handled correctly by a system that would adequately cover semantic entailments that are either syntax based (e.g., active/passive) or lexical semantics based (e.g., bicycle/bike).
Given that the overall system accuracies hovered between 50 and 60 percent with a baseline of 50 %1, this suggests that a better integration of syntax, compositional and lexical semantics might improve entailment recognition accuracy.
In this paper, we consider the case of adjectives and, building on approaches like those described in (Raskin and Nirenburg, 1995; Peters and Peters, 2000), we propose a classification of adjectives which can account for the entailment patterns that are supported by the interaction of their lexical and of their compositional semantics.
We start by defining a classification schema for adjectives based on their syntactic and semantic properties.
We then associate with each class a set of axioms schemas which translate the knowledge about lexical relations (i.e.
antonymy) the adjectives of the class are involved in by extracting this information from WordNet (Miller, 1998) and a set of semantic construction rules and we show that these correctly predicts the observed entailment patterns.
For instance, the approach will account for the following (non)-entailment cases: (1) a.
John frightened the child j= The child is afraid 150% of the cases were true entailment and 50% were false ones, hence tossing a coin would get half of the cases right.
20 KRAQ06 b.
Peter claims that John is a murderer j= John is an alledged murderer 6j= John is a murderer c.
This is a fake bicycle j= This is a false bike j= This is not a real bike 6j= This is a bike d.
John is not awake j= John sleeps 6j= John does not sleep The approach is implemented using Description Logic as a semantic representation language and tested on a hand-built semantic test suite of approximately 1 000 items.
In the latter part of the paper we discuss this testsuite and the philosophy behind it.
2 A
fine grained classification for adjectives As mentioned above, we propose a classification of adjectives based on their lexical, their model theoretic and their morpho-derivational properties.
To facilitate the link with compositional semantics (the construction of a meaning representation for sentences containing adjectives), we also take into account syntactic properties such as the predicative/attributive or the static/dynamic distinction.
We now detail each of these properties.
The overall categorisation system is given in Figure 1.
2.1 Model
theoretic properties The main criteria for classification are given by (Kamp, 1975; Kamp and Partee, 1995) semantic classification of adjectives which is based on whether it is possible to infer from the Adj+N combination the Adj or the N denotation.
Intersective adjectives (e.g., red) licence the following inference inference patterns: A + N j= A A + N j= N For instance, if X is a red car then X is a car and X is red Subsective adjectives (e.g., big) licence the following inference pattern: A + N j= N For instance, if X is a big mouse, then X is a mouse but it is not necessarily true X is big Privative adjectives licence the inference pattern: A + N j= :N For instance, if X is a fake gun then X is not a gun Plain non-subsective adjectives (e.g., alledged) do not licence any inference For instance, if X is an alleged murderer then it is unknown whether X is a murderer or not 2.2 Lexical semantics From the lexical semantics literature, we take one additional classification criterion namely antonymy.
As described in (Cruse, 1986), this term covers different kinds of opposite polarity relations between adjectives namly, binary opposition, contraries and multiple oppositions.
Binary oppositions covers pairs such as wet/dry which license the following inference pattern: A1 :A2 ^ :A1 A2 So that in particular: wet :dry ^ :wet dry Contraries are pairs such as long/short where the implication is unidirectional: A1 j= :A2 ^ :A1 6j= A2 A2 j= :A1 ^ :A2 6j= A1 and in particular: long j= :short^:long 6j= short short j= :long ^:short 6j= long Multiple oppositions involve a finite set of adjectives (e.g., linguistic/economic/mathematical/...
) which are pairwise mutually exclusive.
For a set of opposed adjectives A1 : : : An, the following axioms schemas will be licensed: 8i; j s:t: 1 i; j and i 6= j Ai j= :Aj and :Ai 6j= Aj 2.2.1 Derivational morphology We also take into account related forms that is, whether there exists a verb (Va) or a noun that is semantically related to the adjectives being considered.
Moreover, for nominalizations we distinguish whether the morphologically related noun is an event noun (Ne), a noun denoting a theta role of the related verb (N ) or a non-event noun (Na).
As we shall see, this permits capturing entailment relations between sentences containing morphoderivational variants such as for instance : 21 KRAQ06 (2) a.
John is asleep (Adj ! Va) j= John sleeps b.
John is absent (Adj ! N ) j= John is the absentee c.
John is deeply asleep (Adj ! Ne) j= John’s sleep is deep 2.2.2 Syntactic properties To better support the syntax/semantic interface, we refine the adjectives classes distinguishable on the basis of the above criteria with the following syntactic ones taken from (Quirk et al., 1985).
Attributiveness/Predicativeness. English adjectives can be divided in adjectives which can be used only predicatively (such as alone), adjectives which can be used only attributively (such as mechanical in mechanical enginner) and adjectives which can be used in both constructions such as red.
Modifiability by very.
We distinguish between adjectives such as nice which can be modified by very (i.e.
very nice) and adjectives such as alleged which cannot (*very alleged).
Gradability. We distinguish between adjectives such as big which express gradable properties and have comparative and superlative forms (bigger, biggest) and adjectives such as rectangular which don’t (*more rectangular).
Staticity/Dynamicity. Dynamic adjectives can be used in imperative constructions and in the progressive form (Be reasonable, He is being reasonable), static adjectives cannot (*Be short, He is being short).
3 Semantic
Classes and textual entailment recognition In order to build our classification, we have analysed a set of about 300 english adjectives each of which was manually mapped to the WordNet synset correspondent to the more frequent meaning of the adjective.
In some case, when an adjective presents polysemic forms which belong to different semantic classes more than one form has been considered.
For example, for the adjective civil we consider two senses/forms civil1 (synonym of polite, as in civil man) and civil2 (as in civil engineer) which belong to different semantic classes, the first being intersective and the second subsective.
As Figure 1 shows, the proposed classification includes 15 adjective classes, each with distinct syntactic and semantic properties.
To account for these differences, we define for each class a set of axiom schemas capturing the model theoretic, lexical semantics and morphoderivational properties of that class.
Lexical semantics and morpho-derivational information are derived from WordNet.
For example, the axioms describing antonymy are obtained by extracting from WordNet the antonyms of a particular adjective and then by considering the direction of the entailment relevant for the class the adjective belongs to: asleep wake vs.
polite <rude Morpho-derivational information are derived from WordNet by extracting the derivationally related forms for the given adjective and then iterating the extraction on nouns and verbs in order to obtain information about their antonyms and hyponyms.
For scalar adjective like tall, WordNet contains also a relation is a value of which offers a pointer to the noun concept the adjective is a value of.
Moreover, WordNet links the noun concept to a list of attributes which describe the scalar property it represents.
For example, the adjective tall is a value of fstature,heightg and attributes offstature,heightg are tall and short.
Based on some basic syntactic patterns, we then show that these axioms predict the observed textual entailment patterns for that class.
Before we illustrate this approach by means of some example, we first show how we capture logical entailment between NL semantic representations in a description logic setting.
3.1 Using
description logic to check entailment between NL sentences As argued in (Gardent and Jacquey, 2003), description logic (DL) is an intuitive framework within which to perform lexical reasoning: it is efficient (basic versions of description logics are decidable), it is tailored to reason about complex taxonomies (taxonomies of descriptions) and it is equipped with powerful, freely available automated provers (such as RACER, (Volker Haarslev, 2001)).
For these reasons, we are here exploring a DL encoding of the entailment recognition task for the set of examples we are considering.The particular language we assume has the following syntax.
C; D ! Aj>j?j:A j C u D j C t D j 8R:C j 9R:C The semantics of this language is given below with the domain of interpretation and I the interpretation function which assigns to every atomic con22 KRAQ06 Adjective Class Predicative/Attributive Modifiable by very Gradability static/dynamic Antonymy Related forms Semantic class Class 1: afloat predicative-only static multi-opposition Va, Ne, N intersective Class 2: asleep predicative-only + static binary-opposition Va, Ne, N intersective Class 3: polite both + + dynamic contraries Na intersective Class 4: dry both + + static binary-opposition Va, Ne, N intersective Class 5: open both dynamic binary-opposition Va, Ne, N intersective Class 6: male both static multi-opposition Na, Ne, intersective Class 7: authentic both + static binary-opposition Ne intersective Class 8: big both + + static contraries Ne subsective Class 9: good both + + dynamic contraries Ne subsective Class 10: cultural attributive-only static multi-opposition Na subsective Class 11: recent attributive-only + static multi-opposition Ne subsective Class 12: fake both static binary-opposition Va,Ne privative Class 13: former attributive-only static multi-opposition privative Class 14: questionable both + static contraries Va, Ne plain non-subsective Class 15: alleged attributive-only static contraries Va plain non-subsective Figure 1: Classes of Adjectives cept A, a set AI and to every atomic role R a binary relation RI. >I = ?I = ; (:A)I = nAI (C u D)I = CI \ DI (C t D)I = CI [ DI (8R:C)I = fa 2 j 8b(a; b) 2 RI ! b 2 CIg (9R:C)I = fa 2 j 9b 2 CI ^ (a;b) 2 RIng Now one basic problem with using DL to check entailment between NL expressions, is that DL formulae are “directional” in that they refer to a given set of individuals.
For instance the sentence The boat is floating might be represented by either of the two formulae given in 3 but these two formulae do not stand in an entailment relation (since they refer to different kind of objects namely floating event of a boat in 3a and boats that float in 3b).
(3) a.
float u9theme.boat b.
boat u9theme 1.float To remedy this shortcoming, we introduce the notion of a rotation.
Given a DL formula which only contains conjunction (disjunction is translated in DL as different formulas) = ui=1;n Eventi uj=1;m 9Rj.Typej a rotation of this formula is defined as: 1.
2. 8j 2 f1; :::; mg : Typej u 9R 1j .(ui=1;nEventi u1<k<j;j<k<m 9Rk.Typek) so that the formula: Event1u Event2 u :::u Eventn u9R1.Type1 u9R2.Type2 ...
u9Rn.Typen corresponds to the following n Rotations each of which describe the same situation from the point of view of a particular type 0.
Event u9R1.Type1 u9R2.Type2 ...
u9Rn.Typen Event 1.
Type1 u9R 11 .(Event u9R2.Type2 ...
u9Rn.Typen) Type1 2.
Type2 u9R 12 .(Event u9R1.Type1 ...
u9Rn.Typen) Type2 ...
n. Typen u9R 1n .(Event u9R1.Type1 ...
u9Rn 1.Typen 1) Typen So for example, the sentence Mary knows that John is the inventor of the radio will be represented as a predicate logic formula 9x1mary(x1) ^9x2john(x2) ^9x3radio(x3) ^9e1know(e1) ^ 9agent(e1; x1)^9topic(e1; e2)^9e2invent(e2)^agent(e2; x2)^ patient(e2; x3) the denotation of this PL formula corresponds to the set of individuals fx1; x2; x3g[fe1; e2g.
The corresponding DL representation will be the underspecified representation know u9 agent.mary u9 topic.( invent u9agent.john u9 patient.radio) the denotation of which corresponds to the set fe1g and all its rotations which permit to access the other sets of individuals asserted in the sentence.
Thus for example, the set fx1g which describes the individual Mary can be accessed through the following rotation: Rotation1: mary u9 agent 1.(know u9 topic.( invent u9agent.john u9 patient.radio)) Finally, we say that an arbitrary formula/representation 1 implies the formula 2 iff it is possible to find a rotation Rotationi of 1 the denotation of which describes a subset of the denotation of 2: Definition 1 j= 2 iff 9i:Rotationi( 1) v 2 (1) 23 KRAQ06 3.2 Example class axioms and derivations We now illustrate our approach by looking at two classes in more detail namely, class 1 and class 8.
3.2.1 Class
1 Syntactically, Class 1 contains adjectives like adrift,afloat,aground which can only be used predicatively, are non gradable and cannot be modified by very.
Semantically, they behave like intersective adjectives which enter in multiple opposition relations with other adjectives.
They are furthermore morphologically derived from verbs and can be nominalized.
To reflect these semantic properties we use the following axioms.
Model theoretic semantics.
Adjectives of class 1 are intersective adjective.
They will thus licence the correponding inference patterns namely: A + N j= A (2) A + N j= N (3) Lexical semantics.
Adjectives of class 1 enter in multiple opposition relations.
Hence For instance: afloat j= : aground ^: afloat 6j= aground aground j= : afloat ^: aground 6j= afloat sunken j= : afloat ^: afloat 6j= sunken afloat j= : sunken ^: sunken 6j= afloat Morpho-derivational semantics.
Adjectives in Class 1 can be related to both nouns and verbs.
Thus, for example the adjective afloat in WordNet is related to the noun floating which is related to the verb float, by assuming that the semantics assigned to the verb float is float(e), theme(e,a), the adjective afloat is assigned the following semantics: afloat 9 Theme 1.float This is encoded in the following axiom schemas: MDR 1.
Adj1 <: Adj2 If Adj1 = Anto(Adj2) e.g., afloat <: sunken MDR 2.
Adj1 9 Theme 1.V1 If Adj1 is related to V1 e.g.,afloat 9 Theme 1.float MDR 3.
V1 <: V2 If V1 = Anto(V2) e.g., float <: sink MDR 4.
N1 V1 If Adj1 is related to an evt denoting N1 e.g., floating float MDR 5.
N1 <: N2 If N1 is an antonym of N2 e.g., floating <: sinking MDR 6.
N11 9 Theme 1.V1 If Adj1 is related to a noun N11 denoting the theme role of the verb V1 e.g., floater 9 Theme 1.float We make the following assumptions about the syntax/semantic interface that is, about the semantic representations associated with given sentence patterns.
SCR 1.
NP toBe Adj ADJ u NP SCR 2.
NP toBe clearly Adj ADJ u NP SCR 3.
Ni[+event] of NP is clear V i u9theme:NP SCR 4.
Nii[-event] is clear 9theme 1:V i SCR 5.
NP toBe V[+ing].
V u9Theme:NP Given the above axiom schemas and semantic constructions rules, the following inference patterns can be handled: 1.
ADJ1 + N j= N Ex.
This boat is afloat.
j= This is a boat.
2. ADJ1 + N j= ADJ1 Ex.
This boat is afloat.
j= This is afloat.
3. ADJ1 + N 6j= : N Ex.
The boat is afloat.
6j= This not a boat.
4. ADJ1 + N j= : ADJ2 u N Ex.
The boat is afloat.
j= The boat is not sunken.
5. : ADJ1 + N 6j= ADJ2 u N Ex.
The boat is not afloat.
6j= The boat is sunken.
6. ADJ1 + N j= N u9theme 1:V 1 Ex.
The boat is afloat.
j= The boat is the floater.
7. ADJ1 + N j= V1 u9theme.N Ex.
The boat is afloat.
j= The boat is floating.
8. ADJ1 + N j= N1 u9theme.N Ex.
This boat is clearly afloat.
j= The floating of the boat is clear.
9. ADJ1 + N j= N u9theme 1.N1 Ex.
This boat is clearly afloat.
j= The floating of the boat is clear (or the boat is the floating object).
10. : (ADJ1 + N) j= : (V1 u9theme.N) 6j= : N Ex.
This is not a floating boat.
6j= This is not a boat.
11. : (ADJ1 + N) 6j= : Adj1 Ex.
This is not a floating boat.
6j= This is not afloat.
12. : (ADJ1 + N) 6j= : V1 Ex.
This is not a floating boat.
6j= This is not floating.
13. : (ADJ1 + N) 6j= : N1 Ex.
This is not a floating boat.
6j= This is not a floating.
14. : (ADJ1 + N) 6j= :9 theme 1.V1 Ex.
This is not a floating boat.
6j= This is not the floater.
15. : (ADJ1 + N) 6j= :9 theme.N Ex.
This is not a floating boat.
6j= This is not a floating.
24 KRAQ06 In the inference patterns 10 to 15, the negation of the adjective-noun compound : (ADJ1 + N) is syntactically blocked, as the adjectives in this class are used predicative only, however the equivalent representation V1 u9theme.N can be used to motivate the inferences.
The following show in more detail how the first three of the above (non) entailments are recognised.
(4) a.
The boat is afloat.
b. j= The boat is floating.
4a Boat u Afloat (by SCR 1) A 4b Float u9Theme:Boat (by SCR 5) B Afloat 9Theme 1:Float (by MDR 2) C 1 Boat u9Theme 1:Float (from A and C) D D j= B (By Defn 1) E (5) a.
The boat is afloat.
b. j= The boat is the floater.
5a Boat u Afloat (by SCR 1) A 5b Boat u9Theme 1:float (by SCR 4) B Afloat 9Theme 1:Float (by MDR 2) C A j= B (from B und C) D (6) a.
The boat is afloat.
b. j= The boat is not sinking.
6a Boat u Afloat (by SCR 1) A 6b : sink u9Theme:boat (by SCR 5) B Afloat 9Theme 1:Float (by MDR 2) C Boat u9Theme 1:Float (from A and C) D float u9Theme:boat (By Defn 1) E E j= B (by MDR 1) F 3.2.2 Class 8.
Class 8 contains adjectives like big,fast,tall,deep which can be used attributively and predicatively, are gradable, can be modified by very.
Semantically, they are classified as subsective adjectives and their antonyms are contraries.
They are morphologically related to nouns which describe the particular property denoted by the adjectives and to nouns of which they are attributes.
Model theoretic semantics.
Adjectives of class 8 are subsective adjective.
They will thus licence the correponding inference patterns namely: A + N 6j= A (4) A + N j= N (5) Lexical semantics.
The Adjectives of class 8 enter in contrary opposition relations.
Hence, the following axioms schemas will be licensed: Ai j= :Anto(Ai) and :Ai 6j= Anto(Ai) (6) For instance: long j= : small ^: long 6j= small deep j= : shallow ^: deep 6j= shallow Morpho-derivational semantics.
Adjectives in Class 8 can be related to nouns but not to verbs.
Moreover, such adjectives are mapped in WordNet to noun concepts through two different links: derivationallyrelated to and is a value of.
For example, the adjective tall in WordNet is derivationally related to the noun tallness and is a value of the concept noun height.
The adjectives in this class describe gradable properties so that their semantics corresponds to: has-property(Related Noun u9has-measure.Top) in which the role has-measure account for the value of the scalar property described by the adjective, which remain underspecified (Top) if the adjective is used without a reference to the value of measure.
When the value of the measure is specified, for example by combining the adjective with a noun, as for example in This is a tall man, then the noun is assigned as a value of the measure role: man u9has-property.(tallness u9has-measure.man) which translate This is tall as a man.
This is encoded in the following axiom schemas: MDR 1.
Adj1 <: Adj2 If Adj1 = Anto(Adj2) Ex.
tall <: short MDR 2.
Adj1 <9 has property.(N1 u9has measure.Top) If Adj1 is related to a noun N1 denoting the property described by Adj1 Ex.
tall < 9 has property.(tallness u9has measure.Top) MDR 3.
N1 <: N2 If N1=Anto(N2) Ex.
tallness <: shortness MDR 4.
N1 N’ u9has value.Adj1 If Adj1 is an attribute of the noun N’ Ex.
tallness height u9has value.tall MDR 5.
N2 N’ u9has value.Adj2 If Adj2 is an attribute of the noun N’ Ex.
shortness height u9has value.short MDR 6.
N1 < N’ If N1 is an hyponym of N’ Ex.
tallness < height 25 KRAQ06 MDR 7.
N2 < N’ If N2 is an hyponym of N’ Ex.
shortness < height MDR 8.
Adj11 < Adj1 If Adj1 is a scalar attribute with value less then Adj11 (hyponymy is not defined for adjectives) Ex.
giant < tall For the moment, we don’t account for the semantics of comparatives forms of adjectives but we will do that in the feature, by also introducing a representation for scales as described in (Kennedy, 2005).
We make the following assumptions about the semantic representations associated with basic sentence patterns.
SCR 1.
NP toBe Adj NP u9 has property.(N1 u9has measure.NP) SCR 2.
That toBe Det Adj NP NP u9 has property.(N1 u9has measure.NP) SCR 3.
NP toBe clearly Adj NP u9 has property.(N1 u9has measure.NP) SCR 4.
N1 of NP is clear NP u9 has property.(N1 u9has measure.NP) SCR 5.
The Adj N’ of NP NP u9 has property.(N’ u9 has value.Adj u9has measure.NP ) SCR 6.
NP1 toBe Adj as a N NP1 u N u9has property.(N’ u9 value.Adj u9 has measure.N) SCR 7.
NP1 toBe NP2[+measure] Adj NP1 u9has property.(N’ u9 value.Adj u9 has measure.NP2) SCR 8.
NP1 toBe NP2[+measure] Adj N NP1 u N u9has property.(N’ u9has value.Adj u9 has measure.NP2) Given the above axioms, the following examples can be handled: (7) (a) John is a 1.50 meter tall man.
j= (b) John is 1.50 meter tall.
7a John u Man u9has property.(height A uhas value.tall uhas measure(1.50 meter) ) (by SCR 8) 7b j= John u9has property.(height uhas value.tall B uhas measure(1.50 meter) ) (by SCR 7 and from A) A j= B C (8) (a) John is a 1.50 meter tall man.
6j= (b) John is a tall man.
8a John u Man u9has property.(height A uhas value.tall uhas measure(1.50 meter) ) (by SCR 8) 8b j= John u Man u9has property.(height u B has value.tall uhas measure(man) ) (by SCR1 and from A) A 6j= B C 4 Implementation For each of the 15 classes, we have specified a set of axioms schemas, some basic semantic construction rules and a set of inference patterns which could be deduced to follow from both of these.
The axioms schemas were implemented in Description Logic using RACER and for each inference pattern identified, the corresponding Description Logic query was checked to verify that the proposed axioms and semantic construction rules did indeed correctly predict the deduced inference patterns.
5 Further
work and evaluation The main contribution of this work is a detailed analysis of the interactions between derivational morphology, lexical and compositional semantics and of their impact on the entailment patterns licensed by sentences containing adjective or their related nouns/verbs.
To turn this analysis into a computational system, its components need to be integrated into a semantic analyser and the behaviour of that analyser tested against a collection of data.
We are currently working on developing such an analyser within a symbolic grammar framework.
We have also started to develop an evaluation test suite geared towards entailment recognition between sentence pairs containing adjectives.
At the moment, the test suite contains about 1 000 inference pairs.
Each item in the TestSuite (see fig.
2) is annotated with a judgement about the truth of the entailment between the pair of sentences, with the type of inference involved and with the specification of adjective involved.
Moreover, each adjective is annotated with the WordNet sense corresponding to the given class.
The idea behind this test suite is similar to that underlying the creation of the TSNLP (Test suite for natural language processing) (see (Oepen and Netter, 1995)) or the Eurotra testsuites (see (Arnold and des Tombe, 1987)) namely, to provide a benchmark against which to evaluate and compare existing semantic analyzers.
Thus this 26 KRAQ06 <pair id="1" value="TRUE" class="[CLASS1]" inference="Adj/Verb"> <t>The boat is <sn n="1"> afloat </sn>.</t> <h>The boat is floating.</h> </pair> <pair id="2" value="FALSE" class="[CLASS6]" inference="Antonymy"> <t>This is not a <sn n="1"> rectangular </sn> table.</t> <h>This is a <sn n="1"> round </sn> table </h> </pair> <pair id="3" value="TRUE" class="[CLASS8]" inference="Adj/Noun"> <t>The line is 2 meter <sn n="1"> long </sn>.</t> <h>The length of the line is 2 meter.</h> </pair> <pair id="4" value="FALSE" class "[subs/intersective]" inference="Attr/Pred"> <t>The treasurer is <sn n="2"> present </sn>.</t> <h>This is the <sn n="1"> present </sn> treasurer.</h> </pair> Figure 2: TestSuite test suite illustrates the semantic and syntactic behaviour of adjectives and their related verbs/nouns with respect to textual entailment.
One could imagine other test suites illustrating the semantic behaviour of verbs, of quantifiers, of discourse connectives, etc.
Just as the TSNLP still proves useful in supporting the development of new symbolic parsers/grammars, hand built test suites of artificial examples might prove useful in improving the accuracy of semantic analyser wrt textual entailment.
Indeed the Pascal RTE challenge has shown that existing systems fares rather poortly at the textual entailment task.
Providing a set of hand crafted semantic test suites might help in remedying this shortcoming.
Beside implementing and evaluating the analysis of adjectives presented in this paper, we are also working on refining this analysis by combining it with a detailed analysis of noun semantics so as to handle (non) entailments such as: (9) Lyon is the gastronomical capital of France 6j= Lyon is the capital of France References D.J.
Arnold and Luis des Tombe.
1987. Basic Theory and methodology in Eurotra.
Cambridge University Press.
DA. Cruse.
1986. Lexical Semantics.
Cambridge University Press.
Claire Gardent and Evelyne Jacquey.
2003. Lexical reasoning.
In Proceedings of the ICON’03 (International Conference on Natural Language Processing), Mysore, India.
Oren Glickman Ido Dagan and Bernardo Magnini.
2005. The PASCAL Recognising Textual Entailment Challenge.
Hans Kamp and Barbara Partee.
1995. Prototype theory and compositionality.
Cognition, (57):129–191.
Hans Kamp.
1975. Two theories about adjectives.
In Edward L.
Keenan (ed.), Formal Semantics of Natural Language, pages 123–155.
Cambridge University Press.
Christofer Kennedy.
2005. Vagueness and grammar: The semantics of relative and absolute gradable adjectives.
Ms., pages 129–191, June.
K. J.
Miller. 1998.
Modifiers in wordnet.
In C.
Fellbaum (ed.), WordNet An Electronic Lexical Database.
Cambridge, MA, The MIT Press.
Stephan Oepen and Klaus Netter.
1995. TSNLP test suites for natural language processing.
Groningen, The Netherlands.
Conference on Linguistic Databases.
I. Peters and W.
Peters. 2000.
The Treatment of Adjectives in SIMPLE: Theoretical Observations.
Athens. R.
Quirk, S.
Greenbaum, G.
Leech, and J.
Svartvik. 1985.
A Comprehensive Grammar of the English Language.
Longman. V.
Raskin and S.
Nirenburg. 1995.
Lexical Semantics of Adjectives, a micro-theory of adjectival meaning.
MCCS Report.
Ralf M¨oller Volker Haarslev.
2001. Description of the racer system and its applications.
In Proceedings International Workshop on Description Logics (DL2001, Stanford, USA .

