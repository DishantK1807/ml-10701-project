ADAPTIVE DIALOGUE THE BASIS FOR PERSONAL COMPUTER SYSTEM Victor Briabrin Computing Center, Academy of Sciences, Hosoow, USSR 1.
Personal Computer Systems (POS) represent nowadays a signifteaut trend in the professiona~, and amateur use of computers, in particular of miniand microcomputers° We believe that such systems must have the means for: (a) knowledge representation about the problem donm/n, the system itself and the partieular users; (b) man-n~chine interaction, taking benefits of both partners" abilities; (c) access to application-oz-lented programs and data as well as to other computer systems° Our experience with natural language question-anewer£n8 systems has proved that the share of.
QAS users preferr~n6 real RL is rather small.
Among the reasons one can point out such features as inadequate heaviness and slowness of NL-proeessors, their unportablltty.
These reasons, on one hand, and the apparent success of simple table-driven and production rule systems, on the ether, have led us to the development of Adaptive Dialogue System as a basis for PCS, Our approach is based on the integration of 3 core components allowing an efficient system implementation within the limited micz~computer resources: the Object Base (OB) constitutes a media for storing and manipulation of systems °, problem-oz~lented and lexical obJects; the Adaptive Dialogue Monitor (AI~) provides the guidance 55 for man-computer comnm£oation through die~ogue processes! the P-4kach£ne (I~) accomplishes the necessary operations supporting system s own beha~ou~ as well as the access to applied programs and data.
process in the system takes place within a cert~ qn~ronment which is characterized by a set of mutu~ly accessible objects and by initial dialogue process.
A dialogue process or D-urocess comprises a number of interconnected states and supports particular man-computer activity on achieving some goal.
Almost every stat~ of D-process acoomplieh~ a e~mple act of com-mn£cat~ with the user, an~yzJ,ug hie reply, performing associated actions and transiting to another state.
Thus an analo~r could be drawn between D-process and ATN, with the important difference that D-process supports oneoin8 d£e~ogue with the user rather than an~yeis of preentered st~-Lnee There are ) state types: MENU promptin8 the user to choose among e~ernativee!
A3EVAL accepting the asked Ye~ue from the user!
ZVAL getting computed value from external'program, By means of MENU and ~KVAL D-process iS communicating with the user°s terminal, IVAL connects it with applied pro8raew.
The eotions with£n the states are expressed as.
strings of ~ perfor~tJ~ predication of values, manipulation of different objects, call~Jae/return£ng to another D-processes, runnL~ extern~ programs etc.
Adapti~rity is of prt~aa~ concern in the presented approach since it ~vee the user, on one hand, the ability to subject the system to his particular needs! on the other to put himself into an active or passive position during some coa~mication process.
Adaptivity is provided by strictly followin 8 one principlei any kind of system's acti~Lty pertinent to man-computer oonzm~Lcation must be controlled by definite objects whLch can be created and modified by the neme or other activities.
56 2.
There are 3 basic klnds of objects in the OBs system support~ (S-objects), problem-oriented (PO-obJeote) and le~tcal (L-objects).
Each of these kinds is further divided into categories or types.
S-ob.teots hold the control over man, computer interaction and the ~ocess to applied progrems and dBta.
They describe az~rth~ng residing or happezLing in the system and therefore ~re called "descriptors".
The following descriptors are of the most t,nportance: DE enwlronment descriptors DP dialogue process descriptors. DS dialogue state desoz~ptors DX program descriptors DD data descriptors DG dialogue scenario' ~ ("game") descriptors DU user descriptors PO-ob.tects describe concepts, properties, relations and values allowing to build problem-oriented models.
PO-obJects are difterentiated by their categories (typ~s): C classes of physical objects: "country", "person" Rse~ti@ relations: "negotiation", ',disarmament" V structured value descriptors: "date", "NATO" Tterminal value descriptors: "ATOM", "STRING", "INTEGER" P object properties substantiated by V and T values~ "pop-lation ", "b~thday", "address", "weight" CP object properties substantiated by the other C-obJeotss "capital" (of country), "relatives" (of person) RP semantic relations ar~entss "participants" (of negotiation), "place", "goal" (of any aotiwlty) CI, B.I, Vl, TI individual objects and actual values substantiations of C, R, V and T-objectso For external representation of objects we use a formalism of F-l~e developed for DILOS system /1/.
S~nple exemples: oapltal (CP): IS olty; OF country 57politician (C): IS person; from country; post official-post official-poet (V): IS list; 0F ATOM; EL (president defenseminister)...
NATO (V): IS list; OF country!
EL (Belgium Gr-Britain)...
Weinberger (CI): IS politician| from USA! post defense-minister defense-minister (TI): IS ATOMj ELOP official-post The problem domain model could be ~xpressed in a fore of conceptual semantic network /2/ with the nodes represented by C, R, V and T-objects and the arcs labeled by P, CP and RP-objects° Representation of actual world fragments would then have a form of terminal semantic network with CI, RI, VI and TI-objects being the nodes, connected by P, CP and RP-arcs.
L-obteots or "lexems" provide access to all other objects in the 0B using the words and phrases of problem-oriented natural language (I~OL).
Each lexeme has external representation (.
the name of L-object) derived from the input word form by simple morphological transformation° Each L-object has special properties which serve for two purposes" (1) pointing to other objects denotations of the given lexeme and (2) carrying ~ammatical marks for efficient POL analysis.
Presently L-objects are divided into the following 10 categories: LN lexlcal names of PO and S-objects LS synonyms polnting to other L-objects LC components of word combinations and idioms LQ question tokens pronouns and adverbs ("who", "how") LJcon~unctlons of different types ("and", "or", "but") LRreferenclal pronouns ("these", "his") LP prepositions with indication of implied semantic oases for different relations LD "deflnitors" establishing paradlgmatlo relations between objects (."is", "denote", "contatln") LA articles X ignored or unknown lexames 58 3o The system starts its operation by running initial D-process which, first, makes acquaintance with particule~ user and, second, prompts him with the main menu to choose anon8 several basic activities!
(A) filling the 0B with the new objects or modifying the old ones ! (B) entering particular problem-solvlng task!
(C) getting information on system components and processes.
In (A) one might concentrate on creating the new dialo~e schemata which is done by building new DP and DS-obJects.
This special kind of activity results in a new communication lansuage (sublauguage) which might be immediately tested and used for practical needs.
Another kind of (A) is connected with the creation of P0 and L-objects.
The user can do it two different w~s8 by entering pattern-controlled expressions which define particular object categories| by calling special D-pro0esses responsible for buildin 8 appropz~lat • objects.
Although from the user's standpoint these alternatives differ in the share of man-machine aoti~-lties, both of them are based on the same rules having the general forms <pattern> \[= ~condition>~ ~ actions ~pattern~ defines the combination of object categories accepted from the user, no matter if they come sequentially (one object per D-state) or simultaneously as one line of text.
Optional Zcondition~ allows checking particula~ properties of the accepted ob~ectso The ~ actions~ emend the old objects or create the new ones.
A simple rule might look as follbwlng= • (X "0~ CI m~ C2)= ~t(X, "TP, "CP) Put (X, "OP, C1) l~t(X, "IS, C2) l~t(C1, X, C2) Such a rule can handle the expression: "president of country is a politician" which might be entered in one sentence or 59 spread over several ASKVALI.
The result would be crention of new CP-ob~eot "president" and modifyi~ the C-object "country".
In (B) the change of initiative can be softly controlled by the user in the sense that he should not apply special knowledge or feel any barriers when moving from one node of interaction to another.
In any mode, however, & result of ADM operation is reflected in F-expression /2/ which carries the semantic meaning of the input sentence.
Thus, for example, a phrase "Defense ministers of NAT0 met in the capital of France on October 18th" could be transformed into the following F-expressions (Meetings participants (politician (s): post defense-minister from (country (s) = ELOF ~ATO)) place (capital = 0F Francs) time (date = M October D 18) Such an expression is directed to 1~ where it is interpreted with the result of creating/pointing at some nodes in the terminal semantic network thus representing the meaning of the entered text° References /1/ Ne Asaf~eva, A° Borkovsky, Y.
Briabrin, V.
Ponon~rev, G.
Senin. Knowledge Representation and Natural L~ge l~rooessing in DILOBo In "The Problems of Applied Systems Development".
Ed. A.
Narin'any. Novosibirsk, 1979.
/2/ V.
Briabrin: F-language a Formalism for Knowledge Representation in the Intelligent Dialo~ae System.
In "Applied Informatics", V.1, ed.
Y. Savinkov, Moscow, 1981 .

