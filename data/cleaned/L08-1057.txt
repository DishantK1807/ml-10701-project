<algorithm name="ParsCit" version="080917">
<citationList>
<citation valid="true">
<authors>
<author>Tomas By</author>
</authors>
<title>Some notes on the PARC 700 dependency bank</title>
<date>2007</date>
<journal>Natural Language Engineering</journal>
<volume>13</volume>
<pages>282</pages>
<contexts>
<context>y need to be extended, or modified. have different surface form they will have the exact same representation in the dependency bank. About 15% of the tokens in the PARC 700 are ambiguous in this way (By, 2007, pp. 275–7). Since the PARC 700 also includes a large amount of attributes of single tokens,a user might be inclined to not just compare the dependency links but also the attributes, or try to use th</context>
<context>than half of the tokens in the PARC 700 are identical to a corresponding token in the Penn Treebank, and about 12% of the PTB tokensin the seven hundred sentences do not occur in the PARC 700 at all (By, 2007, pp. 277–8). Automatic mapping of the tokens in the PARC 700 and the PTB is described in By (2007, pp. 268–9), but it is not a trivial problem. There is also a certain amount of inconsistency in the </context>
<context>By, 2007, p. 273), tokens that contain spaces (By, 2007, pp. 273–4), comparative constructions (By, 2007, pp. 266, 274–5), and the technical distinction between indexed tokens and ‘attribute tokens’ (By, 2007, p. 263). Finally, the few, but completely unnecessary, markup errors (By, 2007, p. 272) could have very easily been avoided by using an established programming language syntax instead of a specially</context>
<context>hould be unambiguously formally specified, and also easy for a human to read and understand. The first requirement has been met by using Prolog syntax, specifying the data format in Backus-Naur Form (By, 2007, pp. 269–71), and also listing all possible attribute names, attribute values, and dependency links together with their meanings (tables 1 and 2). The second requirement is of course more difficult, </context>
<context>raightforward to ensure the consistency of the tokenisation. But a dependency representation also allows a more powerful type of automatic verification, namely checking that the trees are projective (By, 2007, pp. 267–8). While it is probably not possible to represent all constructions in the language using fully projective dependency trees (Mel’ˇcuk and Pertsov, 1987, pp. 184–6); (Mel’ˇcuk, 1988, pp. 36–</context>
</contexts>
<marker>By, 2007</marker>
<rawString>Tomas By. 2007. Some notes on the PARC 700 dependency bank. Natural Language Engineering, 13(3):261– 282.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Carroll</author>
<author>Ted Briscoe</author>
<author>Antonio Sanfilippo</author>
</authors>
<title>Parser evaluation: a survey and a new proposal</title>
<date>1998</date>
<booktitle>In Proceedings of the first International Conference on Language Resources and Evaluation</booktitle>
<marker>Carroll, Briscoe, Sanfilippo, 1998</marker>
<rawString>John Carroll, Ted Briscoe, and Antonio Sanfilippo. 1998. Parser evaluation: a survey and a new proposal. In Proceedings of the first International Conference on Language Resources and Evaluation.</rawString>
</citation>
<citation valid="true">
<title>The grammar of Dionysios Thrax</title>
<journal>The Journal of Speculative Philosophy</journal>
<marker></marker>
<rawString>Thomas Davidson. 1874. The grammar of Dionysios Thrax. The Journal of Speculative Philosophy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M A K Halliday</author>
<author>Christian M I M Matthiessen</author>
</authors>
<title>An Introduction to Functional Grammar. Hodder Arnold, London, third edition</title>
<date>2004</date>
<marker>Halliday, Matthiessen, 2004</marker>
<rawString>M.A.K. Halliday and Christian M.I.M. Matthiessen. 2004. An Introduction to Functional Grammar. Hodder Arnold, London, third edition.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Hudson</author>
</authors>
<title>English Word Grammar</title>
<date>1990</date>
<publisher>Basil Blackwell Ltd</publisher>
<marker>Hudson, 1990</marker>
<rawString>Richard Hudson. 1990. English Word Grammar. Basil Blackwell Ltd.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Hudson</author>
</authors>
<title>Language Networks</title>
<date>2007</date>
<publisher>Oxford University Press</publisher>
<marker>Hudson, 2007</marker>
<rawString>Richard Hudson. 2007. Language Networks. Oxford University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tracy Holloway King</author>
<author>Richard Crouch</author>
<author>Stefan Riezler</author>
<author>Mary Dalrymple</author>
<author>Ronald M Kaplan</author>
</authors>
<title>The PARC 700 Dependency Bank</title>
<date>2003</date>
<booktitle>In Proceedings of the 4th International Workshop on Linguistically Interpreted Corpora, held at the 10th Conference of the European Chapter of the Association for Computational Linguistics (EACL’03</booktitle>
<location>Budapest</location>
<contexts>
<context>y trees. All that is complicated is unnecessary; all that is necessary is simple. Michail Kalashnikov 1. Introduction This work complements the criticism in By (2007) of the PARC 700 dependency bank (King et al., 2003) by offering a concrete proposal for a better dependency bank format, with semi-automatically created markup of the same sentences. Nine of the sentences in the PARC 700 consist of one single token, </context>
</contexts>
<marker>King, Crouch, Riezler, Dalrymple, Kaplan, 2003</marker>
<rawString>Tracy Holloway King, Richard Crouch, Stefan Riezler, Mary Dalrymple, and Ronald M. Kaplan. 2003. The PARC 700 Dependency Bank. In Proceedings of the 4th International Workshop on Linguistically Interpreted Corpora, held at the 10th Conference of the European Chapter of the Association for Computational Linguistics (EACL’03), Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P H Matthews</author>
</authors>
<date>1981</date>
<publisher>Syntax. Cambridge University Press</publisher>
<contexts>
<context> satisfying it has been to use traditional, well established names for the word categories and dependency links. Figure 1 shows an example of how this looks, in the form of a classic dependency tree (Matthews, 1981, p. 81). The finite verb is the root of the sentence, except if sentence is complex (Quirk et al., 1985, p. 719), in which case the conjunction is the root. The tokens are not modified, so concatenat</context>
</contexts>
<marker>Matthews, 1981</marker>
<rawString>P.H. Matthews. 1981. Syntax. Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Igor A Mel’ˇcuk</author>
<author>Nikolaj V Pertsov</author>
</authors>
<title>Surface Syntax of English</title>
<date>1987</date>
<publisher>John Benjamins</publisher>
<marker>Mel’ˇcuk, Pertsov, 1987</marker>
<rawString>Igor A. Mel’ˇcuk and Nikolaj V. Pertsov. 1987. Surface Syntax of English. John Benjamins.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Igor A Mel’ˇcuk</author>
</authors>
<title>Dependency Syntax: Theory and Practice</title>
<date>1988</date>
<publisher>State University of New York Press</publisher>
<marker>Mel’ˇcuk, 1988</marker>
<rawString>Igor A. Mel’ˇcuk. 1988. Dependency Syntax: Theory and Practice. State University of New York Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Quirk</author>
<author>S Greenbaum</author>
<author>G Leech</author>
<author>J Svartvik</author>
</authors>
<title>A Comprehensive Grammar of the English Language</title>
<date>1985</date>
<location>Longman, London</location>
<contexts>
<context>dency links. Figure 1 shows an example of how this looks, in the form of a classic dependency tree (Matthews, 1981, p. 81). The finite verb is the root of the sentence, except if sentence is complex (Quirk et al., 1985, p. 719), in which case the conjunction is the root. The tokens are not modified, so concatenating them (and adding appropriate whitespace) will produce the original sentence string. Instead, all ver</context>
<context>nk types for nonadverbial verb arguments (obj, obj theta, comp, xcomp, obl, obl ag, obl compar). The three used in the Kalashnikov 691 (dirobj, indirobj, complement) are the normal grammatical terms (Quirk et al., 1985, p. 54). Clause ::= sentence(SentNum,Id,WordNums,NodeNums) | word(SentNum,WordNum,Word,Attributes) | node(SentNum,NodeNum,Word,Attributes) | dependency(SentNum,Dnode,DepRel,Dnodeto) SentNum ::= Numbe</context>
</contexts>
<marker>Quirk, Greenbaum, Leech, Svartvik, 1985</marker>
<rawString>R. Quirk, S. Greenbaum, G. Leech, and J. Svartvik. 1985. A Comprehensive Grammar of the English Language. Longman, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Winograd</author>
</authors>
<title>Syntax, volume 1 of Language as a Cognitive Process</title>
<date>1983</date>
<publisher>Addison-Wesley</publisher>
<marker>Winograd, 1983</marker>
<rawString>Terry Winograd. 1983. Syntax, volume 1 of Language as a Cognitive Process. Addison-Wesley.</rawString>
</citation>
</citationList>
</algorithm>

