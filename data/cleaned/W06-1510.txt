Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 73–80, Sydney, July 2006.
c©2006 Association for Computational Linguistics Quantifier Scope in German: An MCTAG Analysis Laura Kallmeyer University of Tübingen Collaborative Research Center 441 lk@sfs.uni-tuebingen.de Maribel Romero University of Pennsylvania Department of Linguistics romero@ling.upenn.edu Abstract Relative quantifier scope in German depends, in contrast to English, very much on word order.
The scope possibilities of a quantifier are determined by its surface position, its base position and the type of the quantifier.
In this paper we propose a multicomponent analysis for German quantifiers computing the scope of the quantifier, in particular its minimal nuclear scope, depending on the syntactic configuration it occurs in.
1 Introduction: The data (1) A man loves every woman.
∃ > ∀, ∀ > ∃ In English, in sentences with several quantificational NPs, in principle all scope orders are possible independent from word order.
(1) for example has two readings, the ∃ > ∀ reading and the inverse scope ∀ > ∃ reading.
This is different in German where word order is crucial for scope possibilities.
(2) a.
Viele Männer haben mindestens eine many mennom have at least one Frau hofiert.
womanacc flattered.
‘Many men have flattered at least one woman.’ viele > eine, ∗eine > viele b.
Mindestens eine Frau haben viele at least one womanacc have many Männer hofiert.
mennom flattered.
‘Many men have flattered at least one woman.’ viele > eine, eine > viele In German, for quantifiers in base order, the surface order determines scope.1 (2a) has only the scope order viele > eine corresponding to surface order, that is, the inverse order eine > viele is not available.
In contrast to this, if the word order differs from the base order, ambiguities are possible.
(2b) for example displays both scope orders, viele > eine and eine > viele.
In the literature, the following generalizations have been noticed for German: For two quantifiers Q1, Q2 with Q1 preceding Q2 in the surface order of a sentence, the scope order Q1 > Q2 is always possible.
Furthermore, the inverse reading Q2 > Q1 is possible if (Q1) Q1 has been moved so that Q2 c-commands the trace of Q1 ((Frey, 1993)), and (Q2) Q1 is a weak quantifier (e.g., irgendein ‘some’, viele ‘many’, cardinals) ((Lechner, 1998)).
Evidence for (Q2) –and further evidence for (Q1)– are the examples in (3)–(4).
In (3), the (a)example is in base order and thus has only surface scope, but moving the weak quantifier over the dative quantifier in the (b)-version results in scope ambiguity.
This contrasts with (4).
In (4), the (a)version with base order has only surface scope, as before.
But now we move the strong quantifier over the dative quantifier, and this does not yield ambiguity.
That is, even though the dative quantifier c-commands the trace of the moved quantifier both in (3b) and in (4b), only when the moved 1Throughout the paper we assume an unmarked intonation.
With a different intonation, other scope orders become available because of the change in information structure.
But this lies outside the scope of this paper.
The base order depends on the verb; in most cases it is Subject (Indirect Object) Direct Object.
73 element is a weak quantifier do we obtain scope ambiguity.
(3) a.
... dass er [fast jedem Verlag]...
that he almost every publisher [mindestens ein Gedicht] anbot.
at least one poem proposed_to.
‘... that he proposed some poem to almost every publisher.’ jedem > ein, ∗ein > jedem b.
... dass er [mindestens ein Gedicht]1 ...
that he some poem [fast jedem Verlag] t1 anbot.
almost every publisher proposed_to.
jedem > ein, ein > jedem (4) a.
... dass er [mindestens einem Verleger] ...
that he at least one publisher [fast jedes Gedicht] anbot.
almost every poem proposed_to ‘... that he proposed almost every poem to at least one publisher.’ jedes > einem, ∗einem > jedes b.
... dass er [fast jedes Gedicht]1 ...
that he almost every poem [mindestens einem Verleger] t1 at least one publisher anbot.
proposed_to. jedes > einem, ∗einem > jedes (Kiss, 2000) claims that if two quantifiers have been moved such that among themselves they remain in base order, inverse scope is not possible between them.
Because of this, he argues for a non-movement-based theory of German quantifier scope.
However, Kiss’ claim is not true as can be seen with the example (5) from (Frey, 1993): (5) a.
weil der freundliche Museumsdirektor because the friendly curatornom [mindestens einer Frau]1 at least one womandat [fast jedes Gemälde]2 gezeigt hat almost every paintingacc has shown ‘because the friendly curator has shown almost every painting to at least one woman’ Q1 > Q2, ∗Q2 > Q1 b.
weil [mindestens einer Frau]1 [fast jedes Gemälde]2 der freundliche Museumsdirektor t1 t2 gezeigt hat Q1 > Q2, Q2 > Q1 In both cases, (5a) and (5b), the two quantifiers are in base order.
According to Kiss there should be, contrary to fact, no ambiguity in (5b).
The difference between the two is that in (5a) the quantifiers are in base position while in (5b) both of them have been scrambled with the result that Q2 c-commands the trace of Q1.
We assume with (Frey, 1993) that this is why the inverse scope order becomes available.
We therefore stick to the above-mentioned generalizations (Q1) and (Q2) and try to capture them in our LTAG analysis.
This means that, in order to capture (Q1), we need a syntactic analysis of German NPs that takes into account movement and base positions.
2 English
quantifier scope in LTAG We use the LTAG semantics framework from (Kallmeyer and Romero, 2004; Kallmeyer and Romero, 2005).
Semantic computation is done on the derivation tree.
Each elementary tree is linked to a semantic representation (a set of Ty2 formulas and scope constraints).
Ty2 formulas (Gallin, 1975) are typed λ-terms with individuals and situations as basic types.
The scope constraints of the form x ≥ y specify subordination relations between Ty2 expressions.
In other words, x ≥ y indicates that y is a component of x.
A semantic representation is equipped with a semantic feature structure description.
Semantic computation consists of certain feature value identifications between mother and daughter nodes in the derivation tree.
The feature structure descriptions do not encode the semantic expressions one is interested in.
They only encode their contributions to functional applications by restricting the argument slots of certain predicates in the semantic representations: They state which elements are contributed as possible arguments for other semantic expressions and which arguments need to be filled.
They thereby simulate lambda abstraction and functional application.
A sample feature for this simulation of functional application is the feature I that serves to pass the individual contributed by an NP to the predicate taking it as an argument.
Besides this functional application aspects, the feature structure descriptions also contain features that determine the scope semantics, i.e., features specifying boundaries for the scope of different operators.
Sample features for scope are MINS and MAXS encoding the minimal and 74 maximal scope of attaching quantifiers.
Features can be global (feature GLOBAL, here abbreviated with GL) or they can be linked to specific node positions (features S, VP, . . . ).
The latter are divided into top (T) and bottom (B) features.
The equations of top and bottom features linked to specific node positions in the elementary trees are parallel to the syntactic unifications in FTAG (Vijay-Shanker and Joshi, 1988).
The global features that are not linked to specific nodes can be passed from mothers to daughters and vice versa in the derivation tree.
(6) Everybody laughs.
As a sample derivation let us sketch the analysis of quantificational NPs in English from (Kallmeyer, 2005).
Fig. 1 shows the LTAG analysis of (6).
More precisely, it shows the derivation tree with the semantic representations and feature structure descriptions of laughs and everybody as node labels.
The feature identifications are depicted by dotted lines.
The semantic representation of the NP everybody contains the generalized quantifier every that binds the variable x and that has a restrictive scope 4 and a nuclear scope 5.
Furthermore, it contains the proposition person(x) that must be part of the restrictive scope (constraint 4 ≥ l3).
Concerning functional application, the NP provides the individual variable x in the global feature I as a possible argument for the verb predicate laugh.
l1 : laugh( 1 ), 2 ≥ 3        GL bracketleftbigg MINS l1 MAXS 2 bracketrightbigg S bracketleftBig B bracketleftbig P 3 bracketrightbigbracketrightBig VP bracketleftBigg T bracketleftbig P 3 bracketrightbig B bracketleftbig P l1bracketrightbig bracketrightBigg NP bracketleftBig GL bracketleftbig I 1 bracketrightbigbracketrightBig       np l2 : every(x, 4, 5 ), l3 : person(x), 4 ≥ l3, 6 ≥ 5, 5 ≥ 7    GL bracketleftbig I xbracketrightbig NP bracketleftBigg GL bracketleftbigg MINS 7 MAXS 6 bracketrightbiggbracketrightBigg    Figure 1: LTAG analysis of (6) everybody laughs Quantificational NPs in English can in principle scope freely; an analysis of quantifier scope must guarantee only two things: 1.
the proposition corresponding to the predicate to which a quantifier attaches must be in its nuclear scope, and 2.
a quantifier cannot scope higher than the first finite clause.
(Kallmeyer and Romero, 2005) model this by defining a scope window delimited by some maximal scope (global feature MAXS and some minimal scope (global feature MINS) for a quantifier.
In Fig.
1, the nuclear scope 5 of the quantifier is delimited by the maximal and minimal scope boundaries provided by the verb the quantifier attaches to (constraints 6 ≥ 5, 5 ≥ 7 ).
The feature identifications in Fig.
1 lead then to the constraints 2 ≥ 5, 5 ≥ l1.
Applying the assignments following from the feature identifications and building the union of the semantic representations leads to the underspecified representation (7): (7) l1 : laugh(x), l2 : every(x, 4, 5), l3 : person(x) 2 ≥ l1, 4 ≥ l3, 2 ≥ 5, 5 ≥ l1 As the only possible disambiguation, we obtain 2 → l2, 4 → l3, 5 → l1 which yields the semantics every(x,person(x),laugh(x)).
3 Syntax
of German quantificational NPs Recall that, according to criterion (Q1), not only the position of an NP but also -if the NP was movedthe position of its trace are crucial for the scope properties.
In order to capture this, our analysis needs to take into account movements (scrambling, topicalization, etc).
of NPs including traces at base positions.
We therefore cannot adopt the analyses proposed by (Rambow, 1994) in V-TAG where the slot for the NP is generated at the surface position and there is only one initial tree for NPs, whether moved or not.2 (8) a.
. . . dass jeder/irgendeiner ...
that everybody/someone irgendein Buch/jedes Buch liest some book/every book reads ‘... that everybody/someone reads some book/every book’ SUBJ > DOBJ b.
. . . dass [jedes Buch]1 irgendeiner t1 liest . . . that every book someone reads DOBJ > SUBJ 2To avoid misunderstandings, let us emphasize that in LTAG, there is no movement outside the lexicon.
Therefore, either the NP or the slot of the NP must be localized together with the corresponding trace inside one elementary structure.
This elementary structure can be a tree or, in MCTAG, a set of trees.
75 c.
. . . dass [irgendein Buch]1 jeder t1 liest . . . that some book everybody reads SUBJ > DOBJ, DOBJ > SUBJ To illustrate our analysis, in this and the following section, we restrict ourselves to the sentences in (8).
For the syntax, we adopt a multicomponent analysis for NPs that have been moved consisting of an auxiliary tree for the moved material and an initial tree for the trace.
Our analysis can be adopted using V-TAG (Rambow, 1994) or something in the style of SN-MCTAG (Kallmeyer, 2005).
Note that, in order to account for scrambling, we need some type of MCTAG anyway, independent from quantifier scope.
VP NP VP NP V liest for each NP, e.g., irgendein Buch: α1 NP irgendein Buch        β VP NP VP∗ irgendein Buch α2 NP ǫ        Figure 2: Elementary trees for (8) The elementary trees for (8) are in Fig.
2. α1 is used for NPs in base position, while the set {α2,β} is used for moved NPs.
We assume that, if possible, α1 is used.
I.e., starting from the verb, trees of type α1 are substituted to its left as long as possible.
{α2,β} sets are used when α1 could not possibly yield the desired surface word order.
Fig. 3 shows a derivation of a sentence of type (8a) (with no movement).
Fig. 4 shows the derivation of (8b).
((8c) is similar to (8b).) NP irgendeiner NP jedes Buch VP NP VP NP V liest derivation liest tree: np1 np2 irgendeiner jedes_Buch Figure 3: Derivation for (8a) VP NP VP NP V liest NP irgendeiner        VP NP VP∗ jedes Buch NP ǫ        derivation liest tree: np1 np2 vp1 irgendeiner tjedes_Buch jedes_Buch Figure 4: Derivation for (8b) Note that, in the derivation trees, each node represents a single elementary tree, not a set of elementary trees from the grammar.
An MCTAG derivation tree as defined in (Weir, 1988) with each node representing a set is available only for treelocal or set-local MCTAG, not for the MCTAG variants we need (SN-MCTAG or V-TAG).
Therefore we take the undelying TAG derivation tree as the derivation structure semantics will be computed on.
4 Semantics
of German quantificational NPs Because of the generalizations above, the following must be guaranteed: i) Strong quantifiers scope over the next element in surface order (take scope where they attach).3 ii) The minimal nuclear scope of a weak quantifier is the closest “unmoved” element following its base position.
Consequently, we need different lexical entries for weak and strong quantifiers.
We characterize the scope possibilities of a quantifier in terms of its minimal scope.
Consider first the verb tree for liest ’read’ in Fig.
5. In contrast to English, MINS is not a global feature since, depending on the position where the quantifier attaches, its minimal scope is different.
In the liesttree, MINS appears in the feature structure of different nodes, with each MINS value determined in the following way: the value of MINS at the NP2 address is the label l1 of the verb; the value of MINS at the NP1 address depends on what is attached at NP2 (see variables 4 and 0, which in this case will be identified with each other); and the value of MINS at the top VP address depends on what is attached at NP1 ( 5 ).
3But see section 5, where more complex examples show that this generalization needs to be refined.
76 VP NP1 VP NP2 V liest l1 : read( 1, 2 ) 3 ≥ l1           GL bracketleftbig MAXS 3 bracketrightbig VP1 bracketleftBig B bracketleftbig MINS 5 bracketrightbigbracketrightBig NP1 bracketleftBigg T bracketleftbigg MINS 0 NEXT 5 bracketrightbiggbracketrightBigg VP2 bracketleftBigg T bracketleftbig MINS 0 bracketrightbig B bracketleftbig MINS 4 bracketrightbig bracketrightBigg NP2 bracketleftBigg T bracketleftbigg MINS l1 NEXT 4 bracketrightbiggbracketrightBigg           Figure 5: Semantics for liest NP l2 : quant(x, 6, 7 ) l3 : restriction(x) 6 ≥ l3, 8 ≥ 7, 7 ≥ 9  NP  GL bracketleftbig MAXS 8 bracketrightbig B bracketleftbigg MINS 9 NEXT l2 bracketrightbigg     Figure 6: Quantifiers in base position The idea is that, when an NP (part) is attached at a given address, the label of that NP is the new MINS to be passed up the verb tree; when a trace (part) is attached instead, the MINS of the verb address is passed up unmodified.
This feature passing is technically achieved by articulating the VP spine with the feature MINS (much like the use of the P feature in English for adverbial scope in Kallmeyer and Romero, 2005), and by adding the feature NEXT for passing between NP substitution nodes (since substitution nodes do not have T and B features that allow feature percolations between mothers and daughters).
The lexical entries for the three types of quantifiers we must distinguish (non-moved quantifiers, weak moved quantifiers and strong moved quantifiers) are shown in Fig.
6–8. Quantificational NPs that have not been moved (Fig.
6) receive their MINS boundary (variable 9 ) simply from their attachment position.
Weak and strong quantifiers that have been moved differ in how their own MINS is determined: Strong quantifiers (see Fig.
7) get their MINS from the VP node they attach to, i.e., from their surface position (see variable 13 ).
In contrast to this, weak quantifiers (see Fig.
8) get their MINS from the base order position, i.e., from their trace position (see variable 18 ).
             VP NP VP∗ NP ǫ              l4 : quant(x, 10, 11 ) l5 : restriction(x) 10 ≥ l5, 12 ≥ 11, 11 ≥ 13  NP  GL bracketleftbig MAXS 12 bracketrightbig B bracketleftbigg MINS 14 NEXT 14 bracketrightbigg      VPr bracketleftBig B bracketleftbig MINS l4bracketrightbig bracketrightBig VPf bracketleftBig B bracketleftbig MINS 13 bracketrightbigbracketrightBig   Figure 7: Strong quantifiers that have been moved As sample analyses consider Fig.
9 and Fig.
10 showing the analyses of (8b) and (8c) where the accusative object quantifier has been moved.
(The features of the internal VP node are omitted since they are not relevant here).
In the first case, it is a strong quantifier, in the second case a weak quantifier.
For Fig.
9, we obtain the identifications 12 = l1 = 4 = 8, 5 = l2 = 11 (depicted with dotted lines).
Consequently, the only scope order is wide scope of jedes Buch: l4 > 10 ≥ l2 > 7 ≥ l1.
In Fig.
10, we obtain 11 = l1 = 4 = 8, 5 = l2 which leads to the scope constraints l2 > 7 ≥ l1 and l4 > 10 ≥ l1.
Consequently, we have an underspecified representation allowing for both scope orders.
The analysis proposed in this section has demonstrated that some features –in this case MINS– are global in some languages (e.g.
English) while being local in other languages (e.g.
German).
We take this as further evidence that the distinction between the two kinds of features, advocated in (Kallmeyer and Romero, 2005) is em             VP NP VP∗ NP ǫ              l6 : quant(x, 15, 16 ) l7 : restriction(x) 15 ≥ l7, 17 ≥ 16, 16 ≥ 18  NP  GL bracketleftbig MAXS 17 bracketrightbig B bracketleftbigg MINS 18 NEXT 18 bracketrightbigg     bracketleftbigg VPr bracketleftBig B bracketleftbig MINS l6bracketrightbig bracketrightBigbracketrightbigg Figure 8: Weak quantifiers that have been moved 77 l1 : read( 1, 2 )       VP bracketleftBig B bracketleftbig MINS 5 bracketrightbigbracketrightBig NP1 bracketleftBigg T bracketleftbigg MINS 4 NEXT 5 bracketrightbiggbracketrightBigg NP2 bracketleftBigg T bracketleftbigg MINS l1 NEXT 4 bracketrightbiggbracketrightBigg       vp np1 np2 l4 : every(x, 9, 10 ) l5 : book(x) 9 ≥ l5, 10 ≥ 11 l2 : some(x, 6, 7) l3 : person(x) 6 ≥ l3, 7 ≥ 8 VPr bracketleftBig B bracketleftbig MINS l4bracketrightbig bracketrightBig VPf bracketleftBig B bracketleftbig MINS 11 bracketrightbigbracketrightBig   bracketleftBigg NP bracketleftBigg B bracketleftbigg MINS 8 NEXT l2 bracketrightbiggbracketrightBiggbracketrightBigg bracketleftBigg NP bracketleftBigg B bracketleftbigg MINS 12 NEXT 12 bracketrightbiggbracketrightBiggbracketrightBigg Figure 9: Analysis of dass [jedes Buch]1 irgendeiner t1 liest l1 : read( 1, 2 )       VP bracketleftBig B bracketleftbig MINS 5 bracketrightbigbracketrightBig NP1 bracketleftBigg T bracketleftbigg MINS 4 NEXT 5 bracketrightbiggbracketrightBigg NP2 bracketleftBigg T bracketleftbigg MINS l1 NEXT 4 bracketrightbiggbracketrightBigg       vp np1 np2 l4 : some(x, 9, 10 ) l5 : book(x) 9 ≥ l5, 10 ≥ 11 l2 : every(x, 6, 7 ) l3 : person(x) 6 ≥ l3, 7 ≥ 8bracketleftbigg VPr bracketleftBig B bracketleftbig MINS l4bracketrightbig bracketrightBigbracketrightbigg bracketleftBigg NP bracketleftBigg B bracketleftbigg MINS 8 NEXT l2 bracketrightbiggbracketrightBiggbracketrightBigg bracketleftBigg NP bracketleftBigg B bracketleftbigg MINS 11 NEXT 11 bracketrightbiggbracketrightBiggbracketrightBigg Figure 10: Semantic analysis of dass [irgendein Buch]1 jeder t1 liest pirically justified.
5 Long-distance scrambling and quantifier scope So far we have examined cases where local scrambling affects quantifier scope order.
In this section, we will demonstrate how our analysis carries over to long-distance scrambling.
(9) . . . dass [irgendein Lied]1 Maria . . . that some songacc Marianom [fast jedem]2 [ t1 zu singen] almost everybodydat to sing versprochen hat promised has ‘that Maria has promised almost everybody to sing some song’ Q1 > Q2, Q2 > Q1 In (9) both scope orders are possible.
Fig. 11 shows the syntactic analysis for (9).
According to the treatment of weak quantifiers proposed above, the minimal nuclear scope of irgendein Lied is determined by the position of the trace; it is therefore the proposition of singen.
As for fast jedem, its minimal nuclear scope is required to include the proposition of versprochen hat.
Nothing else is required, and consequently irgendein can scope over or under fast jedem.
A problematic configuration that can occur with scrambling concerns cases where two weak quantifiers Q2 and Q3 have been moved with a third quantifier Q1 preceding them where Q1 is either a strong quantifier or a weak quantifier in base position.
Then Q1 has scope over Q2 and Q3 but the scope order between Q2 and Q3 is unspecified.
An example is (10): 78          VP NP VP∗ irgendein Lied NP ǫ          VP NP VP NP VP VP∗ V versprochen hat NP Maria NP fast jedem VP PRO VP NP V zu singenFigure 11: Derivation for (9) (10) ...
dass [jeder Mitarbeiter]1 ...
that [every colleague] [vielen Besuchern]2 [mindestens ein Bild]3 [many visitors]dat [at least one picture]acc gerne [t2 t3 zu zeigen] bereit war with pleasure to show willing was ’... that every colleague is happy to show at least one picture to many visitors.’ Q1 > Q2 > Q3, Q1 > Q3 > Q2 The syntactic derivation is shown in Fig.
12. Such examples are problematic for our analysis: our approach predicts that Q2 and Q3 have the same minimal scope, namely the zeigen proposition, and that the minimal scope of Q1 is the quantifier it precedes, namely Q2.
But nothing in the analysis prevents Q3 from having scope over Q1, contrary to fact.
This example indicates that the generalization (i) in section 4 -that the minimal scope of a strong quantifier is the proposition of the next quantifier in surface orderneeds to be refined.
More accurately, the minimal scope of a strong quantifier is the highest proposition following in surface order.
We propose to model this using the feature NEXT also in VP nodes.
Here NEXT stands for the maximal scope of all quantifiers following in surface order.
An attaching weak quantifier has to do two things: 1.
equate the current NEXT feature with the new MINS that provides the minimal scope for higher strong quantifiers, and 2.
state that NEXT is its own maximal scope.
The corresponding revised lexical entry for moved weak quantifiers is shown in Fig.
13. Fig.
14 shows the way the minimal scope for the unmoved quantifier in (10) is computed from combining the auxiliary trees of the moved weak quantifiers with bereit.
(The adverb is left aside.) In the tree of a verb and also in the auxiliary trees of moved strong quantifiers, an additional feature              VP NP VP∗ NP ǫ              l6 : quant(x, 15, 16 ) l7 : restriction(x) 15 ≥ l7, 17 ≥ 16, 16 ≥ 18 bracketleftBigg NP bracketleftBigg B bracketleftbigg MINS 18 NEXT 18 bracketrightbiggbracketrightBiggbracketrightBigg    VPr bracketleftBigg B bracketleftbigg MINS 17 NEXT 17 bracketrightbiggbracketrightBigg VPf bracketleftBig T bracketleftbig NEXT 17 bracketrightbigbracketrightBig    Figure 13: Moved weak quantifiers (revised) NEXT is added, linked to the bottom of VP nodes.
The value of this feature is required to be higher than the value of the bottom MINS at that position.
Whenever a moved strong quantifier adjoins, nothing happens with this NEXT feature.
Moved weak quantifiers take the NEXT feature as their maximal scope and pass it as the new MINS.
This is how in Fig.
14, the final MINS at the top of the root of the leftmost moved weak quantifier contains all moved quantifiers and is passed to the NP node as new MINS limit.
A (weak or strong) quantifier substituting into the NP slot takes this new MINS as its minimal scope.
Consequently, it scopes over both moved weak quantifiers.
6 Conclusion
It has been shown that, although quantifier scope is usually read off surface word order in German, ambiguities can arise from movement of weak quantifiers.
We have developed an MCTAG analysis using traces.
In our approach, the scope possibilities of a quantifier are characterized in terms of its minimal scope.
In contrast to English, MINS in German is not global but depends on the po79 NP jeder Mitarbeiter VP gerne VP∗ VP NP VP VP∗ V bereit war VP PRO VP NP VP NP V zu zeigen   VP NP VP∗ mindestens ein Bild NP ǫ       VP NP VP∗ vielen Besuchern NP ǫ    Figure 12: Derivation for (10) l1 : willing( 1, 2 ) 4 ≥ 3, 7 ≥ 6          VPr bracketleftBigg B bracketleftbigg MINS 3 NEXT 4 bracketrightbiggbracketrightBigg NP1 bracketleftBigg T bracketleftbigg MINS 5 NEXT 3 bracketrightbiggbracketrightBigg VP  T bracketleftbig MINS 5 bracketrightbig B bracketleftbigg MINS 6 NEXT 7 bracketrightbigg   VPf bracketleftbig T . . .bracketrightbig          vp l2 : q3(x, 9, 10 ) l3 : picture(x) 9 ≥ l3, 12 ≥ 10, 10 ≥ 11    VPr bracketleftBigg B bracketleftbigg MINS 12 NEXT 12 bracketrightbiggbracketrightBigg VPf bracketleftBig T bracketleftbig NEXT 12 bracketrightbigbracketrightBig    vpr l4 : q2(y, 13, 14 ) l5 : visitor(y) 13 ≥ l5, 16 ≥ 14, 14 ≥ 15    VPr bracketleftBigg B bracketleftbigg MINS 16 NEXT 16 bracketrightbiggbracketrightBigg VPf bracketleftBig T bracketleftbig NEXT 16 bracketrightbigbracketrightBig    q2 = many, q3 = at_least_one Figure 14: Attaching the moved weak quantifiers in (10) sition of the quantifier.
The minimal scope of weak and strong quantifiers is determined differently: The minimal scope of a moved weak quantifier depends on its trace; the minimal scope of a moved strong quantifier depends on the position of the moved material.
Acknowledgments For fruitful discussions of the work presented in this paper, we want to thank Timm Lichte and Wolfgang Maier.
Furthermore, we are grateful to three anonymous reviewers for helpful comments.
References Tilman Becker, Aravind K.
Joshi, and Owen Rambow.
1991. Long-distance scrambling and tree adjoining grammars.
In Proceedings of ACL-Europe.
Werner Frey.
1993. Syntaktische Bedingungen für die semantische Interpretation: Über Bindung, implizite Argumente und Skopus.
studia grammatica.
Akademie Verlag, Berlin.
Daniel Gallin.
1975. Intensional and Higher-Order Modal Logic with Applications to Montague Semantics.
North Holland mathematics studies 19.
NorthHolland Publ.
Co., Amsterdam.
Laura Kallmeyer and Maribel Romero.
2004. LTAG Semantics with Semantic Unification.
In Proceedings of TAG+7, pages 155–162, Vancouver.
Laura Kallmeyer and Maribel Romero.
2005. Scope and Situation Binding in LTAG using Semantic Unification.
Submitted to Research on Language and Computation.
57 pages., December.
Laura Kallmeyer.
2005. Tree-local multicomponent tree adjoining grammars with shared nodes.
Computational Linguistics, 31(2):187–225.
Tibor Kiss.
2000. Configurational and Relational Scope Determination in German.
In Tibor Kiss and Detmar Meurers, editors, Constraint-Based Approaches to Germanic Syntax, pages 141–176.
CSLI. Winfried Lechner.
1998. Two Kinds of Reconstruction.
Studia Linguistica, 52(3):276–310.
Owen Rambow.
1994. Formal and Computational Aspects of Natural Language Syntax.
Ph.D. thesis, University of Pennsylvania.
K. Vijay-Shanker and Aravind K.
Joshi. 1988.
Feature structures based tree adjoining grammar.
In Proceedings of COLING, pages 714–719, Budapest.
David J.
Weir. 1988.
Characterizing mildly contextsensitive grammar formalisms.
Ph.D. thesis, University of Pennsylvania .

