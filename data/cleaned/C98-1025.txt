Derivingthe Predicate-ArgumentStructurefor a Free Word Order 
Language* 
Cem Bozsahin 
Department of Computer Engineering 
Middle East Technical University 
06531 Ankara, Turkey 
bozsahin@ceng.metu, edu. tr 
Abstract 
In relatively free word order languages, grammat
ical functions are intricately related to case mark
ing. Assuming an ordered representation of the 
predicate-argument structure, this work proposes a 
Combinatory Categorial Grammar formulation of 
relating surface case cues to categories and types 
for conectly placing the arguments in the predicate
argument structure. This is achieved by treat
mg case markers as type shifters. Unlike other 
CG formulations, type shifting does not prolifer
ate or cause spurious ambiguity. Categories of 
all argument-encoding grammatical functions fol
low from the same principle of category assignment. 
Normal order evaluation of the combinatory form 
reveals the predicate-argument structure. The appli
cation of the method to Turkish is shown. 
1 Introduction

Recent theorizing in linguistics brought forth a level 
of representation called the Predicate-Argument 
Structure (PAS). PAS acts as the interface be
tween lexical semantics and d-structure in GB 
(Grimshaw, 1990), functional structure in LFG 
(Alsina, 1996), and complement structure in HPSG 
(Wechsler, 1995). PAS is the sole level of rep
resentation in Combinatory Categorial Grammar 
(CCG) (Steedman, 1996). All formulations as
sume a prominence-based structured representation 
for PAS, although they differ in the terms used 
for defining prominence. For instance, Grimshaw 
(1990) defines the thematic hierarchy as: 
Agent > Experiencer > Goal / Location / Source 
> Theme 
" Thanks to Mark Steedman for discussion and material, and 
to the anonymous reviewer of an extended version whose com
ments led to signilicant revisions. \]'his research is supported 
by TUBITAK (EEEAG-90) and NATO Science Division (TU
LANGUAGE). 
whereas LFG accounts make use of the following 
(Bresnan and Kanerva, 1989): 
Agent > Beneficiary > Goal / Experiencer > Inst 
> Patient/Theme > Locative. 
As an illustration, the predicate-argument struc
tures of the agentive verb murder and the psycho
logical verbfi~ar are (Grimshaw, 1990, p.8): 
murder (x (y)) 
Agent Theme 
fear (x (y)) 
Exp Theme 
To abstract away from language-particular case 
systems and mapping of thematic roles to grammati
cal functions, I assume the Applicative Hierarchy of 
Shaumyan (1987) for the definition of prominence: 
Primary Term > Secondary Term > 
Tertiary 2brm > Oblique Tenn. 
Primacy of a term over another is defined by the for
met having a wider range of syntactic features than 
the latter. In an accusative language, subjects are 
less marked (hence primary) than objects; all verbs 
take subjects but only transitive verbs take objects. 
Terms (=arguments) can be denoted by the genotype 
indices on NPs, such as NP1, NP,2 for primary and 
secondary terms. 1 An NP2 would be a direct object 
(NP,cc) in an accusative language, or an ergative
marked NP (NPerg) in an ergative language. This 
level of description also simplifies the formulation 
of grammatical function changing; the primary term 
of a passivized predicate (PASS p) is the secondary 
term of the active p. I follow Shaumyan and Steed
man (1996) also in the ordered representation of the 
PAS (1). The reader is refen'ed to (Shaumyan, 1987) 
for linguistic justification of this ordering. 
(1) Pred... <Sec. Term><Primary Term> 
Given this representation, the surface order of 
1Shaumyan uses 7 '1 , T 2, but we prefer NP1, NP2 for easier 
exposition in later formulations. 
167 
constituents is often in conflict with the order in the 
PAS. For instance, English as a configurational SVO 
language has the mapping: 
(2) SS: S~~~/~O 
PAS: Pj/ N~P1 
However, in a non-configurational language, per
mutations of word order are possible, and grammat
ical functions are often indicated not by configura
tions but by case marking. For instance, in Turkish, 
all six permutations of the basic SOV order are pos
sible, and Japanese allows two verb-final permuta
tions of underlying SOV. The relationship between 
case marking and scrambling is crucial in languages 
with flexible word order. A computational solution 
to the problem must rely on some principles of par
simony for representing categories and types of ar
guments and predicates, and efficiency of process
ing. 
In a categorial formulation, grammatical 
functions of preverbal and postverbal NPs in 
(2) can be made explicit by type shifting 2 
the subject to S/(S\NP1) and the object to 
(S\NP1)\((S\NP1)/NP2). These categories follow 
from the order-preserving type shifting scheme 
(Dowty, 1988): 
(3) UP ::> T/(T~NP) or TVT/NP) 
To resolve the opposition between surface older 
and the PAS in a free word order language, one can 
let the type shifted categories of terms proliferate, 
or reformulate CCG in such a way that arguments of 
the verbs are sets, rather than lists whose arguments 
are made available one at a time. The former alter
native makes the spurious ambiguity problem of CG 
parsing (Karttunen, 1989) even more severe. Multi
set CCG (Hoffman, 1995) is an example of the set
oriented approach. It is known to be computation
ally tractable but less efficient than the polynomial 
time CCG algorithm of Vijay-Shanker and Weir 
(1993). I try to show in this paper that the tradi
tional cmTied notation of CG with type shifting can 
be maintained to account for Surface Form++PAS 
mapping without leading to proliferation of argu
ment categories or to spurious ambiguity. 
Categorial framework is particularly suited for 
this mapping due to its lexicalism. Grammatical 
functions of the nouns in the lexicon are assigned 
2aka. type raising, lifting, or type change 
by case markers, which are also in the lexicon. 
Thus, grammatical function marking follows nat
urally from the general CCG schema comprising 
rules of application (A) and composition (B). The 
functor-argument distinction in CG helps to model 
prominence relations without extra levels of repre
sentation. CCG schema (Steedman (1988; 1990)) 
is summarized in (4). Colnbinator notation is pre
ferred here because they are the formal primitives 
operating on the PAS (cf. (Curry and Feys, 1958) 
for Combinatory Logic). Application is the only 
primitive of the combinatory system; it is indicated 
by juxtaposition in the examples and denoted by • in 
the normal order evaluator (§4). B has the reduction 
rule Bf ga> f (9a). 
(4) X/Y: f Y:a ~A> X: fa 
Y: a X\ Y: f ~ A< X: f a 
x/Y: y Y/Z:g x/z:Bf  
Y~Z: 9 X\ Y: f ~B< X\Z: B f g 
X/Y: f Y~Z:g ~B×> X\Z:Bfg 
Y/Z:g X\Y: f ~s×< X/Z:Bfg 
2 Grammatical
Functions, Type Shifting, 
and Composition 
In order to derive all permutations of a ditransi
tive construction in Turkish using (3), the dative
marked indirect object (NP3) must be type shifted 
in 48 (4!2) different ways so that coordination with 
the left-adjacent and the right-adjacent constituent 
is possible. This is due to the fact that the result 
category T is always a conjoinable type, and the ar
gument category T/NP3 (and T~NP3) must be al
lowed to compose with the result category of the 
adjacent functor. However, categories of arguments 
can be made more informative about grammatical 
functions and word order. The basic principle is as 
follows: The category assigned for argument n must 
contain all and only the tenn information about NPi 
for all i _% n. An NP2 type must contain in its cat
egory word order information about NP1 and NP2 
but not NP3. This can be generalized as in (5): 
(5) Category assignment for argument n: 
J" %/G or T,.\G ¢('n) 
NPn 
168 
7~ -Lexical category of an NP,~
governing element (e.g., a verb) in the lan
guage whose highest genotype argument is 
NP,~. 
T,. = The category obtained from T, by re
moving NPn. 
Case markers in Turkish are suffixes attached to 
noun groups. :~ The types of case markers in the lex
icon can be defined as: 
(6) Lexical type assignment for the case 
marker (-case) encoding argument n: 
-case:: C(,O: 7-(C(,~))x\N: :~ 
where T'(C) denotes the semantic type for cate
gory C: 
(7) a. T(NP~) = I (lower type for NPn) 
b. T(C) = T (if (7 is a type shifted category 
as in (3)) 
c. T(O) = BBT (if C is a type shifted and 
composed category) 
(5) and (6) are schemas that yield three lexical 
categories per -case: one for lower type, and two for 
higher types which differ only in the directionality 
of the main function due to (5). For instance, for the 
accusative case suffix encoding NP2, we have: 
-ACC := NP2:Ix\N:x 
:= ((SINP1)/(S\[NPIINP2)):Tx\N:x 
:((SINP1)\(SINPtINP~)):Tz\N:x 
Type shifting alone is too constraining if the verbs 
take their arguments in an order different from the 
Applicative Hierarchy (§1). For instance, the cat
egory of Turkish ditransitives is SINPIINPa\[NP2. 
Thus the verb has the wrapping semantics Cv ~ 
where C is the permutator with the reduction 
rule Cfga>_fa 9. Type shifting an NP3 yields 
(SINPt INP2)/(SINP1 INP2 INP3) in which the argu
ment category is not lexically licensed. (5) is order
preserving in a language-particular way; the result 
category always corresponds to a lexical category 
in the language if the argument category does too. 
For arguments requiring a non-canonical order, 
we need type shifting and composition (hence the 
third clause in (7)): 
3As suggested in (Bozsahin and Gocmen, 1995), morpho
logical and syntactic composition can be distinguished by asso
ciating several attachment calculi with functors and arguments 
(e.g., affixation, concatenation, clitics, etc.) 
NPa:x T (SINP1)/(SINPIINPa):Tx ~ (SINP1 INP2)/(SINPt \[NP3 
INP2): B (Tx) = BBTx 
Once syntactic category of the argument is fixed, 
its semantics is uniquely determined by (7). 
The combinatory primitives operating on the PAS 
are I (7a), T (Tb-c), and 13 (7c). T has the reduction 
rule Taf>_fa, and If>f. The use ofT or B signifies 
that the term's category is a flmctor; its correct place 
in the PAS is yet to be determined. I indicates that 
the term is in the right place in the partially derived 
PAS. 
According to (5), there is a unique result
argument combination for a higher type NPa, com
pared to 24 using (3). (5) differs from (3) in another 
significant aspect: Tr and Ta may contain direction
ally underspecified categories if licensed by the lex
icon. Directional underspecification is needed when 
arguments of a verb can scramble to either side of 
the verb. It is necessary in Turkish and Warlpiri 
but not in Japanese or Korean. The neutral slash I 
is a lexical operator; it is instantiated to either \ or 
/ during parsing. A crucial use of underspecifica
tion is shown in (8). SV composition could not fol
low through if the verbs had backward-looking cat
egories; composition of the type shifted subject and 
the verb in this case would only yield a backward
looking S\NP2 by the schema (4). 
(8) Adam kurmu~ area f ocuk topladt masa-vt man.NOM set but chlld.NOMgather tablc-ACC 
-B> S/(SINP~) SINP~ INP2 S/NP2 
NI'2 B> 
S/NP2 -A 
S/N~ 
A> S 
'The mau had set the table but the child is cleaning it.' 
The schema in (5) makes the arguments available 
in higher types, and allows lower (NPn) types only 
if higher types fail (as in NP2 in (8)). There are 
two reasons for this: Higher types carry more in
formation about surface order of the language, and 
they are sufficient to cover bounded phenomena. §3 
shows how higher types correctly derive the PAS in 
various word orders. Lower types are indispensable 
for unbounded constructions such as relativization 
and coordination. The choice is due to a concern 
for economy. If lower types were allowed freely, 
they would yield the correct PAS as well: 
169 
(9) S IO DO V 
NPI: Is' NPs: li' NP2: Io' DV: C¢ 
SINP, INP3: (Cv')(IoAj 
"A< S\[NPI: 
(Cv')(Io' )(1i' ) 
"A< S: (Or')(Io' )(1i' )(Is' )>v' i' o' s' 
(10) a. Mehmet kitab-t oku-du 
M.NOM book-ACC read-PAST 
S/IV: Tin' IV\]TV: Tb' TV: r' 
-A> IV: TU r' 
-A> S: Tin' (Tb' r' )>r' b' m z 
'Mehmet read the book.' 
In parsing this is achieved as follows: An NPk 
can only be the argument in a rule of application, 
and schema (5) is the only way to obtain NPk from 
a noun group. Thus it suffices to check in the ap
plication rules that if the argument category is NPk, 
then the functor's result category (e.g., X in X/Y) 
has none of the terms with genotype indices lower 
than k. NP2 in (8) is licensed because the adjacent 
functor is S/NP2. NP2 in (9) is not licensed because 
the adjacent functor has NP1. 
For noun-governed grammatical functions such 
as the genitive (NPs), (5) licenses result categories 
that are underspecified with respect to the geno
type index. This is indeed necessary because the 
resulting NP can be further inflected on case and 
assume a genotype index. For Turkish, the type 
shifted category is C(5) =NPagr/(NPagr\NP5). 
Hence the genitive suffix bears the category 
C(5)\N. Agreement features enforce the possessor
possessed agreement on person and number via uni
fication (as in UCG (Calder et al., 1988)): 
kalem -in uc -u pencil -GEN.3s tip -POSS.3s 
N: p' C(5)\N: T N: t' (NP~,g,.\NPs)\N: poss 
A tl A< 
NPagr/(gPagr\NPs): "~'~ NP~g~\NPs: poss -A> 
NPagr : Tp' (posst' )>(posst' )p' 'The tip of tim p-encil' 
3 Word
Order and Scrambling 
Due to space limitations, the following abbre
viated categories are employed in derivations: 
IV = SINP1 
TV = SINP1 INP2 
DV = SINPIINP31NP2 
The categories licensed by (5) can then be written 
as IV/TV and IV~TV for NP2, TV/DV and TV~DV 
for NP3, etc. (10a-b) show tile verb-final variations 
in the word order. The bracketings in the PAS and 
juxtaposition are left-associative; (fa)b is same as 
fab. 
b. kitab-t Mehmet oku-du 
IV/TV: Tb' S\IV: Tin' 71/: r' 
Bx< S/TV: B(Tm' )(Tb' ) 
IA) 
S: B(Yrn' )(Yb' )r' >_r'b'm' 
(10a) exhibits spurious ambiguity. Forward com
position of S/IV and IV/TV is possible, yielding 
exactly the same PAS. This problem is resolved 
by grammar rewriting in the sense proposed by 
Eisner 4 (1996). Grammar rewriting can be done 
using predictive combinators (Wittenburg, 1987), 
but they cannot handle crossing compositions that 
are essential to our method. Other no~xnal form 
parsers, e.g. that of Hepple and Morrill (1989), 
have the same problem. All grammar rules in (4) 
in fact check the labels of the constituent cate
gories, which show how the category is derived. 
The labels are as in (Eisner, 1996). -FC: Output 
of forward composition, of which forward cross
ing composition is a special case. -t3C: Output of 
backward composition, of which backward cross
ing composition is a special case. -OT: Lexical 
or type shifted category. The goal is to block 
e.g., X/Y-FC Y/Z-{FC, BC, OT} =~B> X/Z and 
X/Y-FC Y-{FC, BC, 02"} ~A> X in (10a). S/TV 
composition would have the label -FC, which can
not be an input to forward application. In (10b), 
the backward composition follows through since it 
has the category-label S/TV-BC, which the forward 
application rule does not block. We use Eisner's 
method to rewrite all rules in (4). 
(1 la-b) show the normal fbrm parses for post-. 
verbal scrambling, and (llc-d) for verb-medial 
cases. 
4Eisner (1996, p,81) in fact suggested that the labeling sys
tem can be implemented in the grammar by templates, or in the 
processor by labeling the chart entries. 
170 
(11) a. oku-du Mehmet kitab-t 
read-PAST M.NOM book-ACC 
TV: r' S/IV: Tin' IV~TV: Tb' Bx> 
S\TV: B(Tm' )(Tb' ) 
A< 
S :, B(Tm' )(Tb' )r' >r' b' m' 
Mehmet read the book.' 
b. oku-du kitab-z Mehmet 
TV: r' IV~TV: Tb' S\IV: Tin' 
A< IV : Tb' r' 
A< S :Tin' (Tb' r' )>r' b' m' 
c. kitab-t oku-du Mehmet 
IV/TV: Tb' TV: r' S\IV\[Tm' 
A> IV : Tb' r' 
A< 
S : Tin' (Tb' 7" ) >r' b' m' 
d. Mehmet oku-du kitab-t 
S/IV: Tin' TV: r' IV~TV: Tb' 
A< IV:Tb'r' 
A> 
S :Tin' (Tb' r' )_>r' b' m' 
Controlled iexical redundancy of higher types, 
e.g., having both (and only) IV/TV and IV~TV li
censed by the lexicon for an NP2, does not lead to 
alternative derivations in (10-11). Assume that A/B 
B\C, where A/B and B\C are categories produced 
by (5), gives a successful parse using the output 
A\C. A\B B\C and A\B B/C are not composable 
types according to (4). The other possible configu
ration, A/B B/C, yields an A/C which looks for C 
in the other direction. Multiple derivations appear 
to be possible if there is an order-changing com
position over C, such as C/C (e.g., a VP modifier 
IV/IV). (12) shows two possible configurations with 
a C on the right. (12b) is blocked by label check be
cause A/C-FC C :~A> A is not licensed by the 
grammar. If C were to the left, only (12a) would 
succeed. Similar reasoning can be used to show the 
uniqueness of derivation in other patterns of direc
tions. 
(12) a. C/C A/B B\C C ---Bx> 
A\C-FC -Bx< 
A/C-BC 
A> A-OT 
b. C/CA/B B/C C 
---B> A/C-FC 
--***--A> 
Constrained type shifting avoids the problem 
with freely available categories in Eisner's normal 
form parsing scheme. However, some surface char
acteristics of the language, such as lack of case 
marking in certain constructions, puts the burden 
of type shifting on the processor (Bozsahin, 1997). 
Lower type arguments such as NP2 pose a different 
kind of ambiguity problem. Although they are re
quired in unbounded constructions, they may yield 
alternative derivations of local scrambling cases in a 
labelled CCG. For instance, when NP2 is peripheral 
in a ditransitive construction and the verb can form 
a constituent with all the other arguments (S\NP2 or 
S/NPJ, the parser allows NP2. This is unavoidable 
unless the parser is made aware of the local and non
local context. In other words, this method solves the 
spurious ambiguity problem between higher types, 
but not among higher and lower types. One can try 
to remedy this problem by making the availability of 
types dependent on some measures of prominence, 
e.g., allowing subjects only in higher types to ac
count for subject-complement asymmetries. But, as 
pointed out by Eisner (1996, p.85), this is not spu
rious ambiguity in the technical sense, just multi
ple derivations due to alternative lexical category 
assignments. Eliminating ambiguity in such cases 
remains to be solved. 
4 Revealing
the PAS 
The output of the parser is a combinatory form. The 
combinators in this form may arise from the CCG 
schema, i.e., the compositor B, and the substitutor 
S (Steedman, 1987). They may also be projected 
from the PAS of a lexical item, such as the dupli
cator W (with the reduction rule Wfa>_faa) for re
flexives, and Bn+lC for predicate composition with 
the causative suffix. For instance, the combinatory 
form for (13a) is the expression (13b). 
(13) a. Adam 9ocu~,-a kitab-L 
man.NOM child-DAT book-ACC :mt :c t :b t 
oku-t-tu 
read-CAUS-PAST 
:B3CAUSGr t 
'The man had the child read the book.' 
b. T.m' .(B.(T.b' ).(T.c' ).(B3.CAUSE.C.r ' )) -
171 
A T m I 
A T b' 
r t 
G 
B~'A'C AU s E 
Although B works in a binary manner in CCG 
to achieve abstraction, it requires 3 arguments for 
full evaluation (its order is 3). Revealing the PAS 
amounts to stripping off all combinators from the 
combinatory form by evaluating the reducible ex
pressions (redexes). B f9 is not a redex but Bf9a is. 
In other words, the derivations by the parser must 
saturate the combinators in order to reveal the PAS, 
which should contain no combinators. PAS is the 
semantic normal form of a derivation. 
The sequence of evaluation is the normal or
der, which corresponds to reducing the leftmost
outermost redex first (Peyton Jones, 1987). In tree
theoretic terms, this is depth-first reduction of the 
combinator tree in which the rearrangement is con
trolled by the reduction rule of the leftmost com
binator, e.g., Tre ~ X>Xre ~ where X is the paren
thesized subexpression in (13b). Reduction by T 
yields: 
ret 
B T c' 
?.,t 
G 
A A 
B~ C-'A"U S E T b / 
Further reductions eventually reveal the PAS: 
B. (X.b'). (T.c I ).(B3"CAUSE'G"r ' ).mr 
T.b'. (T.c' .(Ba.CAUSE.C.r ~ )).re' > 
T.c t . (B 3.CAUSE.c.r t ).b t .mt > 
(1) 
(2) 
(3) 
Ba.CAUSE.C.r I .c / -b t .m / > (4) 
CAUSE.(C.W .c' .b' ).m' > (5) 
CAUSE.(r' "bt "c t ).mr (6) 
By the second Church-Rosser theorem, normal 
order evaluation will terminate if the combinatory 
form has a normal form. But Combinatory Logic 
has the same power as A-calculus, and suffers 
from the same undecidability results. For instance, 
WWW has no normal form because the reductions 
will never terminate. Some terminating reductions, 
such as Glib>hi, has no normal form either. It is 
an open question as to whether such forms can be 
projected from a natural language lexicon. In an ex
pression X.Y where X is not a redex, the evalua
tor recursively evaluates to reduce as much as pos
sible because X may contain other redexes, as in (5) 
above. Recursion is terminated either by obtaining 
the normal form, as in (6) above, or by equivalence 
check. For instance, (G.(I.a).b).Y recurses on the 
left subexpression to obtain (G.a.b) then gives up 
on this subexpression since the evaluator returns the 
same expression without further evaluation. 
5 Conclusion

If an ordered representation of the PAS is assumed 
as many theories do nowadays, its derivation from 
the surface string requires that the category assign
ment for case cues be rich enough in word order 
and grammatical function information to correctly 
place the arguments in the PAS. This work shows 
that these categories and their types can be uniquely 
characterized in the lexicon and tightly controlled in 
parsing. Spurious ambiguity problem is kept under 
control by normal form parsing on the syntactic side 
with the use of labelled categories in the grammar. 
Thus, the PAS of a derivation can be determined 
uniquely even in the presence of type shifting. The 
same strategy can account for deriving the PAS in 
unbounded constructions and non-constituent coor
dination (Bozsahin, 1997). 
Parser's output (the combinatory form) is reduced 
to a PAS by normal order evaluation. Model
theoretic interpretation can proceed in parallel with 
derivations, or as a post-evaluation stage which 
takes the PAS as input. Quantification and scram
bling in free word order languages interact in many 
ways, and future work will concentrate on this as
pect of semantics. 
172 

References 

Alex Alsina. 1996. The Role of Argument Structure in Grammar. CSL1, Stanford, CA. 

Cem Bozsahin and Elvan Gocmen. 1995. A categorial framework for composition in multiple linguistic domains. In Proceedings of the Fourth International Conference on Cognitive Science of NLP, Dublin. 

Cem Bozsahin. 1997. Grammatical functions and word order in Combinatory Grammar. ms. 

Joan Bresnan and Jonni M. Kanerva. 1989. Locative inversion in Chichewa: A case study of factorization in grammar. Linguistic Inquiry, 20:150. 

Jonathan Calder, Ewan Klein, and Henk Zeevat. 1988. Unification categofial grammar. In Proceedings of the 12th International Conference on Computational Linguistics, Budapest. 

Haskell B. Curry and Robert Feys. 1958. Combinatory Logic I. North-Holland, Amsterdam. 

David Dowty. 1988. Type raising, functional composition, and non-constituent conjunction. In Richard T. Oehrle, Emmon Bach, and Deirdre Wheeler, editors, Categorial Grammars' and Natural Language Structures. D. Reidel, Dordrecht. 

Jason Eisner. 1996. Efficient normal-form pars:ing for combinatory categorial grammar. In Proceedings of the 34th Annual Meeting of the ACL, pages 79-86. 

Jane Grimshaw. 1990. Argument Structure. MIT Press, Cambridge, MA. 

Mark Hepple and Glyn Morrill. 1989. Parsing and derivational equivalence. In Proceedings of the 4th EACL, Manchester. 

Beryl Hoffman. 1995. The Computational Analysis of the Syntax and Interpretation of "Free" Word Order in Turkish. Ph.D. thesis, University of Pennsylvania. 

Lauri Karttunen. 1989. Radical lexicalism. In Mark Baltin and Anthony Kroch, editors, Alternative Conceptions of' Phrase Structure. Chicago University Press. 

Simon L. Peyton Jones. 1987. The Implementation of Functional Programing Languages. Prentice-Hall, New York. 

Sebastian Shaumyan. 1987. A Semiotic Theory of Language. Indiana University Press. 

Mark Steedman. 1987, Combinatory grammars and parasitic gaps. Natural Language and Linguistic Theory, 5:403-439.

Mark Steedman. 1988. Combinators and grammars. In Richard T. Oehrle, Emmon Bach, and Deirdre Wheeler, editors, Categorial Grammars and Natural Language Structures. D. Reidel, Dordrecht. 

Mark Steedman. 1990. Gapping as constituent coordination. Linguistics and Philosophy, 13:207-263. 

Mark Steedman. 1996. Surface Structure and Interpretation. MIT Press, Cambridge, MA. 

K. Vijay-Shanker and David J. Weir. 1993. Parsing some constrained grammar formalisms. Computational Linguistics, 19:591-636. 

Stephen Wechsler. 1995. The Semantic Basis of Argument Structure. CSLI, Stanford, CA, 

Kent Wittenburg. 1987. Predictive combinators. In Proceedings of the 25th Annual Meeting of the ACL, pages 73-79. 173 

