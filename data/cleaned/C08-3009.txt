Coling 2008: Companion volume – Posters and Demonstrations, pages 177–180
Manchester, August 2008
Shahmukhi to Gurmukhi Transliteration System 
Tejinder Singh Saini 
ACTDPL, Punjabi University,  
Patiala 147 002, India 
tej@pbi.ac.in 
Gurpreet Singh Lehal 
DCS, Punjabi University, 
Patiala 147 002, India 
gslehal@yahoo.com
Virinder S Kalra 
Sociology, SOSS 
University of Manchester 
kalra@manchester.uk 
 
 
Abstract 
The existence of two scripts for Punjabi 
language has created a script barrier be-
tween the Punjabi literature written in In-
dia and Pakistan. This research has de-
veloped a new system for the first time of 
its kind for Shahmukhi text without dia-
critical marks. The purposed system for 
Shahmukhi to Gurmukhi transliteration 
has been implemented with various re-
search techniques based on language cor-
pus. The corpus analysis of both scripts is 
performed for generating statistical data 
of different types like character and word 
frequencies and bi-gram frequencies. 
This statistical analysis is used in differ-
ent phases of transliteration. Potentially, 
all members of the substantial Punjabi 
community will benefit vastly from this 
transliteration system. 
1 Introduction

One of the great challenges before Information 
Technology is to overcome language barriers 
across the whole humanity so that everyone can 
communicate with everyone else on the planet in 
real time. South Asia is one of those unique parts 
of the world where a single language is written in 
different scripts. This is the case, for example, 
with Punjabi language, spoken by tens of mil-
lions of people, but written in Indian East Punjab 
(20 million) in Gurmukhi script (a Left to Right 
script based on Devanagari) and in Pakistani 
West Punjab (80 million), written in Shahmukhi 
script (a Right to Left script based on Arabic), 
and by growing number of Punjabis (2 million) 
in the EU and the US in the Roman script. Whilst 
in speech Punjabi spoken in the Eastern and the 
                                                 
© 2008. Licensed under the Creative Commons Attri-
bution-Noncommercial-Share Alike 3.0 Unported 
license (http://creativecommons.org/licenses/by-nc-
sa/3.0/). Some rights reserved. 
Western parts is mutually comprehensible, in the 
written form it is not so. The existence of two 
scripts for Punjabi has created a script barrier 
between the Punjabi literature written in India 
and Pakistan. More than 60 per cent of Punjabi 
literature of medieval period (500-1450 AD) is 
available in Shahmukhi script only, while most 
of the modern Punjabi writings are in Gurmukhi. 
Potentially, all members of the substantial Pun-
jabi community will benefit vastly from this 
transliteration system. 
1.1 Gurmukhi
Script 
The Gurmukhi script, derived from the Sharada 
script and standardised by Guru Angad Dev in 
the 16th century, was designed to write the Pun-
jabi language. The meaning of "Gurmukhi" is 
literally “from the mouth of the Guru". The 
Gurmukhi script has forty one letters, including 
thirty eight consonants and three basic vowel 
sign bearers. There are five nasal consonants (ਙ, 
ਞ, ਣ, ਨ, ਮ) and two additional nasalization signs, 
bindi ◌ਂ [ɲ ] and tippi ◌ੰ [ɲ ]. In addition to this, 
there are nine dependent vowel signs (◌ੁ[ʊ ], ◌ੂ 
[u], ◌ੋ[o], ◌ਾ[ɘ ], ਿ◌[ɪ ], ◌ੀ[i], ◌ੇ[e], ◌ੈ[æ], ◌ੌ[Ɔ ]) 
used to create ten independent vowels with three 
bearer characters: Ura ੳ[ʊ ], Aira ਅ [ə ] and Iri 
ੲ[ɪ ]. 
1.2 Shahmukhi
Script  
The meaning of "Shahmukhi" is literally 
“from the King's mouth". Shahmukhi is a local 
variant of the Urdu script used to record the Pun-
jabi language. It is based on right to left 
Nastalique style of the Persian and Arabic script. 
It has thirty seven simple consonants, eleven fre-
quently used aspirated consonants, four long 
vowels and three short vowel symbols (Malik 
2006). 
177
2 Comparison
with the Existing System 
In actual practice, Shahmukhi script is written 
without short vowels and other diacritical marks. 
The PMT system discussed by Malik A. (2006) 
claims 98% accuracy only when the input text  
Input text (right to left) 
 ںﺎﺗ  ںﺎﮨ  ےﺪﻬﮑﻳو  ںﻮﻧ  ںﺎﻴﺑﺎﺠﻨﭘ  ﮯﺘﮩﺑ  ﮟﻴﺳا  ںوﺪﺟ  چو  ﻞﮔ  سا
 ںﺎﻴﺋﺎﭽﺳ  ںﺎﻳڑﻮﮐ  ںﺎﻴﺌﮔ  ںﺎﻴﻧﺎﻴﺑ  چو  ﻪﮑﻴﻟ  ےد  ﻪﮕﻨﺳ  ﺎﺠﻴﺗ  ﻞﭙﺴﻧﺮﭘ
 رﺎﻴﭘ  ںﻮﻧ  ﺲﻳد  ﮟﻴﺳا  ۔ﻦﻴﮨ  ںﺎﻳﺪﻨﮨ  سﻮﺴﺤﻣ  لﺎﻧ  تﺪﺷ  یو  رﻮﮨ
اد  نﺮﮐٰیﻮﻋد    ﮯﻬﭩﻴﺑ  یرﺎﺳو  ںﻮﻧ  ﮯﺑﻮﺻ  ﮯﻨﭘا  ﺮﭘ  ںﺎﮨ  ےدﺮﮐ
 ﮓﻟ  ےد  ترﺎﻬﺑ  ہﮐ  ﮯﮨ  ہﮩﻳا  تﻮﺒﺛ  اڈو  ںﻮﺗ  ﻪﺒﺳ  اد  سا  ۔ںﺎﮨ
 ﮯﺗ  ﮦﺎﺸﺗا  ےﮍﺑ  سود  ﺎﻨﭘﺎﻬﺘﺳ  ﮯﻨﭘا  ﮯﻨﭘا  ﮯﺑﻮﺻ  ﮯﺘﮩﺑ  ﮓﻬﺑ
ﯽﻨﭘا  ۔ﻦﻴﮨ  ےﺪﻧؤﺎﻨﻣ  لﺎﻧ  ﮯﺑﺬﺟ  ﮯﻨﭘا  ،رﺎﭼﺎﻴﻬﺒﺳ  ﮯﻨﭘا  ،نﺎﺑز
 ﯽﻣﻮﻗ  ﯽﻨﭘا  ۔ﻦﻴﮨ  ےدﺮﮐ  نﺎﻣ  ﮯﺗ  ﮯﺛرو  ﮯﻨﭘا  ﮯﺗ  ﮍﮐﻮﻬﭽﭘ
ﺎﻣ  ﮯﺗ  نﺎﻬﭽﭘ ۔ﮯﮨ  ﻻاﺮﻧ  ﯽﮨ  مدﺁ  ﺎﺑﺎﺑ  اڈﺎﺳ  ﺮﭘ  ۔ﻦﻴﮨ  ےدﺮﮐ  ن
ﮯﺑﻮﺻ  ﯽﺑﺎﺠﻨﭘ  ﮏﺗ  ںﺎﮐﻮﻟ  مﺎﻋ  ﮯﮐ  ﮯﻟ  ںﻮﺗ  ںارﺎﮐﺮﺳ  ﻦﻨﺑ  ےد
۔ﻦﻴﮨ  ےﺪﻨﮨر  ﯽﮨ  ﮯﻠﺴﻳوا  ںﺎﺣﺮﻃ  یرﻮﭘ  ےرﺎﺑ  ند 
Output-A of PMT system (left to right) 
ਅਸ  ਗਲ  ਵਚ  ਜਦ null ਅਸ null ਬਹਤ ੇ ਪਨਜਾਬ ੇਆ ਂ ਨ null ਵ ੇਖਦ ੇ ਹਾ ਂ ਤਾ ਂ ਪਰਨਸਪਲ  
ਤ ੇਜਾ  ਸਨਘ  ਦ ੇ ਲ ੇਖ  ਵਚ  ਬ ੇਅਨ ੇਆ ਂ ਗਈਆ ਂ ਕ ੋੜ ੇਆ ਂ ਸਚਾਈਆ ਂ ਹ ੋਰ  ਵੀ  
ਸ਼ਦਤ  ਨਾਲ  ਮਹਸ ੋਸ  ਹਨਦ ੇਆ ਂ ਹ ੇਨ ।  ਅਸ null ਦ ੇਸ  ਨ null ਪ ੇਆਰ  ਕਰਨ  ਦਾ  
ਦਾਵਾ  ਕਰਦ ੇ ਹਾ ਂ ਪਰ  ਅਪਨ ੇ ਸ ੋਬ ੇ ਨ null ਵਸਾਰੀ  ਬ ੇਠ ੇ ਹਾ ਂ।  ਅਸ  ਦਾ  ਸਭ  ਤ null 
ਵਡਾ  ਸਬ ੋਤ  ਇਹਾ  ਹ ੇ ਕਹ  ਭਾਰਤ  ਦ ੇ ਲਗ  ਭਗ  ਬਹਤ ੇ ਸ ੋਬ ੇ ਅਪਨ ੇ ਅਪਨ ੇ 
ਸਥਾਪਨਾ  ਦ ੋਸ  ਬੜ ੇ ਅਤਸ਼ਾਹ  ਤ ੇ ਜਜ਼ਬ ੇ ਨਾਲ  ਮਨਾਈਵਨਦ ੇ ਹ ੇਨ ।  ਅਪਨੀ  
ਜ਼ਬਾਨ , ਅਪਨ ੇ ਸਭ ੇਅਚਾਰ , ਅਪਨ ੇ ਪਛ ੋਕੜ  ਤ ੇ ਅਪਨ ੇ ਵਰਸ ੇ ਤ ੇ ਮਾਨ  
ਕਰਦ ੇ ਹ ੇਨ ।  ਅਪਨੀ  ਕ ੋਮੀ  ਪਛਾਨ  ਤ ੇ ਮਾਨ  ਕਰਦ ੇ ਹ ੇਨ ।  ਪਰ  ਸਾਡਾ  ਬਾਬਾ  
ਆਦਮ  ਹੀ  ਨਰਾਲਾ  ਹ ੇ।  ਸਰਕਾਰਾ ਂ ਤ null ਲ ੇ ਕ ੇ ਆਮ  ਲ ੋਕਾ ਂ ਤਕ  ਪਨਜਾਬੀ  ਸ ੋਬ ੇ 
ਦ ੇ ਬਨਨ  ਦਨ  ਬਾਰ ੇ ਪ ੋਰੀ  ਤਰਹਾ ਂ ਉ◌ ੇਸਲ ੇ ਹੀ  ਰਹਨਦ ੇ ਹ ੇਨ ।  
Output-B of proposed system (left to right) 
ਇਸ  ਗ ੱਲ  ਿਵਚ  ਜਦ null ਅਸnull  ਬਹ ੁਤ ੇ ਪ ੰਜਾਬੀਆ ਂ ਨ ੂੰ ਵ ੇਖਦ ੇ ਹਾ ਂ ਤਾ ਂ ਿਪ ਰ੍ੰਸੀਪਲ  
ਤ ੇਜਾ  ਿਸ ੰਘ  ਦ ੇ ਲ ੇਖ  ਿਵਚ  ਿਬਆਨੀਆ ਂ ਗਈਆ ਂ ਕ ੌੜੀਆ ਂ ਸਚਾਈਆ ਂ ਹ ੋਰ  
ਵੀ  ਿਸ਼ ੱਦਤ  ਨਾਲ  ਮਿਹਸ ੂਸ  ਹ ੁੰਦੀਆ ਂ ਹ ੈਨ।  ਅਸnull  ਦ ੇਸ  ਨ ੂੰ ਿਪਆਰ  ਕਰਨ  ਦਾ  
ਦਾਵਾ  ਕਰਦ ੇ ਹਾ ਂ ਪਰ  ਆਪਣ ੇ ਸ ੂਬ ੇ ਨ ੂੰ ਵਸਾਰੀ  ਬ ੈਠ ੇ ਹਾ ਂ।  ਇਸ  ਦਾ  ਸਭ  ਤ null 
ਵ ੱਡਾ  ਸਬ ੂਤ  ਇਹ  ਹ ੈ ਿਕ  ਭਾਰਤ  ਦ ੇ ਲਗ  ਭਗ  ਬਹ ੁਤ ੇ ਸ ੂਬ ੇ ਆਪਣ ੇ ਆਪਣ ੇ 
ਸਥਾਪਨਾ  ਦ ੋਸ  ਬੜ ੇ ਉਤਸ਼ਾਹ  ਤ ੇ ਜਜ਼ਬ ੇ ਨਾਲ  ਮਨਾਉਂਦ ੇ ਹ ੈਨ।  ਆਪਣੀ  
ਜ਼ਬਾਨ , ਆਪਣ ੇ ਸਿਭਆਚਾਰ , ਆਪਣ ੇ ਿਪਛ ੋਕੜ  ਤ ੇ ਆਪਣ ੇ ਿਵਰਸ ੇ ਤ ੇ 
ਮਾਣ  ਕਰਦ ੇ ਹ ੈਨ।  ਆਪਣੀ  ਕ ੌਮੀ  ਪਛਾਣ  ਤ ੇ ਮਾਣ  ਕਰਦ ੇ ਹ ੈਨ।  ਪਰ  ਸਾਡਾ  
ਬਾਬਾ  ਆਦਮ  ਹੀ  ਿਨਰਾਲਾ  ਹ ੈ।  ਸਰਕਾਰਾ ਂ ਤ null ਲ ੈ ਕ ੇ ਆਮ  ਲ ੋਕਾ ਂ ਤ ੱਕ  
ਪ ੰਜਾਬੀ  ਸ ੂਬ ੇ ਦ ੇ ਬਣਨ  ਿਦਨ  ਬਾਰ ੇ ਪ ੂਰੀ  ਤਰ ਹ੍ਾ ਂ ਅਵ ੈਸਲ ੇ ਹੀ  ਰਿਹ ੰਦ ੇ ਹ ੈਨ।  
Table 1. I/O of PMT and Proposed Systems 
Transliteration Tokens Output 
Type Total Wrong Right 
Accuracy 
% 
A 116 64 52 44.8275 
B 116 02 114 98.2758 
Table 2. Comparison of Output-A & B 
has all necessary diacritical marks for removing 
ambiguities. But this process of putting missing 
diacritical marks is not practically possible due to 
many reasons like large input size, manual inter-
vention, person having knowledge of both the 
scripts and so on. We have manually evaluated 
PMT system against the following Shahmukhi 
input published on a web site and the output text 
is shown as output-A in Table 1.The output of 
proposed system on the same input is shown as 
output-B. The wrong transliteration of Gurmukhi 
tokens is shown in bold and italic and the com-
parison of both outputs is shown in Table 
2.Clearly, our system is more practical in nature 
than PMT and we got good transliteration with 
different inputs having missing diacritical marks. 
3 The
Complexity 
The Shahmukhi script has many complexities by 
its nature and the major two of them are: 
3.1 Recognition
of Shahmukhi Text without 
Diacritical Marks 
Shahmukhi script is usually written without short 
vowels and other diacritical marks, often leading 
to potential ambiguity. Arabic orthography does 
not provide full vocalization of the text, and the 
reader is expected to infer short vowels from the 
context of the sentence. In the written Shah-
mukhi script it is not mandatory to put short 
vowels below or above the Shahmukhi character 
to clear its sound. These special signs are called 
"Aerab" in Urdu. It is a big challenge in the 
process of machine transliteration to recognize 
the right word from the written text.  
3.2 Multiple
Mappings 
It is observed that there is multiple possible 
mapping in Gurmukhi script corresponding to a 
single character in the Shahmukhi script as 
shown in Table 3. 
Name 
Shahmukhi 
Character 
Gurmukhi Mapping 
Vav و  [v] 
ਵ [v], ◌ੋ [o], ◌ੌ [Ɔ ], ◌ੁ [ʊ ], ◌ੂ [u],  
ਓ [o] 
Yeh  
 
ى [j] 
ਯ [j], ਿ◌ [ɪ ], ◌ੇ [e], ◌ੈ[æ], ◌ੀ[i],  
ਈ [i] 
Table 3. Multiple Mapping into Gurmukhi Script 
4 Transliteration
System 
The transliteration system as shown in figure 1 
is virtually divided into two phases. The first 
phase performs pre-processing on the input 
Shahmukhi token by performing dictionary 
lookup. If the dictionary lookup fails then the 
token will go for rule based transliteration and 
ultimately this phase will generate best possible 
Gurmukhi token(s). The second phase performs 
178
the task of post-processing. Unicode Alignment 
component performs context analysis of input 
Gurmukhi token(s). All Forms generator (AFG) 
component will perform critical task of handling 
missing diacritical marks. This component will 
suggest similar possible forms of a Gurmukhi 
token which is not most frequent one. The queue 
manager of post-processing phase is designed to 
work on bi-gram language model. This will se-
lect the best possible unigram for final output by 
consulting bi-gram weights of the current token 
with its neighboring tokens 
Figure 1. System Overview 
5 Lexical
Resources Used 
 Shahmukhi Corpus: 3.3 million words. 
 Gurmukhi Corpus: 7 million words. 
 Shahmukhi-Gurmukhi Dictionary  
 Unigram and Bi-gram Table 
 All Forms Generator (AFG) 
6 Example

Here we show the internal working of the system 
through an example. Suppose we observe a 
Shahmukhi string as shown in figure 2. First, we 
pass this through the pre-processing and translit-
eration phase where the input string has been 
tokenized into eleven Shahmukhi tokens. Every 
input token has been searched in the dictionary 
for their existence. This status result is shown in 
table 4 where the tokens 1
st, 2
nd, 4
th, 5
th, 6
th, 7
th, 
8
th, 10
th
 and 11
th
 are found in dictionary and their 
intermediate Weighted Gurmukhi Forms (WGF) 
have been generated. These tokens directly jump 
to bi-gram queue manager for bi-gram analysis in 
post-processing phase. 
 
Figure 2. Shahmukhi Gurmukhi Tokens 
Token Shahmukhi 
Token 
Found in 
Dictionary 
WGF 
token{weight} 
1 anullnull
null
null
 Yes 
ਫੇਰ{4513}; ਿਫਰ{8714} 
2 رnullnullnull  Yes 
ਹੋਰ{14054}; ਹੌਰ{18} 
3 nullnullاanullnull
null
null
 No 
ਹੈਰਾਨੀ{524} 
4 nullnullا
null  
Yes 
ਇਸ{59998}; ਏਸ{1186} 
5 ںnullnull
5
 Yes 
ਗੱਲnull{107} 
6 یnullnullnullnull
null
null
 Yes 
ਹੁੰਦੀ{7699} 
7 ےا Yes 
ਏ{7927}; ਐ{3600} 
8 nullnull
null
 Yes 
ਜੈ{295}; ਜੇ{9791} 
9 nullnull اnull
null
 No 
ਅਜਹੀ{4} 
10 
nullM 
Yes 
ਗੱਲ{447};ਗਲ{47};ਿਗੱਲ{9} 
ਗੁਲ{5};ਗੁੱਲ{5} 
11 
نnull: 
Yes 
ਕਰਨ{21582};ਕਰਣ{174}; 
ਿਕਰਨ{159} 
 Table 4. Pre-Processing Transliteration Status 
On the other hand, the input tokens 3
rd
 and 9
th
 are 
not found in dictionary. Therefore, in this phase 
they will pass through transliteration component 
and then in post-processing phase they will pass 
through Unicode formatting. After that they will 
test for Most Frequent (MF) check by comparing 
their weights with a predefined threshold value
2
 
                                                 
2
 Threshold value is minimum probability of occur-
rence among most frequent tokens in target script cor-
pus. 
ਿਫਰ ਹੋਰ ਹੈਰਾਨੀ ਇਸ ਗੱਲnull ਹੁੰਦੀ ਐ ਜੇ ਅਿਜਹੀ ਗੱਲ ਕਰਨ
Input 11 Shahmukhi tokens (Right to Left) 
null
null
null
null
anull  رnullnull   
null
null
null
nullاa
null
nullا  nullnullnullnullnullnullnull   ںnullnull   
null
null
5
یnullا  nullnull  ےا  
null
null
null
nullنnull:  nullM  
11      10   9       8   7         6        5 4       3      2    1 
1    2        3          4        5       6     7   8        9        10      11 
Transliterated 11 Gurmukhi tokens (Left to Right)
Unicode Encoded Shahmukhi Text 
Rule Based Transliteration  
Component 
All Forms Generator 
(AFG) 
Bi-Gram  
Queue 
Manager 
Gurmukhi Token(s) 
Shahmukhi Token 
Shahmukhi Tokenizer
Dictionary Component 
Unicode Alignment 
Pre-Processing &Transliteration 
Post-Processing 
Unicode Encoded Gurmukhi Text 
Transliteration 
System 
Out Put Text Generator 
179
(100 in this case). As shown in table 5 the WGF 
of 3
rd
 token ਹੈਰਾਨੀ{524} is most frequent one and 
will move to bi-gram queue whereas the WGF of 
9
th
 token ਅਜਹੀ{4} is not a most frequent token 
and will reach at bi-gram queue manager only 
after passing  through all forms generator (AFG).  
Token MF AFG Status Bi-gram Found Output 
1 hold ਫੇਰ;ਿਫਰ 
2 
ਫੇਰ-ਹੋਰ,12;  
ਿਫਰ-ਹੋਰ, 20; 
ਿਫਰ 
3 Yes
hold ਹੋਰ ਹੋਰ 
4 ਹੈਰਾਨੀ-ਇਸ,10; ਹੈਰਾਨੀ 
5 hold ਇਸ ਇਸ 
6 ਇਸ-ਗੱਲnull,45; ਗੱਲnull 
7 
ਹੁੰਦੀ-ਏ,86; 
ਹੁੰਦੀ-ਐ,125; 
ਹੁੰਦੀ 
8 hold ਐ ਐ 
9 No

ਅਜੇਹੀ{310} 
ਅਿਜਹੀ{1486} 
ਅਜਹੀ{4} 
ਐ-ਜੇ,22;  
ਜੇ-ਅਿਜਹੀ,13; 
ਜੇ 
18 Yes
hold ਅਿਜਹੀ ਅਿਜਹੀ 
11 
ਅਿਜਹੀ-ਗੱਲ,38; 
ਗੱਲ-ਕਰਨ,179; 
ਗਲ-ਕਰਨ,18; 
ਗੱਲ 
 EOS hold ਕਰਨ ਕਰਨ 
Table 5. Post-Processing Status and output 
Here, we see that the AFG has generated two 
additional forms ਅਜੇਹੀ{310}  ਅਿਜਹੀ{1486} (table 5) 
for this token. These new forms are having addi-
tional diacritical marks of short vowels those are 
missing in the original form. Clearly, AFG has 
supplied the best possible forms. Next, we show 
how bi-gram manager will work on WGF tokens 
to generate final Gurmukhi token. In this model 
the next token will decide the selection of its 
previous one. Consider the case of second WFG 
token ਹੋਰ{14054} having bi-gram combinations 
with previous one as ਫੇਰ-ਹੋਰ with weight 12 and 
ਿਫਰ-ਹੋਰ with weight 20. Clearly, the token ਿਫਰ will 
produce as output not ਫੇਰ because ਿਫਰ-ਹੋਰ combi-
nation has higher weight than ਫੇਰ-ਹੋਰ. Similarly, 
this table shows found bi-gram weights and cor-
respondingly decided Gurmukhi token as output.  
7 Results
and Discussion 
The transliteration system was tested on a small 
set of poetry, article and story. The results are 
tabulated in Table 6.  
As we can observe an average transliteration ac-
curacy of 91.37% has been obtained. We got 
good transliteration with different inputs. The 
main source of error is the existence of vowel-
consonant mapping between the two scripts. The 
Shahmukhi vowel characters Vav(و ) and Yeh(ی ) 
have mapping into Gurmukhi consonants 
Vava(ਵ) and Ya(ਯ) respectively. This kind of 
vowel-consonant mapping can not be resolved 
fully with dependency rules but can be mini-
mized by refining the dictionary and phonetic 
code generation rules of AFG component. In 
other cases, system makes errors showing defi-
ciency in handling those tokens which are not 
belonging to common vocabulary domain. 
Type Transliterated Tokens Accuracy % 
Poetry 3,301 90.63769
Article 584 92.60274 
Story 3,981 90.88043
Total 7,866 91.37362 
Table 6. Transliteration Results 
8 References

Arbabi, Mansur, Scott M. Fischthal, Vincent C. 
Cheng and Elizabeth Bar. 1994. Algorithms for 
Arabic name transliteration. IBM Journal of re-
search and Development, pp 183-193. 
 
Haizhou Li, Min Zhang and Jian Su. 2004. A Joint 
Source-Channel Model for Machine Transliteration. 
Proceedings of the 42nd Annual Meeting of the As-
sociation for Computational Linguistics, pp 159-
166. 
 
Malik, M. G. Abbas. 2006. Punjabi Machine 
Transliteration. Proceedings of the 21st Interna-
tional Conference on Computational Linguistics 
and 44th Annual Meeting of the ACL, pp 1137-
1144. 
 
Y. Gal, 2002. An HMM Approach to Vowel 
Restoration in Arabic and Hebrew. Proceedings of 
ACL Workshop on Computational Approaches to 
Semitic Languages, pp 27-33. 
 
Youngim Jung, Donghun Lee, Aesun Yoon, Hyuk 
Chul Kwon. 2004.  Transliteration System for 
Arabic-Numeral Expressions using Decision Tree 
for Intelligent Korean TTS, volume 1. 30th Annual 
Conference of IEEE, pp 657-662. 
180

