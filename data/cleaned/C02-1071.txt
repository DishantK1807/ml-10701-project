Integrating Shallow Linguistic Processing into a Uni cationbased Spanish Grammar Montserrat Marimon gilcUB Grup d'InvestigacioenLingustica Computacional Universitat de Barcelona montse@gilc.ub.es Abstract This paper describes towhatextentdeep processing may bene t from shallow processing techniquesanditpresentsaNLPsystemwhich integrates a linguistic PoS taggerand chunker asapreprocessingmodule ofabroadcoverage uni cationbased grammarofSpanish.
Experiments show that the eciency of the overall analysisimprovessigni cantlyandthatoursystem also provides robustness to the linguistic processing,whilemaintainingboththeaccuracy andtheprecisionofthegrammar.
1 Introduction
Deeplinguistic processingproducesacomplete syntacticandsemanticanalysisofthesentences itprocesses,howeveritfailsinproducing aresult when the linguistic structure being processedand/orwordsintheinputsentencesfall beyond the coverage of the grammatical resources.
Natural Language Processing (NLP) systemswithmonolithicgrammars,inaddition, havetodealwithhugesearchspaceduetoseveral sources of nondeterminism (i.e.
ambiguity).
Thisisparticularlytrueofbroadcoverage uni cationbased grammars where all dimensionsoflinguisticinformationareinterleaved,as theoriessuchasHPSGpropose.
Lackofrobustness and inecient processing makesuchsystems inadequate for practical applications e.g.
NaturalLanguageInterfaces(NLI). ThispaperpresentsaNLPsystemwhichintegratesalinguistic PartofSpeech(PoS)tagger and chunker (as opposed to datadriven) asapreprocessingmodule ofabroadcoverage uni cationbasedgrammarofSpanish.
By integrating shallow and deep processing theeciencyoftheoverallanalysisprocessimproves signi cantly, since we can release the parser from certain tasks that maybeecientlyandreliablydealtwithbycomputationallyless expensivetechniques.
Theintegration ofshallowprocessing,inaddition,providesthe uni cationbasedgrammarwithlargercoverage forsyntacticstructuresandallowsustoimplement default lexical entry templates for virtuallyunlimitedlexicalcoveragewhileavoidingincreaseinambiguity.
Thesystemwepresentisinspiredby(Abney, 1992)andit is in accordancewith (Srinivas et al.,1997;;CiravegnaandLavelli,1997;;Yoonet al.,1999;;Venkova,2000;;Watanabe,2000;;Prins andNoord,2001;;GroverandLascarides,2001;; Crysmannetal.,2002). Inthefollowingsectionwebrieypresentthe uni cationbasedgrammar.Section3describes latch,the linguistic taggerand chunker.
Section4discusses theextensions requiredbyour systeminordertotransfertheinformationdeliveredbythetaggerandchunkerintothegrammar.
Insection5wedescribethedefaultlexical entrieswehavede ned.
Resultsonthesystem performanceareprovidedinsection6.
Thispapersendsbypresentingthegeneralconclusions.
2 The
Uni cationbased Grammar Thedevelopmentofthegrammarthatservedas thebasisofourresearchworkwasdonein the frameworkoftheAdvancedLanguageEngineering Platform (ALEP) (Simpkins et al., 1993) during the project LSGRAM (LRE 61029) (Schmidt et al., 1996) and it was used in the project MELISSA (ESPRIT 22252) (Bredenkamp et al., 1998) for the rst time in an industrial context.
The grammar is currently beingusedintheprojectIMAGINE(IST2000 29490).ThemaingoaloftheIMAGINEproject istodevelopsoftwaretechnologythatallowsthe interactionwith ebusiness applications byusingamulti-lingualNLIfrommobiledevicesand otherappliances.
1 2.1 Coverage of the Grammar The range of linguistic phenomena that the grammar handles includes: all types of subcategorization structures, determination (simple and complex), a full coverage of agreement (subjectverb, subjectattribute, agreementwithin theNP),nullsubjects (prodrop, impersonal sentences), compound tenses and periphrastic forms, clausal complements (completive clauses and indirect questions), control and raising structures, support verb constructions, passive constructions (with the copula, withorwithoutthe`byagent'complement,and reexivepassive),modi ersofverbs,nouns,adjectives and adverbs, negation, sentential adjuncts, topicalization, relative and interrogatives clauses, surface word order variation, coordination (binary,enumeration and coordination of unlike categories), clitics (cliticNP alternation, clitic doubling, clitic climbing, enclitics), NPs with no nounhead, nonsentential input strings and special constructions (number,dates,...).
2.2 The
ALEP Architecture ALEP distinguishes preprocessing operations and linguistic processing operations.
The former|TextHandling(TH)andorphographemic analyses|accountforsurfacepropertiesofinput text (document formatting, delimitation oftextual structural elements, orthographemic aspects of morphology), while the latter | parsing and re nement| deal with its non surface properties (morphosyntactic analysis, constituent structure, semantic representation).
2 A
special rulebased operation | Lifting| interfaces the output of the preprocessingoperationwiththeparsingoperation.
2.3 The
ALEP Linguistic Formalism TheALEPlinguisticformalismhasbeendeveloped on the basis of the speci cations resultingfromtheET6designstudy(Alshawietal., 1 See http://www.rtd.softwareag.es/imagine.
2 A
distinctive feature of the ALEP processing architecture is the division of the analysis task into two sub tasks: `parsing', which builds up a complete but shallow phrase structure tree, and `re nement', which traverses the structure topdown, thus monotonically performing feature decoration, typically with semantic information.
1991). It is a so called \lean" formalism compilableinto rstorder(Prolog)termsandthus avoiding computationally expensive formaldevices.
AnALEPgrammarisimplemented byspecifyinglexical entriesandgrammarrules, based onatypesystemthatconstitutesamonotonic simpletypehierarchywithappropriatenessconditions.
Lexical entries are based on the data structureLinguisticDescription(LD),collectingconstraints on the type system.
The lexical component of our grammar plays a crucial role in thegrammaticaldescriptionneededforprocessing.
Itisahighlylexicalizedgrammarwherelinguisticphenomena,suchassubjectverbagreement, subcategorization, modi cation, control relations,etc.,traditionallydealtwithbymeans ofspecializedphrasestructurerules,aretreated inthelexicon.
Grammarrulesarethusreduced toasmallsetofbinarybranchingcontextfree phrasestructure rules, which arebased on the datastructureLinguisticStructure(LS).
3 The
adopted approach in the grammar we present follows HPSG proposals (Pollard and Sag,1994).
3 Latch: The Linguistic Tagger and Chunker Latch was rstly conceived as a lexical disambiguation tool based on analyses promotion/reduction by means of weighted symbolic contextrules(Porta,1996).
It is a lean formalism where lexical information, including fullform, lemma and MorphoSyntactic Description (MSD), is expressed byregularexpressions.
Thepivotsoftherules, which specify the tokens to be disambiguated, aresequences oflexical elementsthatreceivea voteontheir morphosyntacticanalyses.
Votes may be positive or negative to promote or to eliminatethem,respectively.
Inaddition,aprecondition may be expressed in the pivots to specify the typeofambiguity the rule is referredto.
Linear generalizations areexpressed bymeansofcontextualoperatorsforimmediate, unboundedandconstrainedunboundedcontextualconditions.
3 Besides
phrase structure rules, a set of word structure rules are applied at the parsing component performing morphosyntactic analysis.
Inafurtherdevelopmentstate,theLatchformalismwasextendedsothatitcanalsobeused to mark chunks (or intraclausal partial constituents)(Abney,1996)andusethatinformation for PoS disambiguation.
This interaction of PoS disambiguation and partial parsing reduces the eort needed for writing rules considerably and improves results (Marimon and Porta,2000).
4 4 Integrating PoS Tags and Chunks into the Grammar The integration of shallow processing techniques(PoStaggingandpartialparsing)isfully supported by the open architecture of ALEP, which allowseasyintegrationofexternalmodules.
Oursystemrequiressomechangestothedefault architecture of the ALEP system where boththeTHsystemandthemorphographemic analysis component are replaced by a unique external preprocessing module (Latch).
It also requires the lifting componenttobeextendedinordertotransfertheinformationdelivered by the external preprocessing module intothehighlevellinguisticprocessingcomponents.
Thechangestobemadeinthehighlevel linguistic processing components, however, are very thin: word structurerules havetobeextended, but phrase structure rules and lexical entriescanbeleftuntouched.
4.1 Text
Structure to Linguistic Structure Rules TheintegrationofboththePoStagsandchunk markupsdeliveredbyLatchisdonebytheliftingcomponentoftheALEPsystem,whichconvertsthemintodatastructuressuitablefordeep linguistic analysis.
Thelifting componentisbasedonaparticularsetofrules,thesocalledTextStructureto LinguisticStructure(TSLS)rules.
Threelevelsareassumedattheliftingcomponent|`M',`W'and`S'|whichinthedefault architecture of the system were convertedinto 4 Latch is currently being used to annotate the 125 million word Corpus Diacronico del Espa~nol (CORDE) and 125 million word Corpus de Referencia del Espa~nol Actual (CREA)by the Departamento de Lingustica Computational de la Real Academia Espa~nola.
Some results on the rst version of the tool can be found in (Sanchez et al., 1999).
LDsrepresentingmorphemes,fullforms,andthe top node establishing the axiom of the grammar.
56 Structure rules, then, are distributed according to the dierenttypes of structural units being involved in the parsing operation: `morphemestowords'(wordstructurerules)or `wordstosentences'(phrasestructurerules).
4.1.1 Lifting
PoS Tags Integrating PoS information in a system like ALEP means de ning TSLS rules propagatingthemorphosyntacticinformationassociated tofullforms(i.e.
PoStagandlemma)delivered by the tagger to the relevant morphosyntactic featuresatthelexicalentriesofthegrammar.
The integration of PoS tags into ALEP is done at the level `M'.By using the lowest tag level to lift the lexical information associated tofullforms, wecanpropagatethe ambiguities which can not be reliably solved by the shallowprocessingtooltothegrammarcomponent, thusensuringthattheaccuracyofthegrammar remainsthesame.
(1)shows the rule we de ned to lift the tag 'Ncfs-'.
(1) ts ls rule( 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 ld synsemjloc: 2 6 6 6 6 6 6 6 6 6 6 6 6 4 t local morph: 2 6 6 4 t morph lemma: 2 morpheme: 1 agr: (fem&sing) 3 7 7 5 cat: 2 6 4 t subst head:  t noun nclass: common  3 7 5 3 7 7 7 7 7 7 7 7 7 7 7 7 5 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5, 'M',[POS = 'Ncfs-', LEMMA = 2 ], 1 ).
4.1.2 Lifting
Chunks Similar to the integration of PoS information, theintegrationofchunkmarkupsintheALEP system requires TSLS rules to convert them into LD data structures used by the linguistic processingcomponentsofALEP.
5 Normally, this will be the sentence node, though it can also be any phrasal node when partial input strings are to be processed.
6 The
output of the lifting process is a Partial Linguistic Structure (PLS) where the hierarchical relations between the dierent structural elements is expressed in terms of week dominance relations.
The integration of chunk markups into ALEP is done at the level 'W'.
By integrating chunk markups at the intermediate level, weavoidmodifyingphrasestructureruleswhich buildupaLDontopoftheconvertedLDs: (i) attaching posthead sisters (modi ers and/or complementstotherightoftheheadelement), (ii) and/or attaching modi ers and/or speciers to the left of the head element when the chunkhasonlybeenpartially recognized.
Furthermore,weavoidinterference withthesetof phrasestructureruleswhichbuild upthesame type of LDs.
These rules are maintained to build up nodes thathave not been marked up bythepreprocessingmodule.
7 The
system we propose, in addition, integratesintothehighlevelcomponentsofALEP LDswhichdonotneedtobere-builtbyphrase structure rules, since, even though they are quiteunderspeci ed w.r.t. theheadelementof thechunk(theyonlycontaininformationabout itspartofspeech),theyalreadyspecifysyntactic and semantic information about the non head elements that have been attached to the headelement.
8 Thisallowsustodealwithlow
frequentsyntacticstructureswhosecoverageby meansofourALEPgrammar,thoughfeasible, would increase both the parsing search space andtheambiguity.
9 (2)showstheruleforadjectivalchunkswhich havetheheadelementandadegreeadverb.
4.2 Word
Structure Rules Besides the TSLS rules wehave presented, the strategy we propose also requires unary word structure rules to consolidate the structuralnodes provided by the`lift' operationfor thenewtags`M'and`W'.
Theserules,inaddition,areinchargeofpercolating the linguistic information of the head element of the chunk, which is encoded in the lexicon,tothemothernode,whichalreadycontainsinformationaboutthenonheadelements 7 These rules are applied when parsing words to sentences, whereas lifted chunk markups are dealt with word structure rules (cf.
section 4.2). 8 This strategy,however, requires very specialized TS LS rules not only w.r.t. the category of the head element (noun, verb, adjective, adverb) but also the number, category (determiner, adjective, adverb, auxiliary, )... and type (de nite, inde nite, )... of nonhead elements.
9 Examples
of suchsyntactic structures are given in section 6.
alreadyattachedbythepreprocessingtool. (2) ts ls rule( 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 ld string: muy interesante ...
2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 t local cat  t subst head t adj  sem 2 6 6 6 6 6 6 6 6 6 4 t sem indxjind sf(index(, 1 )) mods * 2 6 6 6 6 4 t sem mod rel sf(rel(degree, 1, 2 )) indxjind sf(index(nevent, 3)) predarg  t predarg pred sf(pred( 3, 2 ))  3 7 7 7 7 5 + 3 7 7 7 7 7 7 7 7 7 5 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5, 'W',['TYPE' = 'CHUNK', CHUNK-TY = 'AX', ADV = 3 ]).
5 Default
Lexical Entries Supplementarytotheintegrationoftheshallow processingtool,defaultlexicalentrieshavebeen implementedinourALEPgrammartoprovide robustdeepprocessing.
Default lexical entries are lexical entry templateswhichareactivatedwhenthesystemcan not nd aspeci c lexical entrytoapply.Note that having default lexical entries in a system like ALEP increases ambiguity, and, thus, the parsing search space, unless a mechanism is used to restrict as much as possible the templatesthatareactivated.
Theintegrationofthe tagger, which supplies the PoS information to thelinguisticprocessingmodulesofoursystem, allowsustoincrease robustnesswhile avoiding increaseinPoSambiguity.
Therearetwobasicwaystode nedefaultlexicalentries.
Oneistoimplementunderspeci ed lexical entry templates assigned to eachmajor wordclasssuchthat,whileparsing,thesystem llsinthemissinginformationofeachunknown word(Horiguchietal.,1995;;MusicandNavarretta,1996;; Mitsuishi et al., 1998;; Groverand Lascarides,2001).
In theotherapproach,very detailed default lexical entries for eachmajor wordclassarede ned.
Theapproachwehavefollowedfallsundera middle type.
Wehave de ned several default lexical entry templates for the dierent majorwordclasses|verbs,nouns,adjectivesand adverbs|whichcovertheirmostfrequentsubcategorization frames.
These templates, however,areunspeci edw.r.t. thosefeatureswhich encode the subcategorization restrictions imposed on their subjects and complements, e.g. marking prepositions, lexical semantics, etc.
This information is lled by the application of phrasestructurerules.
First experiments testing the eect of our default lexical entries, however, showed that, bycovering the most frequent subcategorization frames, we ensured that the accuracy of the grammar |percentage of input sentences that received the correct analysis| remained the same.
The precision of the grammar | percentage of input sentences thatreceived no superuous(orwrong)analysis|,however,was verylow,sincewecouldnotrestrictthelexical templatetobeactivatedforeachwordtype.
To improve the precision of the system we extended the PoS tags of our external lexicon (i.e.
thelexiconweuseformorphosyntacticannotation in Latch) so that they included syntacticinformationaboutthesubcategorizedfor elements (category, marking prepositions, ...).
Thisallowedustoreducethenumberofdefault lexicaltemplatestobeapplied.
10 6 Experiments and Results The twoexperiments described in this section were used to evaluate the performance of the integratedsystembothw.r.t. ecientprocessingandrobustness.
In the rstexperiment, ourgoalwastoperformacomparativestudyoftheprocessingtime ofourALEPgrammarbeforeandaftertheintegration of the PoS tagger and chunker.
For this experiment, therefore, we required testing cases whichwere already fully covered byour grammar before the integration of the tagger and chunker.
In this experiment, we used a subset of the test suites wehaveusedinthe LSGRAMandtheMELISSAprojects.
In the second experiment, our goal was to investigatetowhatextenttheALEPgrammar bene ted from the default lexical entries in terms of robustness.
In this experiment, we tested our system on test corpus whichwas 10 This information was not manually encoded, but it was extracted from the lexical resources developed in the project PAROLE (Melero and Villegas, 1998).
selectedrandomly. 11 a){ ExperimentA Toevaluate the eciency of the system, we de ned twotestsuites and run them with our ALEPgrammarbothbeforeandaftertheintegrationoftheshallowprocessingtools.
12 The
rst test suite included short instructivesentences or queries from the corpus of the MELISSA project 13 and sentences we selected from the dierent test suites wehave used for diagnosis and evaluation purposes in the LSGRAM and the MELISSA projects.
14 Test
cases were selected according to: (i) the syntactic function of the chunk e.g. subject, complement and adjunct, for nominal chunks, complementandadjunct,foradjectivalchunks, etc.; (ii) the position of the chunk in the sentence, and (iii) the category and the number ofnonheadelements.
Thistestsuiteincluded 1500cases.
Inrunningthetestsuitewiththenewsystem, processingtimeoftheoverallprocessimproved anaverageof65%duetothereductionofboth lexicalambiguityandsentencelength.
15 Oncepositiveresultswereachievedwithsuch
type ofsentential structures, weevaluated our system with much more complex sentences, showinga high interaction ofphenomena.
For this, we used an article |from the newspaper 11 Test suites and corpora are the two tools traditionally used for evaluating and testing NLP systems.
The main properties of test suites are: systematicity,control over data, exhaustivity, and inclusion of negative data.
Test corpora, by contrast, reect naturally occurring date (cf.
(Lehmann et al., 1996)).
12 Experiments
have been run in a 128 Mb Ultra Sparc 10.
Mean CPU time values were calculated for 50 samples.
13 NL
utterances which users made in interacting with ICAD, an administrative purchase and acquirement handling system, employed at ONCE (Organizacion Nacional de Ciegos de Espa~na), dealing with budget proposals and providing information to help decision makers.
14 These
test suites are organized on the basis of a hierarchical classi cation of linguistic phenomena.
Test suites including cases with interaction of phenomena and negative cases are also included.
15 The
reduction of the sentence length is due to the fact that elements that are wrapped together in a chunk by the preprocessing module are lifted to the parsing component of the grammar as a unique element.
\ElDiarioVasco"|of250wordsfromtheLS GRAMcorpus.
Two experiments have been carried on, rst byintegrating the PoS tags into ALEP and then the chunk markups.
For the rst experiment, the reduction of morphosyntactic ambiguity an average of 0.40 reduces the processingtimeoftheoverallprocessby45.9% (35.9% on average per sentence).
For the secondexperiment,thesystemprocessingtime is reduced by52.6%(anaverageof 42.7% per sentence).
Here, parsing speedup is due to the fact that byintegrating chunk markups, we do not only avoid generating irrelevant constituentsnotcontributingtothe nalparse tree but wealsoprovide part of the structure thattheanalysiscomponenthastocompute.
16 b){ ExperimentB Theevaluationoftheeectofdefaultlexical entries on the ALEP grammar was done with freeinputtext.
Hereweuseda300wordarticle from\ElPais"(September2001).
In running the second experimentwe observed that our rst approach ensured that the accuracy of the grammar |percentage of input sentences that received the correct analysis| remained the same, even though 67.7% of major words which appeared in the article was not encoded in the ALEP lexicon.
The precision of the grammar|percentage of inputsentencesthatreceivednosuperuous(or wrong) analysis|, however, was be very low, wegotanaverageof8analysispersentence.
By adding framinginformation tothe PoStagsof ourexternallexiconwereducedovergeneration uptoanaverageof2.5analysispersentence.
Besides, our system provides structural robustness to the highlevel processing.
We observed that a number of linguistic structures which could not be handled by the grammar 16 A detailed analysis of the results showed us that, while in processing simple sentences, as the ones we included in the rst test suite, the most relevant factor for improving processing time was the reduction of the numberoftokens of the sentences, in processing complex sentential constructions, e.g. sentences included embedded clauses, eciency gains were mainly due to the reduction of the morphosyntactic ambiguity, since this drastically reduced the structural ambiguity.
beforetheintegrationoftheshallowprocessing toolsarecurrentlycovered.
Examplesare: (3) a.
No dieron [credito alguno] a ...
((they)didnotbelievein...) b.
Se incrementaran en [los proximos ocho meses](Theywill beincreasedin thefollowingeightmonths) (3.a)showsanominalchunkwheretheinde nitealgunoispostponed,(3.b)showsanominal chunkwherethecanonical`cardinal+adjective' orderisinverted.
7 Conclusions
This paper hasdescribed researchinto thedevelopmentofengineeredlargescalegrammarto provide more robust and ecient deep grammaticalanalysisoflinguisticexpressionsinreal worldapplications e.g.
NLI,while maintaining boththeaccuracyofthegrammaranditsprecision.
Weforeseetoextendthechunkertocoverungrammatical or uncomplete intraclausal partial constituents which can then be integrated into the ALEP linguistic processing components.
Also we plan to add semantic informationtothePoS+FrametagsencodedinthelexicalresourcesdevelopedintheprojectSIMPLE.

