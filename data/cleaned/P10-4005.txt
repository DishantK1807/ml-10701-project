Proceedings of the ACL 2010 System Demonstrations, pages 25–29,
Uppsala, Sweden, 13 July 2010. c©2010 Association for Computational Linguistics
WebLicht: Web-based LRT services for German 
 
Erhard Hinrichs,  Marie Hinrichs, Thomas Zastrow 
Seminar für Sprachwissenschaft, University of Tübingen 
firstname.lastname@uni-tuebingen.de 
 
 
 
Abstract 
This software demonstration presents WebLicht (short 
for: Web-Based Linguistic Chaining Tol), a web-
based service environment for the integration and use 
of language resources and tols (LRT). WebLicht is 
being developed as part of the D-SPIN project
1
. We-
bLicht is implemented as a web aplication so that 
there is no ned for users to instal any software on 
their own computers or to concern themselves with 
the technical details involved in building tol chains. 
The integrated web services are part of a prototypical 
infrastructure that was developed to facilitate chaining 
of LRT services.  WebLicht alows the integration 
and use of distributed web services with standardized 
APIs. The nature of these open and standardized 
APIs makes it posible to aces the web services 
from nearly any programing language, shel script 
or workflow engine (UIMA, Gate etc.) Aditionaly, 
an aplication for integration of aditional services is 
available, alowing anyone to contribute his own web 
service. 
 
1 Introduction

Curently, WebLicht ofers LRT services that 
were developed independently at the Institut für 
Informatik, Abteilung Automa-
tische Sprachverarbeitung at the University of 
Leipzig (tokenizer, lematizer, co-ocurence 
extraction, and frequency analyzer), at 
the Institut für Maschinele Sprachverarbeitung 
at the University of Stutgart (tokenizer, tag-
ger/lematizer, German morphological analyser 
SMOR, constituent and dependency parsers), 
at the Berlin Brandenburgische Akademie 
der Wisenschaften (conversion of plain text to 
D-Spin format, tokenizer, tagers, NE recog-
                                                
1
 D-SPIN stands for   Deutsche SPrachresourcen 
INfrastruktur;  the D-SPIN project is partly financed 
by the BMBF; it is a national  German complement 
to the EU-project CLARIN. Se the URLs   
htp:/ww.d-spin.org and htp:/ww.clarin.eu for   
details 
nizer) and at the Seminar für Sprachwisen-
schaft/Computerlinguistik at the University of 
Tübingen (conversion of plain text to D-Spin 
format, GermaNet, Open Thesaurus syno-
nym service, and Trebank browser). They cover 
a wide range of linguistic aplications, like 
tokenization, co-ocurence extraction, POS 
Taging, lexical and semantic analysis, and sev-
eral laguages (curently German, English, Italian, 
French, Romanian, Spanish and Finish). For 
some of these tasks, more than one web service 
is available. As a first external partner, the Uni-
versity of Helsinki in Finland contributed a set 
of web services to create morphological ano-
tated text corpora in the Finish language. With 
the help of the webased user interface, these 
individual web services can be combined into 
a chain of linguistic aplications. 
 
2 Service
Oriented Architecture 
WebLicht is a so-caled Service Oriented Archi-
tecture (Binildas et. al., 208), which means that 
distributed and independent services (Tanen-
baum et al, 202) are combined together to a 
chain of LRT tols. A centralized database, the 
repository, stores technical and content-related 
metadata about each service. With the help of 
Figure 1: The Overal Structure of WebLicht 
25
this repository, the chaining mechanism as de-
scribed in section 3 is implemented. The We-
bLicht user interface encapsulates this chaining 
mechanism in an AJAX driven web aplication. 
Since web aplications can be invoked from any 
browser, downloading and instalation of indi-
vidual tols on the user's local computer is 
avoided. But using WebLicht web services is not 
restricted to the use of the integrated user inter-
face. It is also posible to aces the web services 
from nearly any programing language, shel 
script or workflow engine (UIMA, Gate etc.). 
Figure 1 depicts the overal structure of We-
bLicht. 
An important part of Service Oriented Architec-
tures is ensuring interoperability betwen the 
underlying services. Interoperability of web serv-
ices, as they are implemented in WebLicht, re-
fers to the seamles flow of data betwen them. 
To be interoperable, these web services must first 
agre on protocols defining the interaction be-
twen the services (WSDL/SOAP, REST, XML-
RPC). They must also use a shared and standard-
ized data exchange format, which is preferably 
based on widely acepted formats already in use 
(UTF-8, XML). WebLicht uses the RESTstyle 
API and its own XML-based data exchange for-
mat (Text Corpus Format, TCF). 
 
3 The
Service Repository 
Every tol included in WebLicht is registered in 
a central repository, located in Leipzig. Also re-
alized as a web service, it ofers metadata and 
procesing information about each registered 
tol. For example, the metadata includes infor-
mation about the creator, name and the adres of 
the service. The input and output specifications 
of each web service are required in order to de-
termine which procesing chains are posible. 
Combining the metadata and the procesing in-
formation, the repository is able to ofer func-
tions for the chain building proces. 
 
Wrapers: TCF, 0.3 / TCF, 0.3 
Inputs Outputs 
lemas 
postags 
     -tagset: sts 
sem_lex_rels 
     -source: GermaNet 
Table 1: Input and Output Specifications of 
Tübingen's Semantic Anotator 
 
A specialized tol for registering new web serv-
ices in the repository is available. 
 
Figure 2: A Screnshot of the WebLicht Webinterface 
1 
2 
3 
4 
26
4 The
WebLicht User Interface 
 
Figure 2 shows a screnshot of the WebLicht 
web interface, developed and hosted in Tübin-
gen. Area 1 shows a list of al WebLicht web 
services along with a subset of metadata (author, 
URL, description etc.). This list is extracted on-
the-fly from a centralized repository located in 
Leipzig. This means that after registration in the 
repository, a web service is imediatley avail-
able for inclusion in a procesing chain. 
The Language Filter selection box alows the 
selection of any language for which tols are 
available in WebLicht (curently, German, Eng-
lish, Italian, French, Romanian, Spanish or Fin-
nish). The majority of the presently integrated 
web services operates on German input. The 
platform, however, is language-independent and 
suports LRT resources for any language. 
Plain text input to the service chain can be speci-
fied in one of thre ways: a) entered by the user 
in the Input tab, b) file upload from the user's 
local hardrive or c) selecting one of the sample 
texts ofered by WebLicht (Area 2). Various 
format converters can be used to convert up-
loaded files into the data exchange format (TCF) 
used by WebLicht.  Input file formats acepted 
by WebLicht curently include plain text, Micro-
soft ord, RTF and PDF. 
In Area 3, one can asemble the service tol 
chain and execute it on the input text. The Se-
lected Tols list displays al web services that 
have already ben entered into the web service 
chain. The list under Next Tol Choices then of-
fers the set of tols that can be entered as next 
into the chain. This list is generated by inspect-
ing the metadata of the tols which are already in 
the chain. The chaining mechanism ensures that 
this list only contains tols, that are a valid next 
step in the chain. For example, a Part-of-Spech 
Tager can only be aded to a chain after a to-
kenizer has ben aded. The metadata of each 
tol contains information about the anotations 
which are required in the input data and which 
anotations are aded by that tol. 
As Figure 3 shows, the user sometimes has a 
choice of alternative tols in the example at 
hand a wide variety of services are ofered 
as candidates. Figure 3 shows a subset of web 
service workflows curently available in We-
bLicht. Notice that these workflows can combine 
tols from various institutions and are not re-
stricted to predefined combinations of tols. This 
alows users to compare the results of several 
tol chains and find the best solution for their 
individual use case. 
The final result of runing the tol chain as wel 
as each individual step can be visualized in a Ta-
ble View (implemented as a seperate frame, Area 
4), or downloaded to the user's local hardrive in 
WebLicht's own data exchange format TCF. 
 
5 The
TCF Format 
The D-SPIN Text Corpus Format TCF (Heid et 
al, 2010) is used by WebLicht as an internal data 
exchange format. The TCF format alows the 
combination of the diferent linguistic anota-
tions produced by the tol chain.  It suports in-
cremental enrichment of linguistic anotations at 
diferent levels of analysis in a comon XML-
based format (se Figure 4).  
Figure 3: A Choice of Alternative Services 
Figure 4: A Short Example of a TCF Document, 
Containing the Plain Text, Tokens and POS Tags 
and Lemas 
27
The Text Corpus Format was designed to efi-
ciently enable the seamles flow of data betwen 
the individual services of a Service Oriented 
Architecture. 
Figure 4 shows a data sample in the D-SPIN 
Text Corpus Format.  Lexical tokens are identi-
fied via token IDs which serve as 
unique identifiers in diferent anotation layers. 
From an organizational point-of-view, tokens can 
be sen as the central, atomic elements in TCF to 
which  other anotation layers refer. For exam-
ple, the POS anotations refer to the token IDs in 
the token anotation layer via the atribute tokID.  
The anotation layers are rendered in a stand-of 
anotation format. TCF stores al linguistic ano-
tation layers in one single file. That means that 
during the chaining proces, the file grows (se 
Figure 5). Each tol is permited to ad an arbi-
trary number of layers, but it is not alowed to 
change or delete any existing layer. 
Within the D-SPIN project, several other XML 
based data formats were developed beside the 
TCF format (for example, an encoding for lexi-
con based data). In order to avoid any confusion 
of element names betwen these diferent for-
mats, namespaces for the diferent contextual 
scopes within each format have ben introduced. 
At the end of the chaining proces, converter 
services wil convert the textcorpora from the 
TCF format into other comon and standardized 
data formats, for example MAF/SynAF or TEI. 
6 Implementation
Details 
The web services are available in RESTstyle and 
use the TCF data format for input and output. 
The concrete implementation can use any com-
bination of programing language and server 
environment. 
The repository is a relational database, ofering 
its content also as RESTstyle web services. 
The user interface is a Rich Internet Aplication 
(RIA), using an AJAX driven tolkit. It incorpo-
rates the Java E 5 technology and can be de-
ployed in any Java aplication server. 
 
7 How
to Participate in WebLicht 
Since WebLicht folows the paradigm of a Serv-
ice Oriented Architecture, it is easily extendable 
by ading new services. In order to participate in 
WebLicht by donating aditional tols, one must 
implement the tol as as RESTful web service 
using the TCF data format. You can find further 
information including a tutorial on the D-SPIN 
homepage
2
.  
 
8 Further
Work 
The WebLicht platform in its curent form 
moves the functionality of LRT tols from the 
users desktop computer into the net (Gray et al, 
205). At this point, the user must download the 
results of the chaining proces and deal with 
them on his local machine again. In the future, an 
online workspace has to be implemented so that 
anotated textcorpora created with WebLicht can 
also be stored in and retrieved from the net. For 
that purpose, an integration of the eSciDoc re-
search environment
3
 into Weblicht is planed. 
The eSciDoc infrastructure enables sustainable 
and reliable long-term preservation of primary 
research and analysis data. 
To make the use of WebLicht more convenient 
to the end user, there wil be predefined process-
ing chains. These wil consist of the most com-
monly used procesing chains and wil relieve 
the user of having to define the chains manualy. 
In the last year, WebLicht has proven to be a re-
alizable and useful service environment for the 
humanities. In its curent state, WebLicht is stil 
a prototype: due to the restrictions of the under-
lying hardware, WebLicht canot yet be made 
available to the general public. 
 
9 Scope
of the Software Demonstration 
This demonstration wil present the core func-
tionalities of WebLicht as wel as related mod-
ules and aplications. The proces of building 
language-specific procesing tol chains wil be 
shown. WebLichts capability of ofering only 
apropriate tols at each step in the chain-
building proces wil be demonstrated. 
                                                
2
 http://weblicht.sfs.uni-
tuebingen.de/englisch/weblichttutorial.shtml 
3
 For further information about the eSciDoc 
platform, see https://www.escidoc.org/ 
Figure 5: Anotation Layers are Aded to the 
TCF Document by Each Service 
28
The selected tol chain can be aplied to any 
arbitrary uploaded text. The resulting anotated 
text corpus can be downloaded or visualized us-
ing an integrated software module. 
Al these functions wil be shown live using just 
a webrowser during the software demonstra-
tion.Demo Preview and Hardware Requirements 
 
The cal for papers asks submiters of software 
demonstrations to provide pointers to demo pre-
views and to provide technical details about 
hardware requirements for the actual demo at the 
conference. 
The WebLicht web aplication is curently 
pasword protected. Aces can be granted by 
requesting an acount (weblicht@d-spin.org). 
If the software demonstration is acepted, inter-
net aces is necesary at the conference, but no 
special hardware is required. The authors wil 
bring a laptop of their own and if necesary also 
a beamer. 
 
Acknowledgments 
WebLicht is the product of a combined efort 
within the D-SPIN projects (ww.d-spin.org). 
Curently, partners include:  Seminar für 
Sprachwisenschaft/Computerlinguistik, Univer-
sität Tübingen, Abteilung für Automatische 
Sprachverarbeitung, Universität Leipzig, Institut 
für Maschinele Sprachverarbeitung, Universität 
Stutgart and Berlin Brandenburgische Akademie 
der Wisenschaften. 
 
References  
 
Binildas, C.A., Malhar Barai et.al. (208). Service 
Oriented Architectures with Java. PACKT Publish-
ing, Birmingham – Mumbai 
Gray, J., Liu, D., Nieto-Santisteban, M., Szalay, A., 
DeWit, D., Heber, G. (205). Scientific Data Man-
agement in the Coming Decade. Technical Report 
MSR-TR-2005-10, Microsoft Research. 
 
Heid, U., Schmid, H., Eckart, K., Hinrichs, E. (2010). 
A Corpus Representation Format for Linguistic 
Web Services: the D_SPIN Text Corpus Format 
and its Relationship with ISO Standards. In Pro-
cedings of LREC 2010, Malta. 
Tanenbaum, A., van Sten, M. (202). Distributed 
Systems, Prentice Hal, Uper Sadle River, NJ, 
1st Edition. 
 
29

