ADAM: An Architecture for xml-based Dialogue Annotation on Multiple levels Claudia Soria ILC CNR Pisa, Italy soria@ilc.pi.cnr.it Roldano Cattoni ITC-irst Trento, Italy cattoni@itc.it Morena Danieli CSELT Torino, Italy Morena.Danieli@cselt.it Abstract In this paper annotation modularity and use of annotation metaschemes are identified as basic requirements for achieving actual corpora reusability.
We discuss these concepts and the way they are implemented in the architectural framework of the ADAM corpus, which is a corpus of 450 Italian spontaneous dialogues.
The design of ADAM architecture is compatible with as many practices of dialogue annotation as possible, as well as approaches to annotation at different levels.
1 Introduction
In this paper we describe the methodological assumptions and general architectural framework underlying the ADAM Corpus, which is currently being developed as part of the Italian national project SI-TAL (Autori vari, 2000) 1.
Annotated dialogue corpora are of crucial importance for the development of vocal applications.
Because of their cost, however, it is essential that their acquisition and annotation be designed in order to maximize their reusability as much as possible.
The main assumption behind the design of the ADAM corpus is that actual reusability of corpora cruciMly depends on the strategic choices concerning the architectural design of the corpus, i.e. the way in which annotation tThe final version of the ADAM Corpus will be released by the end of 2001.
A pilot set, consisting of 30 dialogues, is currently available.
is organized and structured, and the way in which this is represented in a given physical format 2.
Corpus reusability is traditionally seen as mainly a by-product of either corpus representativeness and degree of standardization of annotation schemes.
We claim that two other requirements should be taken into account when designing and building an annotated corpus that aims at reusability, namely modularity of annotation, and use of annotation meta-schemes.
The meaning of these notions, as well as the way in which they are realized by the ADAM Corpus will be described in detail throughout the paper.
Section 2 introduces the corpus; section 3 focuses on ADAM: the motivations underlying its architecture are presented and the adoption of XML as mark-up language is discussed.
Finally, the various annotation schemes are illustrated in section 4.
2 Corpus
Description The ADAM Corpus, which is currently being developed, will consist of 450 Italian dialogues, both human-human and humanmachine, belonging to the tourist domain.
The human-machine component of the corpus is represented by human-machine dialogues over the phone, which are recordings of actual interactions occurring between customers and the Italian national railway information system (FS-Informa, (Bahia et al., 2000)).
The human-human component is represented by task-oriented dialogues between a person playing the role of a travel agent and another playing the role of a customer.
Each dialogue in the corpus is represented by an or2For a similar view see (Ide and Brew, 2000).
9 thographic transcription, recording the words uttered by the speakers plus any other non linguistic sound.
The transcription is linked to an audio file in PCM format.
In addition, each dialogue is annotated according to five annotation levels, namely prosody, morphosyntax, syntax, semantics and pragmatics (see below).
3 ADAM: Architectural Principles 3.1 Reusability Requirements The ADAM approach is mainly driven by the need of meeting the requirements of potential users of annotated corpora, with a particular emphasis on corpora reusability.
An annotated corpus is reusable as far as it complies with several requirements, such as corpus representativeness and use of standardized annotation schemes (see some widely renoWned standardization efforts such as EAGLES, MATE, DRI, ATLAS, etc.).
The physical format or mark-up language for corpus encoding is another crucial issue, as it will be argued in section 3.4.
In addition to this, we claim that an annotated corpus is useful beyond the immediate particular application aims only to the extent to which it is designed so as to meet two other important needs.
A fundamental requirement appears to revolve around the way annotation is organized, structured and represented in a corpus.
In short, it is essential that the annotation, i.e. the linguistic information added to the data, should be easily and quickly modifiable at a moderately low cost by subsequent users of the corpus.
We can think of at least two possible scenarios, referring to two orthogonal dimensions of customization operations.
First, it might be the case that a user wishes to reuse a corpus which is annotated for several types of linguistic information, but lacks of a particular annotation type; the potential user could nevertheless be interested in the existing annotations, and would like to supplement them with a new one.
On the other hand, it might be the case that a user is interested in some annotation only (e.g., pos-tagging or syntactic structure) and s/he might want to leave aside other annotation types.
Reusability of an annotated corpus can thus be thought of as a function of the extent to which new levels of linguistic information can be added, or uninteresting ones can be removed.
This is what we call the vertical dimension of customization in annotated corpora.
Second, for each level of linguistic analysis, an annotated corpus is likely to be reused depending on the extent to which existing annotation can be changed, so as to accommodate different annotation practices.
It is often the case that a corpus which is annotated with a given annotation scheme "hardwires" the annotation so as it is impossible to replace the annotation without reverting to the raw text and rebuilding the annotation from scratch, which is enormously expensive.
This is what we call the horizontal dimension off customization of an annoted corpus.
The extent to which an annotated corpus can be compliant with these two requirements clearly depends on the architectural choices made at the design level: if, for instance, all types of annotation are flattened onto a single representation level, it is clear that the customizing operations above become hardly feasible.
We claim that the vertical and horizontal customization requirements can be easily achieved on the one hand by appealing to the two related notions of modularity of annotation and use of annotation meta-schemes, and on the other by exploiting a physical format of encoding that fully supports them.
In the next three sections we illustrate the two concepts as well as the way they are implemented in the ADAM Corpus.
3.2 Annotation
Modularity In an annotated corpus, several different types of annotation or linguistic information may be present in relation to the same input data.
These types of information can be thought of as independent, yet related, levels or dimensions of linguistic description. We thus can think of a level of prosodic analysis, another of pos-tagging, another of semantic analysis, etc.
By annotation modularity we mean that the different layers of an10 notation are to be kept independent one of another.
In the ADAM Corpus we provide five layers of annotation: prosodic, morphosyntactic (pos tagging), syntactic, conceptualsemantic, and pragmatic.
Each dialogue in the corpus is annotated at the above five levels of analysis; synchronization among the different analyses and between these and the speech signal is ensured by the different annotations (stored as separate files) making reference to the same input file.
This file, containing the transcription of the dialogue, is in turn linked to the audio file in PCM (a-low or u-low) format.
As it will be argued in section 3.3, support for this structure is provided by the use of XML as mark-up language.
By adopting this structure, annotation layers are linguistically heterogeneous and mutually orthogonal, so that changing one of them affects others only to a limited extent; layers are nevertheless indirectly related through a) their hinging on a common reference file (the "raw" text represented by the transcription file); b) the indirect correlation of the linguistic information they convey.
This vertical modularity of the ADAM approach has interesting consequences for the purposes of reusability.
A potential user of the ADAM Corpus is left free to select, among the proposed levels of annotation, those which best reflect his/her theoretical and practical interests.
(S)he can also feel the need for adding a new layer of information, not contemplated in today's ADAM realization.
By the way, level modularity is also of theoretical interest, since most annotation schemes we know differ mainly in the way pieces of linguistic information categorized, rather than in the intrinsic nature of these levels.
Moreover, level modularity seems to have a useful impact on our theoretical understanding of the linguistic phenomena at stake, since it is capable of expressing correlations between layers, and ultimately between dimensions of linguistic analysis.
3.3 Annotation
meta-schemes Horizontal customization in annotated corpora can be enhanced by implementing the concept of annotation meta-schemes.
The different layers of linguistic description irapried by the concept of annotation modularity presuppose as many annotation schemes.
As it will be made clear in section 4, for each of the five annotation layers envisaged for the ADAM Corpus, a particular annotation scheme has been designed and applied.
However, it should be emphasized how the ADAM specifications do not merely amount to another set of ready-made, off-the-shelf annotation schemes.
Rather, we would like to focus the attention on what we call an annotation meta-scheme, and on the implications of this choice.
According to our view, an annotation meta-scheme is a general descriptive framework in which different annotation schemes can be accommodated.
In many cases the same unit of linguistic information can be annotated in different, arguably mutually incompatible ways, which are nonetheless all compatible with the recommended vertical modularity described above: so it is better to provide the potential user with the possibility of adopting any arbitrary annotation scheme without being forced to re-build the annotation from scratch or to forcefully comply with some other annotation scheme, no matter how standardized.
To do so, it is necessary to have a representation format for the annotation that is general enough for competing schemes to be mutually substitutable.
In ADAM we achieve this aim by building a general scheme where those features that are common to several competing schemes become slots or descriptive element tags to be associated with linguistic elements; the values of these attributes can be any arbitrary set of tags.
Let's consider, for instance, the case of pragmatic annotation.
The main difference between annotation schemes for this level of analysis lies in the particular types of dialogue act chosen rather than in the notion of dialogue act itself, which appears to be uncontroversial.
If, however, we adopt a scheme where the basic descriptive element of any arbitrarily long set of words is the general tag <dialogue act>, further described by an attribute type, different schemes can be applied 11 to the same corpus without totally discarding the existing annotation: a substitution in the set of values will be enough.
It is our belief that enforcing this practice in the design of annotation schemes will bring us to more effective corpora exchange and reuse 3 3.4 XML-based Annotation In fact, actual corpus reusability also crucially depends on the physical \]ormat or markup language used for corpus encoding.
The mark-up language used for the,encoding of the ADAM Corpus is XML.
XML proved to be the ideal candidate for a number of reasons, all related to corpus reusability.
First, it is an emerging and widespread standard, which ensures a good degree of corpus reusability in the times to come.
Second, because of its platform-independence it enhances the potential for wide circulation of the annotated material, together with a considerable flexibility of use.
More crucially, however, XML proved essential for implementation of the architectural choices described above.
Annotation modularity is supported via extensive use of Xlink elements (DeRose et al., 2000).
Each XML element in the annotation files is actually an hypertextual link which refers to an element (or set of elements) in the transcription file.
All annotations for each dialogue are thus connected to the same input reference source (the transcription), thus ensuring synchronization of the different annotations and still preserving their independence.
On the other hand, the concept of annotation meta-scheme is implemented by making the XML translation of the different annotation schemes content-independent.
In other words, a general preference was given towards representing the different ~nnotation tags as values of generic, scheme-independent attributes of XML elements.
In this way the different annotation schemes (represented as different DTDs) are represented in a generic enough way, so that a future user of the corpus will only need to change the values of Sin addition, the meta-scheme can be seen as a tool for effective compariso n of alternative annotation schemes.
the different attributes for the entire annotation scheme to be changed.
We believe that this approach represents a further value of the ADAM Corpus.
3.5 Previous
and related work Our work builds on some important standardization efforts which were going on during the past few years in the field of dialogue annotation (DRI, EAGLES, and MATE).
We are also indebted to the experience gained in other projects using stand-off XML annotation, and in particular to the MATE project.
The multi-level markup framework adopted in ADAM closely reflects the MATE approach (Dybkjaer et al., 1998).
In addition, in our project we are using the MATE workbench (Dybkjaer and Bernsen, 2000) for visualization and information extraction purposes.
However, at the best of our knowledge ADAM is the first corpus being architecturally designed by explicitly adopting the concept of annotation modularity and metascheme at different levels.
A recent standardization project in the annotation field is constituted by the ATLAS (Bird et al., 2000) consortium, including NIST, LDC and MITRE.
The ATLAS architecture is based on a formal model for annotating linguistic data (Bird and Liberman, 1999).
ATLAS offers a threelayers solution to the problem of integrating different data storage formats by providing a logical level which consists of the language formalism and the API.
The architecture we are proposing for the ADAM corpus is not a software architecture such as the one implemented by ATLAS.
While the latter one meets the requirement of flexible and dynamic extension of the sofware modules, the ADAM architecture mainly refers to functional organization of the different annotation layers.
In ADAM the flexibility requirement is about the possible extensions of those layers.
In addition, the ATLAS architecture covers a large variety of possibly annotated data (not only linguistic data, but visual data of different kinds too), while ADAM is only focused on linguistic and speech annotations.
12 4 Levels of Annotation The ADAM's five levels of annotation were mainly chosen in consideration of their interest for practical applications of the annotated material.
In spite of the number of levels considered, and their sometimes conflicting requirements, we tried to develop a coherent, unitary approach to design and application of annotation schemes.
In particular, in developing the different annotation schemes for the five levels envisaged, attention was paid to be consistent with criteria of robustness, wide coverage and compliance with existing standards.
4.1 The
prosodic level For the annotation of the prosodic phenomena of dialogue we are adopting the meta-scheme for prosody annotation developed by Quazza and Garrido (Klein et al., 1998) within the MATE project.
This meta-scheme allows to annotate the prosodic phenomena of natural dialogue by distinguishing the following four sub-levels of prosodic annotation: • phonetic transcription • phonetic representation of intonation • phonological representation of intonation • prosodic phrasing The four levels do not represent a fixed hierarchy.
The two phonetic levels are directly aligned with the speech signal and in this sense may be considered as base levels.
The two phonological levels keep a natural relationship both with the base prosodic levels and with other linguistic units.
In the actual use of the scheme, the levels and their links can be fully or partially specified.
In a linguistic text-oriented analysis, prosody could be considered in its function, leaving out the details of its realization.
In this case, the sole phonological levels may be filled and linked to the orthographic level of words.
Complex schemes like ToBI could be used in this way, or simpler schemes providing labels to distinguish types of accents, associated with words, and types of intonation boundaries.
In a speech technology context, a more signaloriented approach could be adopted.
In order to recognize or synthesize prosodic patterns, detailed phonetic descriptions are necessary, requiring both phonetic segmentation and phonetic representation of intonation in terms of pitch movements or target f0 levels.
The ADAM prosodic annotation is done at the level of the prosodic phrasing.
The third section of Appendix B reports an excerpt of the prosodic annotation file of a humanhuman dialogue of the corpus.
These are four dialogue turns whose text is translated in the first section of the Appendix.
The element breakindex allows to encode the ToBI labels which constitute the values of the attribute type.
For example, the brkndx_O07 is annotated with type label 3p to mark-up an hesitation pause.
4.2 The
Morpho~Syntactic and Syntactic Levels The ADAM proposal for the morphosyntactic level is a two-layer annotation structure, containing respectively information on word category and morphosyntactic features (pos tagging), and non recursive phrasal nuclei (called chunks).
Robustness and coverage were a crucial aspect in the development of the two schemes, in particular for what concerns i) syntactic constructions specific of spoken dialogues (ellipses, anacolutha, non verbal predicative sentences etc.), and ii) disfluencies (repetitions, false starts, trailing off etc.).
The morphosyntactic annotation level encodes the following information: a) identification of morphological words and linking to their corresponding orthographic counterparts; b) annotation of their pos-category; c) annotation of morphosyntactic features (such as number, gender, person, tense, etc.); d) annotation of their corresponding lemma.
The partic~ar tag set, though adapted to representation of Italian, is compliant with EAGLES recommendations (Gibbon, 1999).
In addition, the tag set is structured into a core scheme, supplying basic means for annotating morphological information, and a periphery tag set, which serves the purpose of making 13 provision for further linguistic annotation to be added to obligatory information.
The syntactic annotation level is built on top of the previous one and consists in identification of non-recursive phrasal nuclei (called chunks) and annotation of their category (Mengel et al., 1999).
The preference given to shallow parsing over, e.g., phrase structure trees is chiefly motivated by the locality of the analysis offered by this approach, a useful feature if one wants to prevent a local parsing failure from backfiring and causing the entire parse of an utterance to fail.
This is particularly desirable when dealing with particularly noisy and fragmented input such as spoken dialogue transcripts.
For an illustration of morphosyntactic and syntactic annotation, see examples 4 and 5 in Appendix B.
4.3 The
Conceptual Level The annotation scheme for the conceptual level has been designed on the following requirements and assumptions: • portability: although most of concepts encode strictly domain-dependent information, the annotation scheme should be domain-independent as much as possible; • expressiveness: the scheme should allow the representation of the content of complex dialogues; • minimality: a turn should be annotated in a unique way; • simplicity: the syntactical complexity of the concept is to be minlmized; • locality: the annotation should not take in account the history of the dialogue.
The proposed annotation scheme takes inspiration from the so called "Frame-based Description Languages" (Cattoni and Franconi, 1990), a well established framework in the field of the Knowledge Representation.
In our annotation scheme a concept is encoded like a "frame", a typed structure with "slots".
Slots represent the properties of the concept and its relations with Other concepts.
Slots are encoded with the couple <slot-name, slotvalue>: the former contains the name of a property, the latter either a simple value or a reference to another concept.
This recursion allows the encoding of complex and structured semantics information.
Concepts are typed: different types of concepts (e.g.
"trip", "room") encode different contents to be represented.
For example given the sentence to be annotated "the train leaves from rome at eigth o'clock of monday fifteen", its conceptual annotation is: <concept id="c_O01" ctype="trip"> <slot shame= "transport at ion-t ype" svalue =" train"/> <slot sname="origin" svalue="rome"/> <slot sname="departure-time" svalue="*c_O02"/> </concept> <concept id="c_O02" ctype="time"> <slot sname="hour" svalue="8:00"/> <slot sname="week-day" svalue="monday"/> <slot sname="month-day " svalue="md15"/> </concept> where the concept c_001 of type trip has tre slots; the slot representing the departure-time encodes a reference (introduced by the character '*') to the other concept c_002 of type time.
The annotation scheme is domain independen/: the tag set does not change when the domain changes since the domain-dependent information is encoded in the values of the attributes.
The user is free to adopt the preferred ontology, although a good reference are the symbols adopted by the C-STAR consortium (Waibel, 1996) for the inter-lingua: they have been developed on the basis of the experience on six different (Asiatic and European) languages and this appears to guarantee a good portability inter-lingua.
4.4 The
Pragmatic Level For annotating the pragmatic level of dialogue, we base our work on the concept of dialogue act.
Informally speaking, a dialogue act tag is a label belonging to a tag set which refers to a given iUocutionary dimension that may be performed by uttering a sentence.
A dialogue utterance may be annotated with a dialogue act label for representing the discourse function it plays in the 14 dialogue.
The annotation scheme used for the pragmatic level of the ADAM corpus is an extension of both DAMSL (Core and Allen, 1997) and SWITCHBOARD-DAMSL (Jurafsky et al., 1997).
The extension was not motivated by domain, rather by the dependency on the dialogue type.
Actually, most of dialogue acts encode information that is strictly dependent on whether the communication is task-oriented, familiar, formal, and so on.
So the inventory of dialogue acts labei should be sufficiently wide to cover different types of dialogues, and sufficiently open to add new dialogue act labels for different annotation tasks.
For the design of the extended tag set we have identified the following requirements and assumptious: • minimality: an utterance should be tagged with an unique dialogue act label; • context-sensitiveness: each turn is managed by considering the previous turns, that is the annotation should take into account the history of the dialogue.
The tag set used in the corpus is reported in Table 1 (see the Appendix).
In Appendix B, Section 7 the four dialogue turns translated at the beginning of the Appendix are annotated by using the ADAM pragmatic tag set.
Each dialogue turn is annotated as a whole by tagging the communicative level of the turn itself (if it is about the task or about managing the task, for example).
Within the turn the different communicative intentions are labeled on the basis of the dialogue act tag set.
5 Conclusions
In this paper we have identified two basic requirements for achieving actual corpora reusability, namely annotation modularity and use of annotation meta-schemes, and described how they are addressed in the ADAM Corpus.
We claim that, for effective circulation and re-use of corpora, it is essential to make provision for as many practices of dialogue annotation as possible, as well as approaches to annotation at different levels, instead of providing fixed levels and schemes of analysis, no matter how standardized.
Corpora will have a chance to be reused as far as it will be easy and relatively inexpensive to adapt them to different needs and application purposes.
Use of XML as mark-up language is a further step toward this end.
References Autori Vari 2000.
SITAL: Manuale Operativo.
Deliverable 1.1, Italy.
Baggia, P., Castagneri, G.
and M.
Danieli. 2000.
Field Trials of the Italian ARISE Train Timetable System.
Speech Communication, 31, pages 355-367.
Bird, S.
and M.
Liberman. 1999.
A Formal Framework for Linguistic Annotation.
Technical Report MS-CIS-99-01, Department of Computer and Information Science, University of Pennsylvania.
Bird, S., Day, D., Garofolo, J., Henderson, J., Laprun, C.
and M.
Liberman. 2000.
ATLAS: A Flexible and Extensible Architecture for Linguistic Annotation.
In Proceedings of LREC 2000, Athens, Greece.
Cattoni, R.
and E.
Franconi. 1990.
Walking through the Semantics of Frame-Based Description Languages: A Case Study.
In Proceedings of the Fifth International Symposium ISMIS '90, pages 234--241, Knoxville, TN.
Core, M.
and J.
Allen. 1997.
Coding Dialogues with the DAMSL Annotation Scheme.
In Working Notes of the AAAI Fall Symposium on Communicative Actions in Humans and Machines, pages 28-35.
Cambridge, MA.
DeRose, S., Maler, E., Orchard, D.
and B.
Trafford. 2000.
XML Linking Language (Xlink).
W3C Working Draft, 21 February 2000.
http ://www.
w3. org/TR/xlink/.
Dybkjaer, L., Berusen, N.
O., Dybkjaer, H., McKelvie, D., and A.
Mengel. 1998.
The MATE Markup Framework.
MATE Deliverable 1.2. http://mate, hiS.
sdu. dk.
Dybkjaer, L.
and N.-O.
Bernsen. 2000.
The MATE Workbench.
In Proceedings of LREC P000, Athens, Greece.
Gibbon, D.
(ed.). 1999.
Handbook of Standards and Resources for Spoken Language Systems.
First supplement, EAGLES LE3-4244, Spoken Language Working Group.
Ide, N.
and C.
Brew. 2000.
Requirements, Tools, and Architectures for Annotwted Corpora.
In Proceedings o/LREC 2000, Athens, Greece.
Jura?sky, D., Shriberg, E.
and D.
Briasca. 1997.
Switchboard DAMSL Labelhlg Project Coder's Manual.
Technical Report 97-02, University of Colorado, Institute of Cognitive Science, Boulder, CO.
http://www, colorado, edu/ling/~ juraf sky/manual, august I.
html. Klein, M., Bernsen, N.
0., Davi~, S., Dybkjaer, L., Garrido, J., Kasch, H., Mengel, A., Pirrelli, V., Poesio, M., Quazza, S.
and\[ C.
Sofia. 1998.
Supported Coding Schemes.
MATE Deliverable i.I. http://mate .his.
sdu.d.k. Mengel, A., Dybkjaer, L., Garrido, J., Heid, U., Klein, M., Pirrelli, V., Poesio, M., Quazza, S., Schiffrin, A.
and C.
Sofia. 1999.
MATE Dialogue Annotation Guidelines.
MATE Deliverable 2.1. http://mate, nis.
sdu. dk.
Waibel, A.
1996. Interactive Translation of Conversational Speech.
Computer, 29(7):41-48 .

