TUIT: A TOOLKIT FOR CONSTRUCTING MULTILINGUAL TIPSTER USER INTERFACES William C.
Ogden The Computing Research Laboratory New Mexico State University ogden@crl.nmsu.edu 1.0 Introduction The TIPSTER Architecture has been designed to enable a variety of different text applications to use a set of common text processing modules.
Since user interfaces work best when customized for particular applications, it is appropriator that no particular user interface styles or conventions are described in the TIPSTER Architecture specification.
However, the Computing Research Laboratory (CRL) has constructed several TIPSTER applications that use a common set of configurable Graphical User Interface (GUI) functions.
These GUIs were constructed using CRL's TIPSTER User Interface Toolkit (TUIT).
TUIT is a software library that can be used to construct multilingual TIPSTER user interfaces for a set of common user tasks.
CRL developed TUIT to support their work to integrate TIPSTER modules for the 6 and 12 month TIPSTER II demonstrations as well as their Oleada and Temple demonstration projects.
This paper briefly describes TUIT and its capabilities.
2.0 Document
Editing and Browsing The TUIT Application Programming Interface (API) and software library supports document editing and browsing.
The TUIT Editor (TED) is a GUI that can be used to view and edit multilingual texts.
TED takes advantage of the Computing Research Laboratory's X-multi-attributed-text (Xmat) widget.
The GUI is unique in that it provides methods for input, edit, and display of text in multiple languages.
TED is being used in several government sponsored projects at CRL, and is User Application appropriate for other projects that require multilingual text display and edit capabilities.
Before TUIT, TIPSTER applications that needed multilingual text display and edit capabilities required developers to use the Motif API and Xmat API, and write all TIPSTER document browsing functions using the Motif and Xmat libraries.
Ease of incorporating and configuring new applications improve significantly with the TUIT library with its own API as shown in Figure 1.
Applications are able to call Xmat library functions on the created widgets as well.
The TUIT API supports the creation of windows, menus, and dialogs.
This functionality includes: • Dialogs for loading TIPSTER collection documents • Creating and configuring document display and edit windows • Configuring/adding function menus to browser windows • Dialogs for search and replace, spell check, or other user defined procedures • Dialogs for TIPSTER Extraction modules • Language Input method selection • Language and code set selection • Font selection • Print multilingual documents • Import/Export Unix files An application can include all of this functionality with a single TUIT API function call.
A document TUIT Library Xmat Library Motif Library X Windows TIPSTER Library FIGURE 1.
TUIT Library Integrates XWindows with TIPSTER Documents 219, joke.031 i i ii, iii FIGURE 2.
A typical document browser window showing annotation highlights (proper names) browser window such as that shown in Figure 2 would be created with this single function call.
3.0 Attribute
and Annotation support In applications that incorporate a TIPSTER compliant document manager, the TUIT API also supports TIPSTER document attribute and annotation browsing and editing Annotation and attribute browsing and editing allows users to show, create, or delete document attributes, annotations and annotation attributes.
There are also interfaces for grouping annotations by type or attribute values and for hiding or showing these annotations groups.
Annotated text can be displayed with color highlighting, or with different font styles.
Users can also create their own text annotations to be stored with documents.
4.0 Document
Manager GUI Another TUIT API function creates window, dialogs and menus for managing TIPSTER collections and documents.
It provides an interface that enables users to: • Read/Save documents to TIPSTER Document Collections • Create/Delete documents • Rename collection documents • Edit document attributes • Launch a new TU1T editor with a document • Create/Delete collections • Add Unix files to collection based on a path and wildcard • Edit collection attributes • Copy and move documents between and among collections Document 5.0 Extraction and Detection Support TIPSTER compliant extraction modules can be easily integrated with the TUIT GUI.
For example Japanese/Chinese interactive segmentation of documents is possible in the current system using CRL's Chinese segmentation system and a TIPSTER front end to JUMAN.
The segmentation is preserved as document annotations.
6.0 Configuration
support TUIT is configurable at run time on a number of dimensions through a standard configuration format using TCL-style syntax.
7.0 Status
TUIT has been fully tested in the Oleada and Temple demonstration projects for SunOS 4.x and 5.x (Solaris).
Contact the author for availability or more information. 220

