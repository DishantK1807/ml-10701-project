COLING 82,.1".
Horecl~ \[ed.} North-Holland Publishing Company © Academitt 1982 A LESNIEWSKIAN VERSION OF MONTAGUE GRAMMAR Arata ISHIMOTO Department of Industrial Administration Science University of Tokyo Noda, Chiba Japan We shall be concerned in this paper with the logical analysis of natural language on the basis of Lesniewski's ontology, which is a logical system without type-distinction between individuals and monadic predicates.
This, it is believed, is also one of the features of natural language, and use will be made of this feature for developing a fragment of n atnral language.
I Introduction According to Montague every simple sentence of natural language is of the form Np + Vp = (Det + N) + Vp, and, as emphasized by Barwise-Cooper \[1\] Det + N constitutes a generalized quantifier to be applied to Vp or verb phrase as one-place predicate.
(For Montague grammar consult among others Montague\[10\], Cresswell \[3\] and Jirku \[6\]<) Thus, simple sentences suck as: .1 the man walks, .2 every man walks, • 3 some (a) men (man) walk(s) .4 (at least) two men walk, • 5 (at least) three men walk, are respectively,of the following logical forms: 1.11 (kPkQP1x man) walk, 1.21 (~P~Q~x(P x O Q x) man) walk, 1.31 (XP%Q3x(P x A Q x) man) walk, 1.~l (kPkQBxBy(P x ^ P y A P x A Q y A xz~ y) man) Walk, 1.51 (kPkQBx~y3z(P x A Q y ~ Q x A Q y A P z ~ Q z A x~y A y~z A z~x).man) walk, where QIxP x is the Russellian-type definite description to be defined as ~x(P x ~ Q x) A ~x~ty(P x A P Y.~ X~ry), with the scope restricted to Q.
By means of k-con,~ersion, for example," from 1.11 and 1.21 we respectively obtain: walk ix man x, and Vx(man x O walk x), so that Det + N now becomes in both cases a generalized quantifier.
139 140 A.
ISHIMOTO (Here as well as in what follows intension will not be taken into consideration.
The proposed Lesniewskian theory will therefore be extensional).
Now it is to be remembered that 1.11-1.51 are the formulas of (second-order) predicate logic.
In other words, the sentences of natural language are embedded in predicate logic although a large number of formulas of the logic do not have their counterparts in natural language.
However, the embedding in traditional predicate logic is not necessarily the only possible way for us to understand the logical structure of natural language.
In fact, natural language could also be embedded in Lesniewski's ontology augmented by a number of additional notions so that a fragment of natural language can be accomodated there, and ~n what follows we shall be concerned with a detailed construction of Lesniewskian-type logical grammar.
2 Logical
~rammar based upon Lesniewski1~ ontology In Lesniewskian-type Montague grammar we are all the same starting from the structural assumption of the simple sentences of natural language as mentioned at the beginning of the last section.
Neverthel@ss, in Lesniewskian version of logical grammar, which will be abbreviated as LMG in the sequel, Det, i.e. determiners, are represented not by generalized quantifiers but by the functors of Lesniewski's ontology with noun and intransitive verb phrases to be combined thereby as two arguments, which are now provided with the category of names in the sense of Lesniewski's ontology, not the one corresponding to monadic predicates of predicate logic.
Without going into the details of the phrase structure and transformational rules necessary for generating a fragment of English (which is by far smaller than that proposed by Cooper-Parsons \[2\] ) we shall present the deep or logical structures of a number of simple sentences (of English) as (well-formed) sentences belonging to the proposed Lesniewskian version of Montague grammar to be de-~ signated as LMG: 2.11 ((the man) walk), 2.12 ((every ((man or ) woman)) speak), 2.13 ((some woman) not play)), 2.14 ((every man) \[love (some woman)\] ) 2.15 (the woman) \[(love and) admire) \] ' (every (boy ( or girl)\] l) 2.16 (not ((every man) speak)), where \[ \]l is a combinator or operator which makes an intransitive verb phrase out of a transitive verb and a noun phrase.
This combinator is represented by a declension in inflectional languages such as Slavic ones, while in the case of uninflected languages such as English it is taken care of by word order.
It is remarked that any combinator could sometimes be applied from the left to the right as suggested by Cresswell \[5\] • This has already been practised in som@ of the above sample sentences.
Thus such sentences like: ((every man) \[(some (dog (or cat )) love\] 1 ), and ((some woman) \[(some man)(love not)\] 1 ), are also well-formed, being close to the word order usual in Japanese.
As is well known, 2.14 has another deep or logical structure in quantificational theory with 'some' having the wider scope than 'every'.
In this case, the given sentence is of the form: ( \[(every man) love\] 2 (some woman)), A LESNIEWSKIAN VERSION OF MONTAGUE GRAMMAR 141 where \[ !2 combines a noun phrase and a transitive verb phrase giving rlse to an expression corresponding to a monadic predicate.
But, unlike \[ \]l, the doun phrase to be combined is in the nominative case.
The use of \[ \]2 will be illustrated as follows: 2.21 (\[(some man) hate\] 2 (every woman)), 2.22 ((every woman) \[(some man) hate\]2), which are of the same structure with each other with 'some man' remaining the subject of these sentences.
As fs easily understood from the development up to the present, the (well-formed) expressions of the proposed LMG as a logic are defined in terms of the expressions both constant nnd variable having the category of names in the sense of Lesniewski's ontology and relations as well as of a number of logical operators not only sentential and quantificational but also name-for~ing and relation-#orming.
(For Lesniewski's ontology consult Iwanus \[5\], Luschei \[9\] and Slupecki \[11\].
) 3 Axiomatization of LMG as a logic ;w~ If we are to develop LMG as a logic,we have to axiomatize it as a logical system.
Fortunately the axiomatization of Lesniewski's ontology has been intensively worked out ever since its single axiom was first proposed by Lesniewski himself in 1921.
Thus, we are starting with the celebrated single axiom originating from Lesniewski: 3.01 e(a, b) ~ .(3x)e(x, a) ~(x)(~(x, a)O ~(x, b)) A(x)(y)(C(x, a)A £(y, a).O E(x, y)), or its simplified version by Soboeinski \[19 : 3.o2 ~(a, b) ~ (~x)(~(x, a) ^ E(x, b)) (x)(y)(~(x, a) A ~(y, a).D ~(x, y)), where e stands for 'the' and a, b,... and ~he like are (meta-) logical variables ranging over the expressions of the category of Lesniewskian names.
On the other hand, e(a, b) stands for ((ea) b) or ((a e) b) or (b (ea)) or (b (a e)), which are forthcoming as a result of the liberalization due to Cresswell \[3\].
Analogously, A(a, b) (l(a, b)) represents ((A a) b) etc.
((I a) b~ etc).
with A (I) taking the place of 'every' ('some' ).
(A and I are also known as syllogistic funetors corresponding to 'every' and 'some' respectively).
Nevertheless, 3.01 or 3.02 is not enough to develop LMG as a language.
In fact, we need a number of additional axiom (schemata) for taking care of nameand relation-forming (logical)operators and the expressions involving \[ \]1 and \[ \]2.
The axiom (schemata) stipulating these operators are wellknown, being of the forms: 3.11 e(a, b and c) 5 .E(a, b) A e(a, c), 3.12 e(a, b or e) ~ .c(a, b) V e(a, c), 3.21 e(a, not b) ~.e(a, a)A~e(a, b), 3.22 (R and S)(a, b) ~ .R(a, b) A S(a, b), 3.23 (R or S)(a, b) ~ .R(a, b) V S(a, b), 3.24 not R(a, b) ~ .e(a, a) A e(b, b)A~ R(a, b), 3.25 en R(a, b) ~ R(b, a) 3.26 R(a, b) ~ .e(a, a) A g(b, b), where in 3.26 R is atomic.
We are also abbreviating such expres142 A.
ISHIMOTO sions as ((R and)S)and the like as (R and S) for the purpose of perspicuity.
Lemma 3.3 3.25 holds of any relation R.
This is easily proved on the basis of 3.23-3.24 by induction on the length of the given R.
3.~1 A(a, h) ~ (x)( c(x, a) D ~(x, h), 3.h2 I(a, b) ~ ~x)( e(x, a) ~ e(x, b)).
We are now presenting some of the axiom (schemata), which take care of the expressions containing \[ \] 1 and \[ \] 2.
3.51 e(a, \[(e b) R\] 1 .(Bx)( g(x, a)A (3z)( £(z, b) A R(x, z)) A(x)(y)( ~(x, a) ^ E(y, a).
O ~(x, y)) ^(x)(y)( E(x, b) ^ ~(y, b).
O ~(x, Y) 3.52 A(a, \[(I b) R\] 1 (x)( s(x, a)O (BY)( e(y, b) % R(x, y)) 3.53 l(b, \[(A a) R\] 2 ) (3y)( ~(y, b) A(x)( ~(x, a) O R(x, y)) It is noticed that some of these axioms are not well-formed as sentences of LMG as a language although they belong to LMG qua logic.
Theorem 3.7 Every simple sentence of LMG (as a language) is equivalent to a sentence (of LMG as a logic), and this sentence involve only g and atomic relations besides logical operators with quantifiers binding only such name variables x and y as occur there in the context e(x, a) or R(x, y).
The proof is carried out by induction on the number of symbols other than those mentioned in the theorem on the basis of axioms.
It is again observed that the formulas to which these sentences of natural language are transformed are not necessarily those belonging to LMG as a language.
4 Translation
of LMG into predicate logic It will be shown in this section that LMG as a language is embedded in first-order predicate logic (with equality) via a translation T to be defined presently.
(The proposed translation dates from Prior \[8\] and has been elaborated by Ishimoto \[4\] and Kobayashi-Ishimoto \[7\]).
The translation T is defined by induction on the number of the words contained in the given expression of LMG.
In the first place, the basis is taken care of by: T a = Fa, T b = Fb, where a, b,... are (atomic) names constant and variable, and Fa, Fb, ...
are monadic predicates again constant or variable corresponding to a, b,... not necessarily exhausting all of them.
T e = IPIQQlxP x, T A = IPIQ~x(P x O Q x), T I = IPIQBx(P x A Q x).
We are now proceeding to the induction steps: T aA8 = T a A T 8, T av8 = T a V T 8, T aDS = T e D T 8, T ~ =~T ~, T (x)a =VF x T G, T (Bx)a =BF x T a, where e, ~ .... are meta-logical variables ranging over the A LESNIEWSKIAN VERSION OF MONTAGUE GRAMMAR 143 sentences of LMG.
Before" taking up the translation of relations, i.e. transitive verbs we have to introduce in advance another translation T 1 which transforms every relation in LMG into a (binary) relation of predicate logic.
The translation T 1 is defined inductively on the number of the relation-forming operators employed for defining the given one.
Starting with the basis: T 1 R = IxlYGR(X, y), where G R is the (binary) relation (of the Dredicate logic) corresponding to the give atomic relation of LMG, induction steps are: T 1 H and S = Ixly(T l R(x, y) A T, S(x, y)), T I E or S = Ixly(Ti R(x, y) ~ T, S(x, y)), T 1 not R = Ixly~Tl R(x, y), T 1 en E = IxlyTi R(y, x) (T1 R and S etc.
will be abbreviated as Go . ~,etc).
On the basis of the translatzon T 1 thus introduced, T is defined for any relation R of LMG as follows: T R = IPIQT 1 R( IxP x, IxQ x), with R( IxP x, IxQ x) being defined as: ~xBy(P x ^ Q y ~ R(x, y)) ~ VxVy(P x ^ P y.O x = y) ^ ~xVy(Q x ^ Q y.
O x = y).
Lastly the translation T is applied to the operators \[ \]i: and \[ \]2in the following vay~ T \[ \]i = ~VIWlx(VlyW(x, y)), T \[ \]2 = ~V~W~y(V~xW(x, y)), where V and W are respectively the variables of the type of noun phrases and (binary) relations in predicate logic.
Availing ourselves of the translation T thus defined, some sample sentences (of LMG) will be translated into the corresponding sentences of predicate logic.
4.11 T 2.11 = T ((the man) walk) = T ((e man) walk) = ((T e T man) T walk) = (IPIQQIxP x) Fman) Fwalk = FwalklXFmanX, 4.14 T 2.14 = T ((every man) \[love (some woman)\]l) = (IPIQ~x(P x D Q x) Fma n) ((~VIWIx(VIyW(x, y~(IPIQ~x(p x A Q x) Fwoman) Glove ) = IQ~(FmanX ~ Q x)Ix(IQ~y(FwomanY A Q y) lyGlove(X, y)) ~X(FmanXO BY(FwomanY A Glove(X' Y)))" As has been exemplified by the above translations we easily obtain: Lemma ~.3 Every sentence of LMG as a language is translated by T into a formula of first-order predicate logic with equality.
Lemma h.4 The translation of the theses of LMG as a logic are provable in predicate logic.
The proof is carried out by induction on the length of the proof.
The treatment of the basis will be illustrated by the following example: 4.~i T 3.02 ~ :T ~(a, b) ~ .(Bx)( ~(x, a)~ ~(x, h)) (x)(y)( c(x, a) ^ ~(x, b).D E(x, y)): :FblXFaX ~ . ~ Fx(FalXFxx ~ FblXFxX)~ VFx~Fy(Fa!xFxx A FalxFyX.
~ FylxFxx): :FblXFa ~ • ~x(Fax ~ FbX) ~ ~xVy(Fax ~ Fay.
~ x = y).
144 A.
ISHIMOTO Here use is ~made of some theses o~ second-o~der predicate logic.
All the other axioms, if translated by T, will turn our to be provable in (higher-order) predicate logic.
The induction steps do not present any difficulties.
In view of Lemmas ~.3 and h.h we obtain, Corollary h.5 If a sentence of LMG as language is a thesis of LMG as a logic, then its T-transform is provable in first-order predicate logic with equality.
It is remarked that the proof of the T-transform of a sentence belonging to LMG as a language might involve formulas not necessarily belonging to first-order predicate logic.
Lastly we wish to state without proof a lemma of fundamental importance, namely, Lemma h.6 If the T-transform of a sentence belonging to LMG as a language is provable in first-order predicate logic with equality, then the sentence is a thesis of LMG as a logic.
This is proved syntactically as well as semantically by the method employed in Ishimoto \[4\].
Combining Corollary ~.5 and Lemma h.6 we obtain, ~L Theorem ~.7 For every sentence ~ of LMC as a language MG e iff T ~ is a thesis of first-order predicate logic with equalty.
In view of theorem h.7 as far as the logical derivability of some sentences of natural language as specified above is concerned, there is no difference between first-order predicate logic and Lesniewski's ontology.
Use will be made, it is hoped, of this fact in the various fields ;elated to the logical analysis of natural language.
*An earlier version of this paper was read before the Australasian Logic Conference, Wellington, 1981.
References Barwise, J.
and Cooper, R., Generalized Quantifisrs and Natural language, Linguistics and Philosophy, 4, 1981, pp.
159-219. Cooper, R.
and Parsons, T., Montague Grammar,&ener~tive Semantics and Interpretive Semantics, in Montauge Grammar, ed.
by B.H.
Partee, New York-San Francisco-~ondon, ~9~&.
Cresswell, M.
J., Logics and Languages, London, 1973.
Ishimoto, A., A Propositional Fragment of Lesniewski's Ontology, Studia Logica, 36, 1977, pp.
285-299. Iwanus, B., On Lesniewski's elementary ontology, Studia Logica, 31, 1973, pp.
73-125. Jirku, P., Towards an integrated theory of formal and natural language, Kybernetika, 11 (2), 1975, pp.
91-100. Eobayashi, M.
and Ishimoto, A., A Propositional Fragment of Lesnie~vsai's ontology and its Formulation by the Tableau Method, forthcoming in Siudia Logica.
Prior, A.
N.,~Existenee in Lesnie~sai and Russell, Formal systems and Recursive Functions, Amsterdam, 1963.
Luschei, E., ~he Logical Systems of Lesniewski, Amsterdam, 1963.
Montague, R., Formal Philosophy, Selected Papers of R.
Montague, New Haven and London, 1974.
Slupecki, J., St.
Lesniewski's Calculus of Names, Studia Logica, 3, 1955, pp.
7-76. Sobocinski, B., Successive Simplifications of the Axioms Systems of Lesniewski's Ontology, Polish Logic 1920-1939, Oxford, 1967 .

