<algorithm name="ParsCit" version="080917">
<citationList>
<citation valid="true">
<authors>
<author>D Jurafsky</author>
<author>J H Martin</author>
</authors>
<title>Speech and Language Processing</title>
<date>2000</date>
<publisher>Prentice Hall</publisher>
<location>New Jersey</location>
<contexts>
<context>e two categorizations proposed by Jurafsky and Megerdoomian. As you can see the general concepts of these two categorizations are the same and even they have categories with the same names. Jurafsky (Jurafsky &amp; Martin, 2000) divides taggers into 3 categories. • Rule-based taggers: In these taggers the tagging process has two phases. In first phase words are looked up in a dictionary and the found tag or tags are assigne</context>
</contexts>
<marker>Jurafsky, Martin, 2000</marker>
<rawString>Jurafsky,D, H.Martin, J. (2000). Speech and Language Processing. Prentice Hall, New Jersey.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Megerdoomian</author>
</authors>
<title>Developing a Persian Part of Speech Tagger</title>
<date>2004</date>
<booktitle>First Workshop on Persian Language and Computers</booktitle>
<location>Iran</location>
<contexts>
<context>o the word. In second phase, which is the correction phase, tagger tries to change the wrong tags by following some rules. These rules concern the words adjacent to the considered word. Megerdoomian (Megerdoomian, 2004, a) categorize tagging algorithms into two groups. • Statistical taggers: These tagging algorithms apply probabilistic methods. They are usually trained by using a tagged corpus. They learn the POS t</context>
<context>m. AS these taggers use the rules defined for them, they are incapable of tagging unknown structures but for the known structures hey usually work accurately. We follow Megerdoomian's categorization (Megerdoomian, 2004, a). To take the advantages of these two algorithms hybrid taggers are suggested. They combine these two methods to reach higher performance and accuracy. Usually at first rule-base taggers are used </context>
<context>system extracts the tokens from the corpus and refers them to tagging module for further processes. There are some rules, concerning writing, that force us to write some parts of the words separately(Megerdoomian, 2004, b). To extract the words correctly from the corpora we should consider these rules. Bellow we mention some of these rules that are applied in our system. • &amp;quot;یم &amp;quot; (mi) which appears in the beginning </context>
</contexts>
<marker>Megerdoomian, 2004</marker>
<rawString>Megerdoomian,K. (2004). Developing a Persian Part of Speech Tagger, First Workshop on Persian Language and Computers, Iran.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Kalbasi</author>
</authors>
<title>The derivational Structure of Word in Modern Persian, Institute for Humanities and Cultural studies</title>
<location>Tehran, Iran</location>
<marker>Kalbasi, </marker>
<rawString>Kalbasi,I.(2001), The derivational Structure of Word in Modern Persian, Institute for Humanities and Cultural studies, Tehran, Iran.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Anvari</author>
<author>Ahmadi givi</author>
<author>H</author>
</authors>
<date>1997</date>
<booktitle>Persian Grammar, 2nd ed</booktitle>
<volume>2</volume>
<location>Fatemi, Tehran, Iran</location>
<marker>Anvari, givi, H, 1997</marker>
<rawString>Anvari, H., Ahmadi givi, H. (1997). Persian Grammar, 2nd ed., vol. 2, Fatemi, Tehran, Iran.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Megerdoomian</author>
</authors>
<title>Finite-State Morphological Analysis of Persian, Coling</title>
<date>2004</date>
<institution>University of Geneva</institution>
<contexts>
<context>o the word. In second phase, which is the correction phase, tagger tries to change the wrong tags by following some rules. These rules concern the words adjacent to the considered word. Megerdoomian (Megerdoomian, 2004, a) categorize tagging algorithms into two groups. • Statistical taggers: These tagging algorithms apply probabilistic methods. They are usually trained by using a tagged corpus. They learn the POS t</context>
<context>m. AS these taggers use the rules defined for them, they are incapable of tagging unknown structures but for the known structures hey usually work accurately. We follow Megerdoomian's categorization (Megerdoomian, 2004, a). To take the advantages of these two algorithms hybrid taggers are suggested. They combine these two methods to reach higher performance and accuracy. Usually at first rule-base taggers are used </context>
<context>system extracts the tokens from the corpus and refers them to tagging module for further processes. There are some rules, concerning writing, that force us to write some parts of the words separately(Megerdoomian, 2004, b). To extract the words correctly from the corpora we should consider these rules. Bellow we mention some of these rules that are applied in our system. • &amp;quot;یم &amp;quot; (mi) which appears in the beginning </context>
</contexts>
<marker>Megerdoomian, 2004</marker>
<rawString>Megerdoomian, K. (2004). Finite-State Morphological Analysis of Persian, Coling 2004, University of Geneva. August.</rawString>
</citation>
</citationList>
</algorithm>

