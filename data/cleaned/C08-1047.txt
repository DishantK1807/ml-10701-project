Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 369–376
Manchester, August 2008
Contents Modelling of Neo-Sumerian Ur III Economic Text Corpus
Wojciech Jaworski
Institute of Informatics
Warsaw University
Banacha 2, 02-097 Warsaw, Poland
wjaworski@mimuw.edu.pl
Abstract
This paper describes a system for process-
ing economic documents written in the an-
cient Sumerian language. The system is
application-oriented and takes advantage
of the simplicity of ancient economy. We
have developed an ontology for a selected
branch of economic activities. We trans-
late the documents into a meaning repre-
sentation language by means of a semantic
grammar. The meaning representation lan-
guage is constructed in a way that allows
us to handle massive ambiguity caused by:
the specifics of the Sumerian writing sys-
tem (signs’ polyvalence, lack of mid-word
signs), our incomplete knowledge of the
Sumerian language and frequent damages
of documents. The system is augmented
with the capability of processing docu-
ments whose parts describe concepts not
included in the ontology and grammar. As
an effect we obtain a structural description
of the documents contents in the mean-
ing representation language, ready to use
in historical research.
1 Introduction
Sumerians lived from prehistoric times until late
3rd millennium BC in lower Mesopotamia (mod-
ern Iraq). Sumer was the first highly developed ur-
bancivilisation,whichusedcuneiformscript. Dur-
ing the period of the 3rd dynasty of Ur (2100 BC-
2000 BC), whose power extended as far as present
c©2008. Licensed under the Creative Commons
Attribution-Noncommercial-Share Alike 3.0 Unported li-
cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.
Iraq and western Iran, the state introduced a cen-
trally planned economy with an extensive bureau-
cratic apparatus.
Civil servants reported on clay tablets agri-
culture and factory production, lists of worker
salaries, summaries of executed work, distribution
of commodities, goods, animals etc., lists of sac-
rificed animals, travel diets and other economical
information.
Archaeologists dug out about 100000 of tablets
from that period (known also as the Neo-Sumerian
period). The corpus of 44365 tablets (as of March
26, 2008) is available in electronic version in the
database of Cuneiform Digital Library Initiative
(CDLI, 2006), run by the University of California
in Los Angeles and Max Planck Institute for the
History of Science. Tablets are stored in the form
ofLatintransliteration, oftenaccompaniedbypho-
tographs or drawings (which are irrelevant for us).
Economic documents are an essential source of
information about ancient Sumer. The corpus con-
tains crucial information about economic, social
and political history of the state, as well as its po-
litical system and administration structure. The
sources of this type provide the most complete in-
formation about the daily life of those days. For
more information about the economy of the Ur III
kingdom see for example (Stepien, 1996; Shar-
lach, 2004; Steinkeller, 1987).
As more and more Neo-Sumerian economic
documents were published, the problem arose of
searching for documents relevant to the investi-
gated topic, and the problem of representing the
content of a large number of documents in a con-
cise way.
As a solution to these problems we propose
a knowledge base, that would assist in prosopo-
graphic (identification of Sumerian officials), his-
369
Figure 1: An example of a transliterated cuneiform tablet from Ur III
&P123831 = OIP 121, 101
tablet
obverse
1. 1(disz) sila4 ur-mes ensi2 1 lamb Urmes governor
2. 1(disz)# sila4 da-da dumu lugal 1 lamb Dada son of king
3. 1(disz)# sila4 id-da-a 1 lamb Idda
reverse
1. u4 2(u) 3(asz@t)-kam Day 23
$ 1 line blank
3. mu-DU delivery
4. ab-ba-sa6-ga i3-dab5 Abbasaga received
5. iti sze-KIN-ku5 month sze-kin-ku5
6. mu en {d}inanna ba-hun Year when high priest of goddess Innana
left was elevated to office
1. 3(disz) 3
torical and philological research. For our studies,
we selected a subcorpus of 11891 documents con-
cerning distribution of domestic animals.
The design of our system was determined by
two factors: the characteristics of the underlying
corpus and and the functionality needed by histo-
rians who are end-users of the system.
We developed an ontology for the selected sub-
corpus. Itdeterminsthestructureoftheknowledge
base. It also defines the components of the mean-
ingrepresentationlanguage, whichweuseforstor-
ing data in the knowledge base.
We translate the documents into the meaning
representation language by means of a semantic
grammar. The grammar has the strength equal to a
regular language. Grammar symbols are equipped
with semantic values that carry information in-
cluded in the texts. Semantic values are generated
during the parsing process by means of semantic
attachments to grammar symbols.
The meaning representation language is con-
structed in a way that allows it to handle ambi-
guities caused by: the inherent ambiguity of the
Sumerian writing system (signs’ polyvalence, lack
of mid-word signs), our incomplete knowledge of
the Sumerian language and frequent damages of
tablets.
The system is augmented with the capability of
processing documents whose parts describe con-
cepts not included in the ontology and grammar.
We keep the ontology itself small (circa 30 con-
cepts) because we include in it only concepts that
are commonly found in documents. This approach
is determined by the needs of the intended users:
historians need a structural representation for typi-
cal information contained in the documents, which
would provide insight into the structure and ac-
tivity of Sumerian administration and analyse it
by means of statistical methods; rare, untypical
phrases are thoroughly examined and interpreted
manually.
The paper is organised as follows: In Section
2 we describe the Neo-Sumerian Ur III Economic
Text Corpus. In Section 3 we present the ontol-
ogy for documents. In Sections 4, 5, 6 we define
accordingly: the meaning representation language,
grammar, representation semantic values of gram-
mar symbols and semantic attachments. In Section
8 we show how to extract transaction descriptions
from the documents. In Section 9 we present ap-
plications of the system. Section 10 draws conclu-
sions.
2 Ur
III text corpus
Sumerian writing system was like a rebus, with-
out punctuation signs, also with large amount of
polyvalential signs. According to the rule of poly-
valence one sign could, depending on the context,
bereaddifferently. ForexampletheDUsignmean-
ing—aleg, couldhavealsoothertranslationslike:
gin — to go, gub — to stand straight, tum2 —
to bring, etc.
Phonetical values of signs are most often sin-
gle syllables. Simple words are written by single
ideograms equipped with phonetically written af-
fixes. More complicated terms can be represented
by combinations of multiple signs. Due to lack
of mid-word signs and agglutinative character of
the Sumerian language, it is hard to identify if we
read a word or a phrase, and define its borders in
the text. For more information about the Sumerian
language see (Labat and Malbran-Labat, 1988).
The fact that administrative documents are writ-
ten in bureaucratic language which is full of nota-
370
Figure 2: Ontology of Sumerian economic text corpus
tion abbreviations, lacks most of grammatical af-
fixesanddoesnothaveuniformedspellingfornon-
Sumerian words, makes the situation even more
complicated.
Texts are often physically damaged. Dam-
ages can concern one or many following signs.
Sometimes many following lines are illegible. In
the transliterations damages are marked by spe-
cial symbols or descriptions in English, German,
French, etc., depending on translator’s nationality.
Fig. 1 presents the contents of a typical Sume-
rian document. This documents reports the trans-
fers of lambs from 3 people to ab-ba-sa6-ga,
an official of the Ur III state. They took place in
the 23th day of the month sze-kin-ku5 in the
year when the high priest of goddess Innana was
elevated to office.
3 Ontology
As we mentioned above, we examine the subcor-
pusofdocumentsconcerningdistributionofbreed-
ing animals. The distribution was organised in
the form of transactions. During each transaction
one Person, called Supplier, transfers a Num-
ber of animals to another Person, called Receiver.
Animal description consists of information like:
species, age, gender, fodder, etc. Person is de-
scribed by means of his/her Name, Filiation, Job
and/or Nationality. Apart from the Supplier and
Receiver, other Persons might have assisted in the
transaction:
giri3 PN Middleman between Supplier and and
Receiver
mu-DUPNPersononwhoseaccountthetransac-
tiontookplace, ReceiverisprobablyMuDu’s
representative
mu PN-sze3 Person in whose name the Receiver
or Supplier acted.
kiszib3 PN Person who sealed the document
PN maszkim Overseer of the transaction
bala PN Person who provides goods as royal tax.
The roles are named after the Sumerian phrases
used to introduce them PN states for Personal
Name), their meaning is still studied by sumerol-
ogists. One of applications of our research is to
provide more facts on their meaning.
There are a few kinds of Summaries of various
animal types in the documents, denoted by con-
cepts: Szu Lagab, Szu Nigin as well as single
Number. Dates of transactions are also provided.
371
Figure 3: The semantics of text. Observe the use of domain knowledge and the representation of am-
biguous semantics for year name.
Number(q1,1) ∧Animal(a1,sila4) ∧Name(n1,ur-mes) ∧Job(j1,ensi2)∧
∧Person(m1,n1,j1) ∧Supplier(s1,m1) ∧NumberAnimalName(nam1,q1,a1,s1)∧
∧Number(q2,1) ∧Animal(a2,sila4) ∧Name(n2,da-da) ∧Job(j2,lugal)∧
∧Person(m2,j2) ∧Filiation(f1,dumu,m2) ∧Person(m3,n2,f1) ∧Supplier(s2,m3) ∧NumberAnimalName(nam2,q2,a2,s2)∧
∧Number(q3,1) ∧Animal(a3,sila4) ∧Name(n3,id-da-a) ∧Person(m4,n3) ∧Supplier(s3,m4) ∧NumberAnimalName(nam3,q3,a3,s3)∧
∧NumberAnimalNamelist(l1,nam1,nam2,nam3)∧
∧Day(d1,23)∧
∧Delivery(del1)∧
∧Name(n4,ab-ba-sa6-ga) ∧Person(m5,n4) ∧Receiver(r1,m5)∧
∧Month(month1,12)∧
∧`Year(y1,AS5) ∨Year(y1,IS4)´∧
∧Number(q4,3) ∧Summary(s1,q4)∧
∧Document(t1,l1,d1,del1,r1,m1,y1)
The dependencies between concepts have
meronymicalnature. Theywitnessthefactthatone
object is a part, property, attribute or description of
another one. Fig. 2 presents the diagram of depen-
dencies between concepts.
Animals, roles and dates are transaction at-
tributes. Yet, often one document describes many
transactions and their common attribute values are
written only once in the document. As a result,
transactions are entangled and the individual trans-
action do not appear explicitly until the very last
phase of processing.
4 Meaning
representation language
The meaning representation language represents
conceptsincludedinthedataanddependenciesbe-
tween them. Syntax of the language is defined as
follows: We have a set of constants and a set of
predicate names. Constants play the role of labels
for entities described in the data. Predicates con-
sist of lists of one or more arguments. Number of
arguments for a given predicate is not fixed. Predi-
cates represent relations on finite sequences of en-
tities. Names of most predicates are identical to
the names of the related ontological concepts. The
first argument of a predicate is an object which be-
longs to the ontological concept denoted by predi-
cate name.
Predicates are atomic formulas. Compound for-
mulas are composed of one or more atomic formu-
lae connected by conjunctions and/or disjunctions.
We do not use quantifiers, functions and negation.
Fig. 3 we provide our example tablet writ-
ten in formal language. Number, Animal,
Name, Person, Receiver, Year, Document,
etc. denote corresponding ontological categories.
q1,q2,a1,m1,del1, etc. represent objects de-
scribed in the text.
For example:
• Day(d1,23) means that d1 is a Day and its
number is 23.
• Name(n1,ur-mes) means that n1 is a Name
written as ur-mes.
• Job(j1,ensi2) means that j1 is a Job called
ensi2.
• Name(n1,ur-mes) ∧ Job(j1,ensi2) ∧
Person(m1,n1,j1) means that n1 is a Name
written as ur-mes and j1 is a Job called
ensi2 and m1 is a Person described by n1
and j1.
• NumberAnimalName(nam1,q1,a1,s1)
refers to the triple of Number, Animal
and Supplier referenced by q1,a1,s1 and
represented by nam1.
• Year(y1,AS5)∨Year(y1,IS4) means thaty1
is 5th Year of reign of king Amar-Sin or 4th
Year of reign of king Ibbi-Sin.
5 Syntax
analysis
From the linguistic point of view, an economic
document is a single sentence, whose length may
vary from below 50 up to more than 5000 signs.
The documents from the subcorpus are in general
words of a regular language. Connections between
words and phrases are determined by their posi-
tions in text. Taking this into account we decided
toperformthesyntaxanalysisbymeansofagram-
mar that generates a regular language.
We use semantic categories (such as divine
names, personal names, job names, year names
etc.) to describe dependencies between words.
Apart from describing word connections, grammar
playstheroleofalexiconandisusedfordetermin-
ing word borders.
372
Morphological analysis is not needed, due to the
agglutinative character of Sumerian and absence
of most grammatical suffixes in economic docu-
ments.
We define the grammar as follows:
G = (Σ,N,XI,R,+,≺)
where
• Σ is a finite set of terminal symbols,
• N is a finite set of non-terminal symbols.
• XI ∈ N is the start-symbol of G.
• R is a finite set of production rules. Each pro-
duction has the form A → α or A → β+,
where A is a non-terminal and α is a se-
quence of terminals and non-terminals and
β ∈ Σ ∪ N. A → β+ is a shortcut for an
infinite set of rules: A → β,A → ββ,A →
βββ,.... We call such rules accumulation
rules.
• ≺isbinaryrelationonΣ∪N suchthatA ≺ B
if and only if there is a rule A → α in R
such that B belongs to α or there is a rule
A → B+.
• ≺ is an irreflexive and transitive partial order.
This guarantees that G is recursion-free and
generates a regular language.
We will call every subsequence parsed to a
grammar symbol a phrase.
Proposition 1 Language L can be generated by a
grammar of the form defined above if and only if L
is regular.
Namesofthesymbolsinthegrammarreflectthe
concept names. Example rules:
Head Body
Name ::= ur mes
Person ::= Name Job
Person ::= Name
Person ::= Job
NumberAnimal ::= Number Animal
NumberAnimalList ::= Animal +
We represent all the possible derivation trees for
a given text and grammar by means of a directed
acyclic graph whose edges are labelled by gram-
mar symbols. We call it a chart.
The text is a sequence of signs. We represent
this sequence as an oriented graph which is a list
withsignsasedges. Verticesofthisgrapharenum-
bers pointing to the position in text. Then for each
rule we find all paths in the graph with sequences
of edge labels that match the body of the rule, and
add to the graph new edges from the beginnings
to the ends of those paths, and label them with the
rule head. We will denote an edge labelled α from
vertex i to vertex j by αi,j.
6 Semantic
analysis
In case of an ambiguous grammar (as in our case),
the number of possible syntax derivation trees may
beexponentialinthesequencelength. Theconcept
of chart is intended to be their common, compact
representation. The number of possible seman-
tic values of the sequence is equal to the number
of syntax derivation trees. That is why we can-
not represent them directly. Instead, we distribute
the semantic values across the chart. Our method
resembles to the approach known in the literature
as Minimal Recursion Semantics (Copestake et al.,
1999)
The formulas of the meaning representation lan-
guage are spread across the chart. Consider the
edge αi,j of chart. This edge was created as the
result of parsing a phrase. The phrase describes
an entity. We represent this entity by means of a
constant aα,i,j. We describe its properties derived
from the phrase by the formula of meaning repre-
sentation language. Such a formula is composed
out of constants which represent entities and pred-
icates that describe syntactic structure connecting
them. We name this formula the semantic value of
the grammar symbol and denote it as [[α]]i,j.
The formula [[α]]i,j has the following structure:
nlogicalordisplay
k=1
pk(aα,i,j,aαk
1,ik1,jk1,...
...,aαkm
k,i
km
k,j
km
k
)∧
mklogicalanddisplay
l=1
[[αkl ]]ik
l ,j
k
l,
where αkl are labels corresponding to the symbols
in the body of the rule used to create the edge αi,j.
Each [[αkl ]]ik
l ,j
k
l
is assigned to the edge αkl ik
l ,j
k
l, so
only the set of atomic formulae
{p1(aα,i,j,aα1
1,i11,j11,...,aα1m
k,i
1m
k,j
1m
k
),...
...,pn(aα,i,j,aαn1,in1,jn1 ,...,aαnm
k,i
nm
k,j
nm
k
)}
must by associated with graph edge on the imple-
mentation level. Semantics for a terminal symbol
αi,j is a one-argument predicate whose name is α
and whose argument is variable aα,i,j.
373
Figure 4: Chart
Figure 5: Semantic values of grammar symbols
[[Name]]4,6 = Name(aName,4,6,aga,4,5,amu,5,6)∧[[ga]]4,5 ∧[[mu]]5,6 =
= Name(aName,4,6,aga,4,5,amu,5,6)∧ga(aga,4,5)∧mu(amu,5,6)
[[NumberAnimalName]]1,6 =
parenleftbigNumberAnimalName(a
NumberAnimalName,1,6,aNumberAnimal,1,3,aName,3,6)∧[[NumberAnimal]]1,3∧[[Name]]3,6
parenrightbig∨
∨parenleftbigNumberAnimalName(aNumberAnimalName,1,6,aNumberAnimal,1,4,aName,4,6)∧[[NumberAnimal]]1,4∧[[Name]]4,6parenrightbig
On Fig. 4 we present an example a chart. The
names of predicates associated with the grammar
symbols are usually identical to their names. The
first argument of each predicate is a constant that
represents an entity described by the phrase. In-
dices of this constant identify the edge into which
this phrase was parsed.
On Fig. 5 we show semantic values for some
of the edges for chart on Fig. 4. For exam-
ple the semantic value of the edge Name4,6 (de-
noted as [[Name]]4,6) is calculated to be the for-
mula Name(aName,4,6,aga,4,5,amu,5,6), because the
constant aga,4,5 refers to the edge ga4,5 and amu,5,6
to mu5,6.
Ambiguous phrases may be parsed to a num-
ber of predicates. Each predicate generated for
a given subsequence is a possible description
of an entity. That is why we point that en-
tity by the same constant in each predicate (con-
sider for example semantic value of an edge
[[NumberAnimalName]]1,6).
We connect different possible subsequence in-
terpretations using disjunction. Domain knowl-
edge provides constraints on relations. These con-
straints may, for example, make the disjunction
mutually exclusive.
We represent the semantic value of a symbol
generated by an accumulation rule as a graph,
whose vertices are constants that are arguments of
the predicate. Each path from the first to the last
374
vertex in such a graph represents a list of predi-
cate arguments. The predicates are connected by
disjunction.
Semantic values of grammar symbols are con-
structed using semantic attachments of grammar
rules. Semantic attachments are functions that
compose semantics of greater objects out of the se-
mantics of smaller ones. Predicate sets associated
with edges of chart are arguments and values for
these functions.
Upon the end of the parsing process we obtain
an edge labelled by the start symbol of the gram-
mar. Itssemanticvalueisaformulawhichcontains
every possible translation of the entire text into the
meaning representation language.
There are three types of rules that occur during
the corpus processing:
• Rules that make up the lexicon
Name ::= ur mes
Name(varName,varur,varmes)
• Rules that describe the document structure
Person ::= Name Job
Person(varPerson,varName,varJob)
Person ::= Name
Person(varPerson,varName)
Person ::= Job
Person(varPerson,varJob)
• Rules that introduce domain knowledge
(numbers, year names etc)
YearGod ::= d inanna
{AS04(varYearGod),AS05(varYearGod))}
Year ::= mu en YearGod Verb
{p(varYear) : p ∈ valYearGod ∩ valVerb}
varName is a variable, whose index is an edge la-
belled by the symbol Name. valYearGod is a set
of predicate names connected with the symbol
YearGod.
7 Incomplete
ontology and damaged
documents
In every corpus, there is a number of phrases that
cannot be expressed using concepts typical for that
corpus. These phrases are rare, irregular and de-
void of characteristic contexts.
In order to obtain completely parsed documents
we must develop a semantic representation for
documents we partially do not understand. We
close the ontology with the Other Information
concept, which is treated as a transaction attribute
and refers to information not included in the rest of
concepts.
Parser recognises phrases it does not under-
stand using the following heuristics: Boundaries
of transaction attributes are correlated with verse
boundaries. If the parser does not recognise the
content of a verse it decides that this verse contains
Other Information.
Apart from being not understood the texts are
oftendamaged. Thereareseveraltypesofdamages
in documents.
When a single sign is illegible, it is denoted in
the document as x. The parser considers the x
symbol as a wildcard that may be matched with
any terminal symbol.
When a part of a verse is broken, it is denoted in
the document by [...]. We estimate the number
of signs in the broken verse counting the number
of signs in the other verses in the document. Then
we replace the [...] symbol by a sequence of x
symbols.
We do not estimate precise contents of broken
phrases, we only determine their role in the docu-
ment and ontological category. This allows us to
avoid combinatorial explosion while parsing dam-
aged documents.
When a whole verse or a number of verses is
broken we assume that they have syntactic struc-
ture of a typical verse or contain Other Informa-
tion.
8 Transaction
Extraction
After performing the semantic analysis we know
the concepts used in the document, its topic and
structure. Now, we extract transactions from the
documents.
Transactions extracted from our example docu-
ment (Fig. 1) are presented on Fig. 6. Extracted
transactions are are represented as edges of chart
and they compose a formula of meaning represen-
tation language. For unequivocal tablets this for-
mula is a simple conjunction of transaction predi-
cates, whilst ambiguous documents provide trans-
actions which are connected by conjunction and
disjunction as well.
While extracting transactions, we analyse docu-
ment summaries: we correlate the number of ani-
mals with their quantity written down in the docu-
ment summary. This allows us to reduce the num-
ber of ambiguities generated by document dam-
ages and specifics of writing system.
We extracted 68619 transactions from the se-
lected subcorpus with precision 86% and recall
90%.
375
Figure 6: Transactions described in the text (already with resolved Year ambiguities).
Date Number Animal Supplier Receiver
23-11-AS05 1 sila4 ur-mes ensi2 ab-ba-sa6-ga
23-11-AS05 1 sila4 da-da dumu lugal ab-ba-sa6-ga
23-11-AS05 1 sila4 id-da-a ab-ba-sa6-ga
9 Applications
Our methodology proved its usefulness in several
applications.
The first, simple, but powerful and needed ap-
plication is document retrieval. The system allows
us to retrieve documents that satisfy queries con-
cerning concepts and structure of the texts.
It is worth mentioning that due to the script
polyvalence, text damages and editor records
mixed with Sumerian text, matching a sequence of
signs in a document is not a trivial task.
Using the transaction based knowledge repre-
sentation we found pairs of documents that contain
information about the same transaction. This task
is important due to the fact that this is the way to
follow the distribution process and administration
activity.
The system provides help also in the tasks of:
identification o Sumerian officials (prosopogra-
phy); determining relations between Sumerian of-
ficials in terms of number of commodities that are
transferredbetweenthem; classificationoftypesof
documents generated by Sumerian administration;
research on Sumerian language itself.
10 Conclusions
We presented an ontology driven methodology for
processing Sumerian economic documents. We
applied it with a success to sumerological research
problems.
We plan to extend the ontology, grammar and
lexicon so that the system could process the whole
corpus of Neo-Sumerian economic documents. It
willallowustoconstructionofthemodelofSume-
rian economics. We will estimate the contents of
unavailable documents be means of statistic based
approximation and machine learning methods.
Language characteristics have little influence on
the system construction, so nothing prevents the
system form being applied to narrow subject mat-
ter corpora written in other languages. Especially
the problems of incomplete ontologies and partial
data (caused for example by damages done to doc-
uments) are independent from the language char-
acteristics.
Acknowledgements
I would like to thank Jerzy Tyszkiewicz for the
inspiration in my work. I would also like to thank
Marek St˛epie´n for the support with his knowledge
of Sumerian language.
The research has been supported by the grant
N-N206-400234 from Ministry of Science and
Higher Education of the Republic of Poland.
References
Copestake, A., D. Flickinger and A. Sag. 1999. Min-
imal recursion semantics: An introduction. CSLI,
Stanford University.
Cuneiform Digital Library Initiative, The. 2006.
http://cdli.ucla.edu.
Jaworski, W. 2006. Learning Compound Decision
Functions for Sequential Data in Dialog with Ex-
perts. In: S. Greco et al. (Eds.) Proc. RSCTC 2006,
LNAI 4259, Springer, pp. 627-636.
Jurafsky, D., J. H. Martin. 2000. Speech and Language
Processing: An Introduction to Natural Language
Processing, Computational Linguistics, and Speech
Recognition. Prentice-Hall.
Labat, R., F. Malbran-Labat. 1988. Manuel
d’epigraphie akkadienne Signes, Syllabaire,
ideogrammes, 6th edition. Geuthner (Librarie
Orientaliste Paul Geuthner S.A.).
Sharlach, T.M.2004. Provincial Taxation and the Ur III
State. Leiden-Boston.
Steinkeller, P. 1987. The Administrative and Economic
Organization of the Ur III State: The Core and the
Periphery. In: R.D. Biggs, Mc.G. Gibson (Eds.) The
OrganizationofPower: AspectofBureaucracyinthe
Ancient Near East. SAOC 46, Chicago, s.19-41
St˛epie´n, M. 1996. Animal Husbandry in the Ancient
Near East: A Prosopographic Study of Third-
Millennium Umma. Bethesda, Md. : CDL Press.
376

