A PARLOG Implementation of Government-Binding Theory Robert J.
Kuhns 205 Walnut Street Brookline, MA 02146 USA ABSTRACT Tile purpose of this paper is to report on research on a parallel parser based on the principles and constraints of GovernmentBinding Theory.
The parser outputs a set of licensing relations, notably thematic or 0-role assignments and antecedent/anaphor and other binding relationships, The primary goal of the system ix as a liaguistics tool for exploring concurrency and autonomy among ir~odules of tile theory.
BACKGROUND Parse,'s based oil Government-Binding (GB) Theory have been tile subject of a nunlber of research progranlmes.
~ While they all share a colllnlon linguistic framework, the design goals and underlying parsing strategies are varied.
Some are tools for ewduating competence and/or performance models of language and others remain neutral with respect to psychological reality.
The parsing engines range from bottom-u p to top-dow n to in ix nlode methods and fronl backtracking to deterministic algorithms.
Howe\er, they all approach parsing as a sequential process, and allhough there have been a number o\[' efforts oil parallel parsing (of.
/I.\[uang and Guthrie 1986/, /Matsmnoto 1986/, and/Waltz and Pollack 1985/), few are linguisticallyoriented and none arc GB-based.
Since GB is a highly modular system of components, development of parallel parsers incorporating the theory allows for a t'cmnal examination into the computational aspects of GB-modules and their interfaces.
SCOPE AND OBJECTIVES In oMer to explore ttle relationsllips between GB-subsystems and their realization in a parallel parser, a development goal is one of modularity ill that each GB.-module should be transparently encoded.
2 This
perlnits investigation of processes within and across GI:~ components to be made explicit, Since the focus of tile parscr is on GB principles and since GB itself is a theory of core gralnmar, file coverage of the parser is restricted to a subset of English that reflects syntactic processes explained by the theory.
While it may be premature to speak of psychologically-real parallel parsers, many of the cognitive presuppositions that are the basis of the work of/Berwick and Weinberg 1984/./Marcus 1980/, and/Milne 1983/have been the motivation for several of the design decisions that have been incorporated in the system.
More specifically, the parser is deterministic and has the capability of delaying certain actions, e.g., projection of nodes and resolution of lexical ambiguity, until more information is available, rather than computing competing parses or backtracking uncontrollably.
These features together with the goal of transparent representation of GB principles should provide a foundation for future research into tile cognitive plausibility of parallel parsers.
AN IMPLEMENTATION NOTE The parser is being developed in PC-PARLOG: requiring an IBM PC, XT, AT or compatible machine with tit least 512Kb of memory and two floppy disk drivcs or a hard disk.
Although tile inlplenlentation sinmlates para!lelism by atin~esharing scheduler, tile parser run~ on a single processor nlachinc and, therefore, lacks true parallelism, ttowever, insofar as the purpose of the parser is to specify concurrency of G13-subsystems at a high level of abstraction, tile analyses are in ternls of compulalional processes rather than processors.
As parallel haMware becomes tnore readily available, a valuable By-product of this research is that tile system coukl be ported to parallel logic machines with little or no additional elTort.
PARLO(i PARLOG t'q~arallel Logic '+) is a parallel declarative programmmg language based on logic (/Con lon 1989/, /Gregory 1987/, and/Shapiro 1988/).
"File basic fornl of a clause is (I) head <-guard: body where tile head is a goal r(tl..... tn) and both guard (optiomfl) and hod)(obligatory) are conjunctions of goals.
Each procedure nlust be preceded by a mode declaration specifying input (')? and output (A) arguments.
Sequential a xl para lel co lit lctio a (AND) and sequential and parallel disjunction (OR) are represented by "'&", ",", "';", "'.", respectively.
THE PARSER The parser combines top-dov, n and bottom-up strategies and recovers a set of licensing relations directly; phrase structure is considered derivative and is not cornputed.+ The basic operations rely on the current governing category as the left bounded context and are deterministic in the sense that once a node is typed or licensed it cannot be altered.
The output of the parser is a constructed list of structures (2) CP = lcp(C(mlplementizer),ext arg(Subject), infl(lnfl elenlent),predicate(Verb), int arg 1 (Object 1 ),int arg 2(Object 2), indirecL.arg(PP) l, where cp represents the complementizer phrase, Ihe head of the CP or S-bar, inll denotes the inflectional elemenl, tile head of S, and predicate is tile verb.
Tile struclures ext_arg, int_arg_l, and int__arg 2 are tile arguments of the verb, the lirst being the external argument (subject) and the last two being tile (direct) internal arguments (objects).
The indireet_arg is a prepositional phrase (PP) that a verb may license and there may be several of these structures depending on the lexical specifications of the verb.
While the cp, ext_arg, infl, and predicate are obligatory, the internal and indirect arguments Irre contingent upon the 0-grid of the verb and, therefore, are optional.
The basic objects of the system are nodes where a node is a structure of the form xp(Word,x_bar(Features),lndex).
Word is a lexical item, an empty category PRO, trace, or variable, or an empty complementizer or inflectional element, and Featm'es represents the type of the node in terms of x-bar features_+N,_+V.
Every node receives a unique index unless it is bound (coindexed) to another via Binding or Control Theory.
Each of the terms of (2) are nodes except for the arguments which are a list of nodes that represent the specifier, head, and complement structures.
Specifiers may be determiner or adjectival phrases, and complemeuts may be PPs or, in the case of retative clauses, a CP, which would be reflected in another list whose structure is analagous to (2).
THE LEXICON In accordance with GB Theory, the lexicon plays :t cent,'al role.
Each lexical item contains the idiosyncratic features of the lexeme and they direct many actions of the parser.
The lexicon is a database of PARLOG assertions which may be searched in parallel.
A small subset of the lexicon is (3) mode lexeme(item?,x_bar ^, feature^).
a. lexeme(man, \[x_bar(nl,vo) l,\[pl(men)\]).
b. lexeme(put, \[x_bar(no,v l)\],\[...,s(puts), ing(putting), 0-grid(int_arg_ 1, locative_PP),, i.\] ).
c. lexeme(plan, \[x._bar(no,v l),x bar(n l,vo)\], \[ .... 0-grid (proposition), tenseless,subject control,...
\] ).
The first te,'m of each lexeme is the lexical entry and the second term is a list of structures of the form x bar(F I,F2), where F 1 and F2 are x-bar primitives, _+N, +_V, with "l" and "0" denoting "+" and "-", respectively.
Lexically ambiguous items, e.g., (3)c., have more tlmn one x-bar structure.
The third term is a list of symbols and structures that depend on the lexical item and its type, i.e., x-bar features.
For instance, as (3)a.
illustrates, nouns (x_bar(nl,vo)) have a plural form as It member in their list of features while verbs (x bar(no,vl )) have morphological derivatives, e.g., participial forms or ing, in their features list as (3)b.
shows. Verbs also have 0-grids which characterize argument structures and other features indicating specifics of complement structure such as tenseless (infinitival) subcatcgorizations or control criteria, e.g., subject_control ((3)c.)".
In the currant version of the parser, derivational morphology is minimal.
THE PARSING ENGINE The basic actions of tile parser lrre to identify gaps, to construct maximal projections, and to license these projections, and these are encoded by tile respective procedures, detect gap, project, and license.
The parsing loop is called recursively until tile sentemial input, a list, is exhausted.
During a parse, governing categories are produced and used as left-bounded context for" certain procedures before being shunted to the list that will ultimately represent the output.
GB MODULES The GB-modules of Trace, Binding, Control, and Bounding Theories are incorporated in the parser, especially in goals detect_gap and license.
Detect_gap identifies the presence, if any, of an implicit elemeut.
This may be an argument, viz., trace, PRO, or variable, or a non-lexical item, viz., an empty complementizer or inflectional element.
A fi'agment ~' of the PARLOG code for detect_gap is (4) mode detect gap(sentence?,gov__cat^,empty_cat^).
a. detect_gap(\[WordlWords\],Gov cat,Empty cat)<-passive_morphology(Word,Gov cat): Empty_cat = trltce.
b. detectgap(\[ WordlWords\],Gov_cat,Empty cat )<--Word = to,subjectless inf comp(Gov cat): Empty_cat = pro.
Tile first relation has a guard to determine if the current word has passive morphology.
In formally, the guard passivemorphology checks the inflectional element of the CtuTent governing category fro" a form of BE and, in parallel, determines if the current word is a verb ot'the passive form.
If the guard succeeds, then the output substitution is complete with Empty_eat being unified with trace.
In (4)b., the guards provide checks with the current token (Word) and governing category for the features of the verb and possible presence of an overt subjec~ in order that detect gap may detect a PRO.
The rest of the specifications for detect gap have similar strategies for finding variables and empty inflections and complementizers.
Each of these clauses are computed in parallel together with one that determines an absence of an empty category in tile current position of the sentence.
The next goal in parse is project, which constructs a maximal projection, xp(ltem, Type).
In the case that Item is lexicalty ambiguous, project has calls to lexical disambiguation routines which are invoked in parallel to attempt a resolution.
The goal license indexes and assigns 0-roles to arguments of predicates.
Binding Theory (/Cllomsky 1981/) has three principles, frequently labeled A, B, and C m the GB literature, that specifyco-indexation procedures for irnaphm's, pronominals.
and referential (R-) expressions, respectively.
Since the principles are independent, they are canclidates for parallel execution.
Thus, Binding is specified in the system as (5)mode binding(proj?,gov_cat?,indexed_proj^).
binding (Proi,Gov cat,lndexed_proj) +i s anaphor( Proj ): principle a(Proj,Gov cat, Indexed_proj).
binding(Proj,Gov cat, Indexed proj) +-i s pronom in a l ( Proj ): principle_b(Proj,Gov cat, ludexed_pmj).
bi nding(Proj,Gov_cat,lnde xed_pmj) +-is r_cxp(Proj): principle c(Proj,Gov_caI, Indexed proj).
The purpose of the guards is to determine tile argument type of a particular argument (Proj) which then invokes a call tn a specific method of indexing in accordance with Binding Theory.
(There is a numerical indexing scheme that is embedded in each principle).
The result of binding is a node, Indexed_proj, that has an index associated with it.
The other major part of license is the assigmnem of 0-roles.
The parser assigns 0-roles to the respective arguments of the predicates based on their 0-grids.
Tile binding and ()-assignment procedures together comprise the licensing procedure.
Their communication channels are being explored and stream AND parallelism appears promising.
395 AN EXAMPLE For the sentence (6) John was persuaded to leave.
the parser produces (7) \[cp(emp,cp, 1 ), ext_arg(john,x_bar(n l,vo),2), infl(was,infl,3), predicate(persuaded,x_bar(no,v t),4), int arg_ 1 (trace,x bar(n I,vo),2), int_arg 2(cp l,cp,5), \[cp_l (emp,cp,5), ext arg(pro,x bar(n I,vo),2), in fl(to,infl,6), predicate(leave,x bar(no,v 1 ),7)\]1, which illustrates PP, O and trace detection and binding.
FUTURE DIRECTIONS The primary focus of the experimental parser will be to include wider coverage within st GB-framework, including adjuncts, and to examine psychological aspects of concurrent language processing.
CONCLUSION The investigation into the concurrent aspects of GB Theory is still in the embryonic stages.
Nevertheless, early results seem to indicate that such research may yield significant insights into parallel parsing and human sentence processing.
NOTES ~Cf.
/Abney 1986/, /Berwick 1987/, /Correa 1987/, /Kashket 1987/,/Kuhns 1986/,/Sharp.1985/,/Stabler 1987/,/Thiersch 1988/, and/%'ehrli I984/.
-'/Berwick and Weinberg 1981/and/Wehrli 1988/have excellent discussions of the notion of transparency or direct encoding of GB-modules.
~PC-PARLOG is conmaercially available from Parallel Logic Programming Limited (Twickenham, Enghmd).
a/Betwick 1987/presents various ot, tput options with respect to GB-based parsers./Abney 1986/also has a novel approach to parsing.
50-roles are denoted by the neutral labels ext arg, int arg_ 1, and int arg__2 rather than by the terms of agent, tbeme, recipient, etc.
/Zubizaretta 1987/, for example, argues for this type of representation.
~'For the sake of expository simplicity and for lack of space, lowlevel implementation details, e.g., certain initialization and stack manipulation procedures, arc suppressed in the discussion.
REFERENCES Abney, S., (1986) "Licensing and Parsing," (personal communication).
Berwick, R.C., (1987), Principle-Based Parsing, Technical Report 972, MIT Artificial Intelligence Laboratory, Cambridge, MA.
Berwick, R.C., and A.S.
Weinberg, (1984), The Grammatical Basis of Linguistic Performance, The MIT Press, Cambridge, MA.
Chomsky, N., (1981), Lectures on Government and Binding, Foris Publications, Dordrecht, Holland.
Conlon, T., (1989), ~l igjM'ARLOG, Addison-Wesley, Reading, MA.
Correa, N., (1987), "An Attribute-Grammar Implementation of Government-Binding Theory," Proceedings of 25th Annual Meeting of the ACL, Stanford, CA.
Gregory, S., (1987), Parallel Lo~Pr~nm~ in PARLOG, Addison-Wesley, Reading, MA.
Huang, X., and L.
Guthrie, (1986), "Parsing in Parallel," Proceeding~of COLING '86, Bonn, West Germany.
Kashket, M.B.I (1987), A Government-Binding Based Parser for Warl~, Technical Report 993, MIT Artificial Intelligence Laboratory, Cambridge, MA.
Kuhns, R.J., (1986), "A PROLOG Implementation of Government-Binding Theory," proceedings of COLING '86.
Bonn, West Germany.
Marcus, M.P., (1980), ~yntactic Recognition for Natural Langua_ge, The MIT Press, Cambridge, MA.
Matsumoto, Y., (1986), "A Parallel Parsing System for Natural Language Analysis," Nw~er Lecture Notes in Computer Science, no.
225. Milne, R., (1983), Resolving Lexical Ambi~in a Detemfinistic Parser D.
Phil Dissertation, University of Edinburgh.
Reyle, U., and C.
Rohrer, (eds.), (1988), Natural Lat~tgg_ Parsingand Linguistic Theories, D.
Reidel Publishing Co..
Boston, MA.
Shapiro, E., (ed.), (1988), Concurrem Prol o~.
Collected ~, The MIT Press, Cambridge, MA.
Sharp, R., (1985), A.
Model of Grammar Based on Principl_~ of Government and Binding, M.S.
Thesis, The University of British Columbial Stabler.
E.P., (1987), "Restricting Logic Grammars with Government-Binding Theory," C~nAmtational Lin~, vol.
13, no.
1-2. Thiersch, C., and H.P.
Kolb, (1987), "Parsing with Principles and Parameters: Prolegomena to a Universal Parser," (personal conmmnication).
Waltz, D,L., and J.B.
Jordan, (1985), "Massively Parallel Parsing: A Strongly Interactive Model of Natural Language Interpretation," ~nitive Science vol.
4, no.
1. Wehrli, E., (1984), "A Government-Binding Parser for French," Working Paper No.
48, Institut pour les Etudes Semantiques et Cognitives, Universite de Geneve.
Wehrli, E., (1988), "Parsing with a GB-Grammar," in Reyle and Robrer (eds.).
Zubizaretta, M,L., (1987), Levels of Representation in the Lexicon and in the Syntax, Foris Publications, Dordrecht, Holland .

