A SNAPSHOT OF KDS A KNOWLEDGE DF_,LIVERY SYSTEM James A.
Moore end William C.
Mann USCIlnformaUon Sciences Institute Marina del Ray, CA June, 1979 SUMMARY KDS Is a computer program which creates multl-par~raph, Natural Language text from a computer representation of knowledge to be delivered.
We have addressed a number of Issues not previously encountered In the generation of Natural Language st the multi-sentence level, vlz: ordering among sentences and the scope of each, quality comparisons between alternative 8~regations of sub-sententJal units, the coordination of communication with non-linguistic activities by • gcel-pursuin~ planner, end the use of dynamic models of speaker and hearer to shape the text to the task at hand.
STATEMENT OF THE PROBLEM The task of KDS is to generate English text under the following constraints: 1.
The source of information Is a semantic net, having no a priori structuring to facilitate the outputtlng task.
This represents the most elaborate performance of KDS to date.
SYSTEM DESIGN The KDS organization reflects our novel paradigm: FRAGMENTAND-COMPOSE.
KDS decomposes the original network into fragments then orders and 8~regatas these according to the dictates of the text-producing task, not according to the needs for which the internal representation was originally conceived.
KDS has shown the feasibility of this approach.
The KDS organization Is a simple pipeline: FRAGMENT, PLAN, FILTER, HILL-CLIMB, and OUTPUT.
FRAGMENT transforms the selected portion of the semantic net into an unordered set of propositions which correspond, roughly, to minimal sentences.
2. The text is produced to satisfy an explicit goal held by the text generating system, which describes a desired cognitive state of the reader.
3. To achieve the desired state of the reader requires more than a single sentence.
R ESULTS This is not the forum for a extensive analysis of our results; for details, see Mann and Moore \[ 1979\].
However, to communicate the flavor of what ~ve have accomplished--from the motivating goal: (WANTS SPEAKER (KNOWS HEARER F ldlE-ALARM-SCENE)) and about two pages of formal propositions describing the "Fire-alarm scene', KDS generated the following: W Aeneeor there is a \]'ire, the ~arm s~jttm is started whic~ Jounds the a/arm bell and starts the timer.
W~n it b ninety seconds a\[tor t~t timer L~ started, unless tAe o/arm J~$tem is cancelled it co~IS Wells Farfo.
Wht~ Wells Far~ is called, ff CO~Is tat Fire Dept..
W t)en ~ou kear tkt o/arm bill or ~ou smell smoke, stop ¢utr~tMng.
determine mheth,r there Is a firs and decide to permit the alarm J~stem or to cancel it.
When ),ou dttermine mketker there Is a \[ire.
l\[ t~ere iS, permit t~t alarm S~sttm; otherwise cancel it..W~en ~ou permit the alarm syst~, c~! the Fire Dept.
if possible and \[oilo~ tkt w~uatlon procedure.
When ~ carroll tke elate s~)sttet, l\[ it iS mote t~an n~ner~ seconds since the timer is started, tke alarm s.Tsttm e~ls Wells Fargo: ockormlse continue tmrrytldng.
PLAN uses goal-sensitive rules to impose an ordering on this set of fragments.
A typical planning rule is: "When conveying a scene in which the hearer is to identify himself with one of the actors, express ell propositions involving that actor AFTER those which do not, and separate these two partitions by a paragraph break'.
FILTER, deletes from the set, ell propositions currently represented as known by the hearer.
HILL-CLIMB coordinates two sub-activities: AGGREGATOR applies rules to combine two or three fragments into a single one.
A typical aggregation rule is: "The two fragments 'x does A' and 'x does B' can be combin~! into a single fragment: 'x does A and B'".
PREFERENCER evaluates each proposed new fragment, producing a numerical measure of its "goodness".
A typical preference rule is: "When instructing the hearer, lncremm the accumulating measure by 10 for each occurrence of the symbol 'YOU'".
HILL-CLIMB uses AGGREGATOR to generate new candidate sets of fregments, and PREFERENCER, to determine which new set presents the best one-step improvement over the current set.
The objective function of HILL-CLIMB has been enlarged to also take into ecceunt the COST OF FOREGONE OPPORTUNITIES.
This has drastically improved the initial performance, since the topology abounds wtth local maxima.
KDS has used, at one time or another, on the order of 10 planning rules, 30 aggregation rules and 7 preference rules.
51 The aggregation and preference rules are directly analogoua to the capabilities of linguistic eempotence and performance, respectively.
OUTPUT lsa simple (two pages of LISP) text generator driven by a context free grammar.
ACKNOWLEDGMENTS The work reported here was supported by NSF Grant MCS76-07332.
REFERENCES Levin, J.
A., and Goldman, N.
M., Process models of reference in context, I$I/RR-78o72, Information Sciences Institute, Marina del Re),, CA, 1978.
Levin, J.A., and Moore, J.A., Dialogue Gamest metecommunication structures for natural bnguqe interaction, Co~ltive Science, 1,4, 1978.
Mann, W.
C., Moore, J.
A., and Levin, J.
A., A comprehension model for human dialogue, in Proo.
IJCAI-V, Cambridge, MA, 1977.
Mann, W.C., and Moore, J.A., Computer generation of multl-paraq~raph English text, in preparation.
Moore, J.
A., Levin, J.
A., and Mann, W.
C., A Gool-orianted model of human dialogue, AJCL microfiche 67, 1977.
Moore, J.A., Communication as a problem-solviq activity, in preparation. 52

