<algorithm name="ParsCit" version="080917">
<citationList>
<citation valid="true">
<authors>
<author>Kenneth R Beesley</author>
<author>L Karttunen</author>
</authors>
<title>Finite state morphology</title>
<date>2003</date>
<publisher>CSLI Publications</publisher>
<location>Stanford, CA</location>
<contexts>
<context>y has been proven and has resulted in numerous software toolkits and development environments for this purpose. For the work reported on in this paper the state-of-the-art Xerox finite-state toolkit (Beesley and Karttunen, 2003) is used. The Xerox software tool for modelling the morphotactics is lexc. An accurate specification of the Zulu word structure, is created as a lexc script file and compiled into a so-called finite-</context>
<context>%^ZINXh in the xfst fragment in figure 1, which is realised as either zi, zim or zin, depending on the context. A detailled explanation of the xfst syntax falls outside the scope of this article (see Beesley and Karttunen, 2003). define Syllable [Cons+ Vowel Cons* | Vowel Cons*]; ... define ruleizin1Xh %^ZINXh -&gt; %^XX %^ZINXh || _ [%^BR Syllable Syllable %^ER | %^BR Syllable %^ER [Vowel | Syllable] | %^BR Syllable Syllable]</context>
</contexts>
<marker>Beesley, Karttunen, 2003</marker>
<rawString>Beesley, Kenneth.R., Karttunen, L. (2003). Finite state morphology. Stanford, CA: CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S E Bosch</author>
<author>L Pretorius</author>
</authors>
<title>A finite-state approach to linguistic constraints in Zulu morphological analysis</title>
<date>2006</date>
<journal>Studia Orientalia</journal>
<volume>103</volume>
<pages>205--227</pages>
<marker>Bosch, Pretorius, 2006</marker>
<rawString>Bosch, S.E., Pretorius, L. (2006). A finite-state approach to linguistic constraints in Zulu morphological analysis. Studia Orientalia 103, pp.205-227.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Hurskainen</author>
</authors>
<title>A two-level formalism for the analysis of Bantu morphology: an application to Swahili</title>
<date>1992</date>
<journal>Nordic Journal of African Studies</journal>
<volume>1</volume>
<pages>87--122</pages>
<contexts>
<context>e morphological analysis of Xhosa may be found in (Theron &amp; Cloete, 1997) while Swahili is, as far as we know, the first Bantu language for which a complete morphological analyser has been developed (Hurskainen, 1992). linguistic distance compares, e.g., to that of Spanish and Portuguese. The greatest challenge for the morphological analysis of the Nguni languages lies with the nominal (complex gender system with</context>
</contexts>
<marker>Hurskainen, 1992</marker>
<rawString>Hurskainen, A. (1992). A two-level formalism for the analysis of Bantu morphology: an application to Swahili. Nordic Journal of African Studies, 1(1), pp. 87-122.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Oflazer</author>
<author>S Nirenburg</author>
</authors>
<date>2007</date>
<booktitle>Practical Bootstrapping of Morphological Analyzers. Available: http://citeseer.ist.psu.edu/270795.html Accessed on 30</booktitle>
<marker>Oflazer, Nirenburg, 2007</marker>
<rawString>Oflazer, K., Nirenburg, S. (sa) [O]. Practical Bootstrapping of Morphological Analyzers. Available: http://citeseer.ist.psu.edu/270795.html Accessed on 30 May 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Oflazer</author>
<author>S Nirenburg</author>
<author>M McShane</author>
</authors>
<title>Bootstrapping morphological analyzers by combining human elicitation and machine learning</title>
<date>2001</date>
<journal>Computational Linguistics</journal>
<volume>27</volume>
<pages>59--85</pages>
<marker>Oflazer, Nirenburg, McShane, 2001</marker>
<rawString>Oflazer, K., Nirenburg, S., and McShane, M. (2001). Bootstrapping morphological analyzers by combining human elicitation and machine learning. Computational Linguistics 27(1), pp. 59-85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Pretorius</author>
<author>S E Bosch</author>
</authors>
<title>Finite-State Computational Morphology: An Analyzer Prototype for Zulu</title>
<date>2003</date>
<journal>Machine Translation</journal>
<volume>18</volume>
<pages>195--216</pages>
<contexts>
<context>ection and morphological generation in the other. It remains a challenge to build such lexical transducers that analyse and generate all and only the words of a given language, in this case Zulu (cf. Pretorius and Bosch, 2003). So what do we in fact have for ZulMorph, that we can use in the fast-tracking process? In the first place we have the morphotactics component, i.e. an accurate specification of the Zulu word struct</context>
</contexts>
<marker>Pretorius, Bosch, 2003</marker>
<rawString>Pretorius, L., Bosch, S.E. (2003). Finite-State Computational Morphology: An Analyzer Prototype for Zulu. Machine Translation 18, pp. 195-216.</rawString>
</citation>
<citation valid="true">
<title>Available: http://www.concourt.gov.za/site/theconstitution/thet ext.htm Accessed on 31</title>
<date>2008</date>
<marker>2008</marker>
<rawString>The Constitution. (sa). [O]. Available: http://www.concourt.gov.za/site/theconstitution/thet ext.htm Accessed on 31 January 2008.</rawString>
</citation>
</citationList>
</algorithm>

