Proceedings of the NAACL HLT 2010 Workshop on Speech and Language Processing for Assistive Technologies, pages 44–52,
Los Angeles, California, June 2010. c©2010 Association for Computational Linguistics
An Aproach for Anonymous Speling for Voter Write-Ins 
Using Spech Interaction 
 
 
Shaneé Dawkins Juan E. Gilbert 
Auburn University Clemson University 
3101 Shelby Center for Technology 10 McAdams Hal 
Auburn University, AL 36849, USA Clemson, SC 29634, USA 
stw0004@auburn.edu juan@clemson.edu 
 
 
 
 
 
 
Abstract 
Today, the technology used for voting does 
not fuly adres the isues that disabled vot-
ers are confronted with during elections. Vot-
ers, including those with most disabilities, 
should be able to vote and verify his or her 
balot during elections without the asistance 
of others.  In order for this to hapen, a uni-
versal design should be incorporated into the 
development of al voting systems.  The re-
search presented here embraces the neds of 
those who are disabled.  The primary objec-
tive of this research was to develop a system 
in which a person, can eficiently, anony-
mously, and independently write-in a candi-
date’s name during an election.  The method 
presented here uses spech interaction and 
name prediction to alow voters to privately 
spel the name of the candidate they intend to 
write-in. A study was performed to determine 
the efectivenes and eficiency of the system. 
The results of the study showed that speling a 
name using the predictive method developed 
is an efective and eficient solution to the 
aforementioned isues. 
1 Introduction
*
 
                                                             
 
 
 
 
 
 
 
The 200 United States Presidential Election wil 
always be remembered for its voting iregularities. 
The isues with the balot design during that elec-
tion led to skepticism of other voting systems and 
technologies.  Not only were there questions re-
garding the dificulty interpreting the voter's inten-
tion, the focus also shifted to the isues 
surounding disabled voters.  The key isue was 
that disabled voters neded a way to vote inde-
pendently and anonymously, while stil maintain-
ing system security and eficiency. Al voters, 
including those with most disabilities, should be 
able to vote and verify his or her balot during elec-
tions privately, without asistance. Today, a prop-
erly designed interface is one of the key aspects to 
runing a sucesful election. 
As technology for electronic voting systems 
continues to develop, there is an increased ned for 
universal design in these systems (VSG Chapter 
3, 207). A universal design ensures that systems 
are as usable as posible by as many people as pos-
sible regardles of age, ability or situation (Center 
for Universal Design, 204).  By focusing on the 
voter and their neds, the design of electronic vot-
ing systems wil far surpas the balot designs of 
the 200 election.  
With the security of voting systems constantly 
being a major concern, it is often dificult to im-
plement voting technology that incorporates a se-
cure universal design.  Some developers today 
                                                                                                
 
 
 
 
44
adres this isue through the design of their elec-
tronic voting systems (Prime II, 209); however, 
these electronic voting systems have yet to inte-
grate universal design into the writing-in of a can-
didate’s name. 
The objective of this research is to develop a 
system in which a person, including those with 
most disabilities, can eficiently, anonymously, and 
efectively spel a candidate’s name through 
spech interaction. The method presented in this 
paper is a predictive aproach to speling through 
spech interaction.  This alows voters to quickly 
and anonymously spel a candidate’s name for any 
position or ofice during the voting proces.  The 
study performed intends to capture and analyze the 
efectivenes of writing in a candidate’s name 
anonymously through spech.  The results of this 
study could lead to the adaptation of this system in 
search functions for various other aplications. 
2 Background

2.1 Election
Write-Ins 
The method of writing in a candidate’s name for a 
particular United States governing ofice dates 
back to the early 19
th
 century (Oficial Election 
Site, 207). Prior to the 180s, voters would sim-
ply cal out their choices to a judge and election 
clerks talying the votes (Jones, 203).  After the 
12
th
 amendment was pased in 1804, paper balots 
became the standard method for voting.  Voters 
would bring their own slips of paper as the balot, 
on which they wrote candidate’s names (History of 
the Paper Balot, 209).  Today, a write-in candi-
date is a candidate whose name does not apear on 
the balot. Voters can vote for a write-in candidate 
by marking the write-in indicator, and writing the 
candidate’s name in space provided on the balot 
(Write-in Candidate Requirements, 2010).  
2.2 Prime
II Electronic Voting System 
Prime II is a research prototype electronic voting 
system.  It is a secure, multimodal electronic vot-
ing system that delivers the necesary system secu-
rity, integrity and user satisfaction safeguards in a 
user-friendly interface that acomodates al peo-
ple regardles of ability (Prime II, 209). With 
Prime II, voters are able to cast their votes through 
visual interaction and/or through spech interac-
tion. This multimodal aproach to electronic vot-
ing enables Prime II to incorporate a universal 
design, which alows nearly al voters to cast their 
votes independently and privately.   
Due to the anonymous nature of voting systems, 
the candidates that the voter selects must be kept 
private. Since Prime II integrates spech interac-
tion into the voting proces, bystanders may be 
aforded the oportunity to compromise the pri-
vacy of the voter. Bystanders must not be able to 
hear whom a voter selects for any ofice, or a 
voter’s decision for any proposition in order to en-
sure voter – balot anonymity.  Therefore, during 
the voting proces, voters canot simply say the 
name of the candidates for which s/he wishes to 
vote.  The spech interface of Prime II imple-
ments an interaction in which the voter does not 
ned to explicitly verbalize for which candidate 
they intend to vote. 
The Prime II system uses spech to convey the 
information on the scren to the voter (e.g. candi-
dates listed for a particular ofice) through the use 
of a microphone headset. When an option is pre-
sented, the voter choses the option by speaking, 
“Vote” into the microphone. If the voter does not 
wish to chose the curent option, they do not say 
anything and the system moves on to the next 
prompt. An example dialogue is as folows: 
Prime II: “To vote for the Democratic Party, say vote 
<bep>” 
Voter: <says nothing> 
Prime II: “To vote for the Republican Party, say vote 
<bep>” 
Voter: “Vote” 
In this example, the voter chose to vote for the 
Republican Party. Bystanders only hear the voter 
saying “Vote,” instead of a voter’s actual choice, 
which ensures the privacy of the voter and the 
anonymity of the voter’s balot.  
The universal acesibility and anonymous na-
ture of electronic voting highlights the incomplete-
nes in the design of writing in a candidate’s name 
with Prime II. Curently, voters have the ability to 
write-in a candidate’s name in one way: using an 
onscren keyboard (Figure 1).  When a voter 
choses not to vote for a predetermined candidate 
and to write-in a candidate’s name, the keyboard is 
shown, and the user must use the touchscren to 
type the candidate’s name. Since this portion of the 
system is not a multimodal design, the voter must 
be sighted to write-in a candidate’s name. 
45
 
Figure 1. Prime II On-scren Keyboard 
2.3 Universal
Acesibility in Voting 
Help America Vote Act (HAVA) of 202, was 
created to prevent the major isues faced in the 
200 United States Presidential Election from hap-
pening in future elections (HAVA, 202).  From 
HAVA, the United States Election Asistance 
Comision (EAC) was established.  One of the 
goals of the EAC was to adopt Voluntary Voting 
System Guidelines (VSG), which expand aces 
for individuals with disabilities to vote privately 
and independently (VSG, 207). The VSG now 
adreses the advancement of technology and pro-
vides requirements for voting systems to be tested 
against to ensure functionality, security, and aces-
sibility (VSG, 205). Chapter 3 of the 207 
VSG proposes requirements for the usability and 
acesibility of electronic voting systems (VSG 
Chapter 3, 207). The VSG states that al voters 
must have aces to the voting proces without 
discrimination, and that the voting proces must be 
acesible to individuals with disabilities, includ-
ing non-visual acesibility (VSG, 207). It also 
states that voting systems should be independently 
acesible to as many voters as posible, which 
further emphasizes the ned for a universal design. 
3 Motivation

Curently, there is no solution for writing in a can-
didate’s name that is universaly acesible.  As 
stated previously, developing systems with a uni-
versal design ensures that the system can be used 
by anyone, regardles of abilities or disabilities.  
Prime II, like other electronic voting systems to-
day, simply canot acomodate a range of voters 
due to its curent write-in system through an on 
scren keyboard. In order for voters with visual or 
motor impairments to vote, a voting oficial must 
enter the voting both with him or her to write, or 
type, the candidate on the balot for which the 
voter intends to vote. The lack of multimodality 
and acesibility in these write-in methods only 
acomodates sighted voters.  This violates the 
privacy of the voter and the anonymity of the 
voter’s balot. 
The most fiting solution to this problem of 
voter privacy is to utilize a multimodal voting sys-
tem that incorporates spech interaction. With the 
adition of spech, voters, regardles of most 
physical disabilities, have an option to vote inde-
pendently. In order to write-in a candidate, a voter 
could simply speak aloud the name of the person 
who they intend to write-in. The integration of the 
spech feature alone enables the system to have a 
universal design.  However, this system is not 
practical.  During election peak times, poling 
places may have a large voter turnout (Poling 
Place and Vote Center Management, 209). With 
the large number of voters at poling places at any 
given time, privacy is an enormous isue. In acor-
dance with the Election Asistance Comision 
(EAC), the voting proces must preserve the se-
crecy of the balot. The voting proces should pre-
clude anyone else from determining the content of 
a voter's balot, without the voter's coperation. If 
such a determination is made against the wishes of 
the voter, then his or her privacy has ben violated 
(VSG Chapter 3, 207). If a voter is required to 
explicitly say the name of the candidate for which 
they intend to write-in, any bystanders within the 
polling place may be able to hear that name, and 
know for whom that person voted, thereby violat-
ing the voter’s privacy and balot anonymity. 
In order to secure voter privacy through spech 
interaction, voters must comunicate with the sys-
tem using the spech interaction method of Prime 
II.  As explained in section 2.2, this aproach al-
lows a voter to make selections throughout the vot-
ing proces by simply saying, “vote” in response to 
the system’s prompts. Using this method for writ-
ing in a candidate’s name has its chalenges.  The 
system canot simply prompt names to the voter 
until the system gets to the name the voter intends 
to write-in. There are an infinite number of names 
the voter would have to chose from.  For exam-
ple, it would not be viable for the dialogue to be as 
folows: 
Prime II: “To vote for the Bob Doe, say vote [bep]” 
Voter: <says nothing> 
Prime II: “To vote for the Bil Doe, say vote [bep]” 
Voter: <says nothing> 
46
Prime II: “To vote for the Bily Doe, say vote [bep]” 
Voter: <says nothing> 
… 
If the systems simply made uneducated gueses 
of the desired name, it would be imposible for the 
voter to write-in a candidate.  
A solution to this problem would be for the 
voter to spel, rather than say, the desired candi-
date’s name.  However, due to voter privacy, the 
voter canot simply spel a name aloud. Speling a 
write-in candidate’s name can only be done pri-
vately if the Prime II method of geting input data 
from the voter, through spech, is aplied to the 
design of the system. Using this method, the sys-
tem would ned to prompt the voter to determine 
the corect leters to spel the desired candidate’s 
name. This would have to be done for the speling 
of the entire name. For example, to spel the name, 
“Bob,” the dialogue would be as folows: 
Prime II: “If the first leter of the candidate’s name is 
A, say vote <bep>” 
Voter: <says nothing> 
Prime II: “If the first leter of the candidate’s name is 
B, say vote <bep>” 
Voter: “Vote” 
Prime II: “If the second leter of the candidate’s name 
is A, say vote <bep>” 
Voter: <says nothing> 
Prime II: “If the second leter of the candidate’s name 
is B, say vote <bep>” 
Voter: <says nothing> 
… 
Prime II: “If the second leter of the candidate’s name 
is N, say vote <bep>” 
Voter: <says nothing> 
Prime II: “If the second leter of the candidate’s name 
is O, say vote <bep>” 
Voter: “Vote” 
… 
Prime II: “If the third leter of the candidate’s name is 
B, say vote <bep>” 
Voter: “Vote” 
Thus far, this is the best solution. This aproach 
to speling a candidate’s name encompases voter 
privacy, integrity, and universal acesibility. 
However, the above example implements a linear 
search to spel a write-in candidate’s name.  For 
each leter of the candidate’s ful name, the voter 
may have to traverse each of the 26 leters of the 
alphabet.  Speling using this method would take 
an extremely long time, especialy if the leters of 
the candidate’s name were at the end of the alpha-
bet (i.e. “Robert Smith”), or if the candidate’s 
name has several leters (i.e. “Christopher Wash-
ington”).  Time is a vital factor in voting.  Voters 
want to make their selections and cast their balots 
in a reasonable amount of time.  This straight lin-
ear aproach to spel the name of a write-in candi-
date is long and undesirable, leading to the 
research presented in this paper.  The overal ob-
jective of this research is to propose a method to 
write-in a candidate’s name that adreses the is-
sues of time, privacy, and acesibility. 
Curently, there is no method to spel a name for 
writing in a candidate that incorporates a universal 
design and mets the requirements set forth by the 
EAC; no system alows an individual with visual 
or motor impairments to spel a candidate’s name 
privately and securely. In order to solve these ma-
jor isues, a predictive speling method was created 
using spech interaction.  The hypothesis is that 
the predictive speling method through spech in-
teraction wil take les time to spel a candidate’s 
name than the aforementioned linear aproach. 
4 Design

4.1 Design
Overview 
The novel aproach for writing in a candidate pre-
sented in this paper is implemented with a univer-
sal design, is private, and is time efective.  The 
proposed design solution utilizes alphabet cluster-
ing and implements name prediction as oposed to 
the linear search method discused in the previous 
section.  This solution proves to be more time ef-
fective for leter selection, and for overal name 
selection. 
Rather than using linear search to traverse the 
alphabet, which may take an extensive duration of 
time to complete, this design breaks down the al-
phabet into clusters of leters, which are then are 
presented to the voter. The voter then spels a can-
didate’s name by selecting from these leters and 
the system performs name prediction similar to the 
methods used in predictive text technology such as 
Nuance Comunications’ XT9 (Nuance, 209). 
Like in XT9, the voters speling with our spech 
system have the option to select from the suges-
tions made based on the leters speled.  While 
XT9 utilizes a dictionary database to predict words 
that the user may intend to type, this system was 
developed using a database containing only first 
and last names that the user may intend to spel. 
47
For each leter of the candidate’s name, the clus-
ters are presented to the voter for selection using 
the method discused in Chapter Thre. The voter 
begins by making the proper selections to spel the 
candidate’s last name.  The system first prompts 
the voter with the alphabet clusters. Once the voter 
selects the desired cluster, the system then prompts 
the voter with the leters contained in that cluster. 
The voter then choses a leter, and the system 
moves on to get the next leter of the desired can-
didate’s name.  Folowing every new leter selec-
tion, the first cluster presented for the next leter is 
a cluster of the thre most comon leters to fol-
low the leters already chosen. 
After the voter selects the first thre leters of 
the candidate’s name, the system then sugests 
thre names, one of which the voter may intend to 
write-in. The names sugested are chosen because 
they have the highest probability to be writen in. 
If the voter selects one of the names sugested, the 
proces is repeated for the intended candidate’s 
first name, resulting in the chosen candidate’s ful 
name being writen in for the coresponding ofice 
on the balot. If the voter does not intend to write-
in one of the names sugested, s/he continues the 
proces of selecting clusters, then leters, until the 
corect name is sugested, or the name has ben 
speled in ful (se Table 2 for a ful example). 
4.2 Cluster
Selection 
The alphabet is broken down into four clusters of 
five leters, and one cluster of six leters (Table 1). 
For the first leter of each of the candidate’s names, 
given name and surname, the voter is prompted to 
chose from one of the five clusters. For each let-
ter to be speled after the first leter, there is an ad-
ditional cluster of thre leters presented to the 
voter. This cluster contains the most comon next 
leters, given the leters the candidate has already 
chosen. For every leter, with the exception of the 
first leter, the first cluster presented to the voter is 
the most comon leter cluster. This expedites the 
selection proces since the voter is able to make his 
or her selection at this point, rather than making a 
selection from the five standard clusters. If the next 
leter of the name is not in the most comon leter 
cluster, the voter is then prompted to select one of 
the five standard clusters (Table 1). 
 
Cluster Leters 
A, B, C, D, E 
F, G, H, I, J 
K, L, M, N, O 
P, Q, R, S, T 
U, V, W, X, Y, Z 
Table 1. Standard Leter Clusters 
The first of these clusters presented to the voter 
is chosen at random, with the prompts for the re-
maining clusters folowing in alphabetical order, in 
a round robin fashion. The purpose of this ran-
domization is to secure balot anonymity by ensur-
ing that bystanders wil not be able to piece 
together for whom the voter voted. 
4.3 Leter
Selection 
Once the voter selects the corect cluster contain-
ing the next leter of the desired candidate’s name, 
s/he is prompted to chose amongst those leters. 
The leters presented by the system are dependent 
on the cluster the voter selected (se Table 2). If the 
voter selects the cluster of leters {A,B,C,D,E}, 
s/he is prompted to chose from those leters 
within that cluster.  If the voter selects the cluster 
of the most comon leters, for example, {R, A, 
E}, s/he is prompted to chose a leter from that 
comon leter cluster.  Once the desired leter is 
chosen, the system moves on to the set of prompts 
for the voter to select the next leter of the write-in 
candidate’s name (se Table 2). 
4.4 Name
Database 
This prediction system for writing in a candidate’s 
name is made posible through the use of a local 
database of names. A local database is utilized due 
to the ban of wireles devices and Internet conec-
tions in voting and tabulating machines acording 
to the Voter Confidence and Increased Acesibil-
ity Act of 209 (Holt, 209 and VCIA, 209). 
This database contains the most comon names 
in the United States (Butler, 205).  Taken from 
the United States census in 200, each name was 
given a category and a rank. The diferent catego-
ries of names are surnames, male given names, and 
female given names. Within these categories, each 
name was given a rank based on popularity.  The 
names that were used most frequently are ranked at 
the top of the list, while the names infrequently 
used are at the botom of the list.  The database 
48
used in this design contains a table of the top 100 
ranked surnames from the 200 US Census.  The 
database also has a table for given names; contain-
ing the top 100 ranked male names, and the top 
100 ranked female names.  
4.5 Name
Prediction 
In order to efectively reduce the amount of time a 
voter spends to write-in a candidate’s name, this 
system utilizes a name prediction method built on 
the name database described in the previous sec-
tion. Esentialy, the predictions are sugestions to 
the voter of names that s/he may potentialy spel. 
The names sugested are puled from the name 
database depending on the leters already chosen 
by the voter. If one of the predicted names is cor-
rect, the voter does not ned to go through the en-
tire speling proces. 
The name sugestions are strictly based on the 
clusters and leters chosen by the voter.  When a 
voter selects a cluster, the system can sugest the 
most comon (highest ranked) name that has a 
first initial as one of the leters in the cluster. For 
example, if the voter is selecting the first leter of 
the candidate’s last name, and choses the cluster 
“F, G, H, I, J,” the system can sugest “Johnson” 
to be the candidate’s last name. Similarly, when a 
voter selects a leter, the system can sugest the 
most comon name from the leters selected. Fur-
thermore, if the voter is speling the candidate’s 
last name, and has already selected the leters “J,” 
and “A,” the system can sugest “James” as the 
candidate’s last name. 
In a best-case scenario, the first name the system 
sugests would be the name the voter intended to 
write-in.  However, if that is not the case, each 
sugested name the voter rejects (says nothing) 
ads unecesary interaction cycles to the speling 
proces. For this reason, a diferent aproach was 
taken to sugest names.  Because most names 
could be sugested corectly given the first thre 
leters, the system waits to sugest names until the 
voter selects the first thre leters.  Once the first 
thre leters have ben speled, the system knows if 
there is a potential match in the database. If there 
is no match, the system continues to let the voter 
spel the name intended.  
If there is a name in the database that starts with 
the leters that the voter already selected, that name 
is then sugested to the voter.  At this time, the 
system sugests up to thre names for the voter to 
select from. If after these initial thre sugestions 
the system has not sugested the intended candi-
date’s name, the system prompts the voter to con-
tinue to spel the candidate’s name.  From this 
point on, the system sugests one name after the 
voter selects a cluster, and one name after the voter 
selects a leter.  If the voter rejects a name, it is 
never sugested again, so that the intended name 
has a chance at being sugested.  An example of 
the system dialogue is shown in Table 2.  
Interaction 
Mode 
Interaction 
Leters 
Already 
Selected 
System 
Say vote if the first leter of the 
candidate’s last name is A, B, C, D, 
or E 
-
Voter Vote -
System 
Say vote if the first leter of the 
candidate’s last name is A 
-
Voter <says nothing> -
System 
Say vote if the first leter of the 
candidate’s last name is B 
-
Voter <says nothing> -
System 
Say vote if the third leter of the 
candidate’s last name is C 
-
Voter Vote C 
System 
You have selected the leter C. Say 
vote to delete this leter. 
C 
Voter <says nothing> C 
System 
You have selected C as the candi-
date’s last name. Say vote if you 
are finished speling the last name. 
C 
Voter <says nothing> C 
System 
You wil now select the second 
leter of the candidate’s last name. 
C 
System 
The next leters are the most com-
mon leters. Say vote if the second 
leter of the candidate’s last name 
is A, E, or O 
C 
Voter Vote C 
System 
Say vote if the second leter of the 
candidate’s last name is A 
C 
Voter Vote CA 
… 
System 
You have selected the leter R. Say 
vote to delete this leter. 
CAR 
Voter <says nothing> CAR 
System 
Say vote if the candidate’s last 
name is Carter 
CAR 
Voter <says nothing> CAR 
System 
Say vote if the candidate’s last 
name is Carol 
CAR 
Voter <says nothing> CAR 
System 
Say vote if the candidate’s last 
name is Carpenter 
CAR 
Voter <says nothing> CAR 
System 
You wil now select the fourth 
leter of the candidate’s last name 
CAR 
System 
The next leters are the most com-
mon leters. Say vote if the third 
leter of the candidate’s last name 
CAR 
49
is L, P, or S 
Voter Vote CAR 
System 
Say vote if the candidate’s last 
name is Carlson 
CAR 
Voter <says nothing> CAR 
System 
Say vote if the third leter of the 
candidate’s last name is L 
CAR 
Voter Vote CARL 
System 
Say vote if the candidate’s last 
name is Carlisle 
CARL 
Voter Vote CARLISLE 
Table 2. Example Dialogue for Speling Last Name, 
"Carlisle" 
5 Experiment
and Evaluation 
The primary objective of this study was to observe 
and analyze how people interact with the predic-
tive write-in system through spech.  The goal of 
the study is to determine the time it takes a voter to 
use the write-in system developed. It is expected 
that the predictive system wil perform signifi-
cantly faster when speling a name than the linear 
system.  Aditionaly, it is expected that the par-
ticipants in the study wil be able to use the system 
efectively, meaning they wil be able to spel their 
intended names. 
5.1 Experimental
Method 
The participants were directed to fil out a pre-
questionaire to obtain their demographic informa-
tion and prior usage with computing.  Once the 
pre-questionaire was completed, a scenario was 
given, introducing them to the write-in voting 
proces, and to encourage them to treat the study as 
if it were an actual election. The students then re-
corded in writing the name they intended to spel, 
which could be any first and last name of their 
chosing, with the exception of their own to kep 
the results anonymous. It was explained to the stu-
dent that the spech from the system would be 
coming from the speakers for observational pur-
poses, and that the headset was strictly for the use 
of the microphone. Data colected during the ex-
periment included the name each participant chose 
to write-in and the times taken to spel that name. 
5.2 Evaluation

A total of 40 participants participated in this study, 
of which more than 80 percent were undergradu-
ates, Caucasians, and males. Presented in this sec-
tion are calculated best-case comparisons betwen 
the predictive write-in method versus the linear 
search aproach, as wel as the experimental re-
sults from the study. 
Predictive Write-In Results: For the study, 
participants were required to provide a name to 
spel so that there was no bias amongst the names 
speled. The average length of the ful names cho-
sen was 10.43 leters, with a standard deviation of 
2.2.  The shortest ful name was 7 leters in 
length, and the longest ful name was 16 leters in 
length.  Of the 80 first and last names chosen, 
71.3% of the names were in the database and sug-
gested to the user.  The average time it tok for a 
participant to spel a candidate’s ful name was 
9.52 minutes, with a standard deviation of 3.83. 
The median time was 8.42 minutes.  The average 
time, for the names given, per leter was 1.09 min-
utes, with a standard deviation of 45 seconds.  
Figure 2 shows a breakdown of times based on 
the number of leters in the ful name speled. This 
figure shows the average times taken by partici-
pants to spel names of various lengths for the pre-
dictive method.  Removing the outliers of this 
chart, the average ful name was betwen 8 and 16 
leters, and tok an average of 9.23 minutes. These 
results show that in practice, this system takes 
much longer than anticipated (se Comparison). 
Aditional observations from the study showed 
that participant erors were the primary reason that 
the actual times were much diferent than what was 
calculated for the best-case times to spel the same 
names.  
 
Figure 2. Average Time to Spel Ful Names 
Comparison: We calculated, at best case, 
how long it should take someone to spel the 
names from the study for both systems. In order to 
determine how long it would take to spel a name, 
50
each interaction cycle for the system was broken 
down and timed.  For each method, the sequence 
of prompts presented to the voter to spel a name is 
diferent. The sequences were determined for each 
system, and compiled for each name speled. The 
sequences for the predictive write-in method was 
constructed under the asumption that the names to 
be speled are in the system’s name database. 
Figure 3 shows the average times taken to spel 
names of various lengths for the predictive and 
linear methods.  The average time for the ful 
names provided in the study for the calculated lin-
ear search method was 15.09 minutes, with a stan-
dard deviation of 3.86 (Table 3). The average time 
to spel the ful names for the calculated predictive 
method was 4.3 minutes, with a standard devia-
tion of 0.17. The median times for the calculated 
predictive and linear methods were 4.34 and 14.73, 
respectively. From these results, we can conclude 
that, on average, the predictive speling aproach is 
more than thre times faster than the linear speling 
aproach. The predictive speling method was ef-
fective in that 10% of the participants were able 
to complete the speling of the intended names. 
 
Figure 3. Best-Case Method Comparison of Times to 
Spel Ful Names 
 
Time to spel ful 
name Predictive 
Method (minutes) 
Time to spel ful 
name Linear 
Method (minutes) 
Average 4.3 15.09 
Standard 
Deviation 
0.17 3.86 
Median 4.34 14.73 
Table 3. Calculated Predictive and Linear 
Method Statistics 
6 Conclusion
and Future Work 
The ultimate goal of electronic voting systems to-
day should be to alow anyone to vote privately 
and independently using a single design. The EAC 
provides useful and necesary guidelines to ensure 
that al eligible citizens have the same aces when 
voting, regardles of a person’s disabilities.  The 
primary objective of this research was to embrace 
these guidelines by developing a system in which a 
person, regardles of most disabilities, can efi-
ciently, anonymously, and independently write-in a 
candidate’s name during an election. The method 
designed alows voters to spel a candidate’s name 
discretely through spech interaction, using a pre-
dictive aproach for eficiency.   
The study performed was designed to test the 
hypothesis, which states that the method designed 
for predictive speling through spech interaction 
wil take much les time to spel a candidate’s 
name than the method of linear search. The results 
of the study sugest that the predictive aproach to 
write-in a candidate’s name was more eficient 
than the linear speling aproach. However, it was 
determined that, in practice, the participants tok 
longer than calculated to spel a name using the 
prediction method. 
From observing the participants throughout the 
study, it was considered that the number of erors 
made during the speling proces might have ben 
the primary reason for the time being so long. Fu-
ture versions of this system wil include increased 
eficiency for eror corection. It may also be bene-
ficial for future studies to include participants of a 
more diverse demographic, and to colect other 
metrics for determining eficiency, such as, leters 
required to spel a name, and number of erors 
made while speling and where said erors oc-
cured. 
As this method is further developed, it can be 
adapted by certain search functions. Search apli-
cations that utilize a fixed directory wil benefit 
greatly by using the prediction method discused. 
This could be especialy helpful for people directo-
ries, building directories, or telephony systems. 
Acknowledgments 
This material is based in part upon work suported 
by the National Science Foundation under Grant 
Numbers CNS0540492 and 0837675. Any opin-
ions, findings, and conclusions or recomenda-
tions expresed in this material are those of the 
author(s) and do not necesarily reflect the views 
of the National Science Foundation. 
 
51
References  
207 VSG Chapter 3: Usability, Acesibility, and 
Privacy Requirements (207) [online]. 
htp:/ww.eac.gov/vsg/part1/chapter03.php/. 
Butler, R., (205). htp:/names.mongabay.com/. 
Center for Universal Design, N.C. State University 
(204). Universal Design Education Online Web Site 
htp:/ww.udeducation.org/learn/index.asp. 
Help America Vote Act. (202). Public Law 107-252, 
107
th
 Congres, United States [online]. 
htp:/ww.fec.gov/hava/law_ext.txt. 
History of the Paper Balot (209) [online]. 
htp:/ww.fairvote.org/rightovote/pbalot.pdf. 
Jones, D., (203). A Brief Ilustrated History of Voting 
[online]. 
htp:/ww.cs.uiowa.edu/~jones/voting/pictures/. 
Making Sure Votes Count and Are Counted (209). 
htp:/holt.house.gov/voting.shtml. 
Nuance – XT9 Smart Input (209). 
htp:/ww.nuance.com/t9/xt9/. 
Oficial Election Site of San Mateo County (207). 
htp:/ww.shapethefuture.org/pres/207/090607.as
p. 
Poling Place and Vote Center Management (209) [on-
line]. htp:/ww.eac.gov/election/quick-start-
management-guides/docs/09-poling-place-and-vote-
center-management.pdf/atachment_download/file. 
Pres Release: 205 VSG Adopted (205). 
htp:/ww.eac.gov/voting%20systems/docs/eac-
adopts-2005-voluntary-voting-system-
guidelines.pdf/atachment_download/file. 
Prime II: One Machine, One Vote for Everyone. (209) 
htp:/primevotingsystem.org/. 
Voluntary Voting System Guidelines Recomendations 
to the Election Asistance Comision (207) [on-
line]. htp:/ww.eac.gov/files/vsg/Final-TGDC-
VSG-0831207.pdf. 
Voter Confidence and Increased Acesibility Act of 
209 (209). Public Law H.R. 2894. [online] 
htp:/thomas.loc.gov/cgi-
bin/query/z?c11:H.R.2894:. 
Write-in Candidate Requirements. Maine 2010 June 
Primary and November General Election Candidates 
(2010). [online] 
htp:/ww.maine.gov/sos/cec/elec/2010/writeincand
idateguide.doc. 
 
 
 
52

