Perception, Concepts and Language: 7~oA~9 and IPaGe Matthias Rehm and Karl Ulrich Goecke Faculty of Linguistics and Literature University of Bielef('ld {rehm, goecke} @coli.uifi-bielefeld.de Abstract A two-level natural language generation system tbr situation and action descriptions (SADs) of a sinmlated assembly robot is presented, in the first step, multimodal inibrmation is used to obtain a conceptual representation (CR) of an event.
The second step is the lmrallel, incremental surface realizatiou of utterances from the robot's t)erspecl;ive bascxl on the CR.
Theoretical issues addressed are semantics of SAI)s and distribution of lexical and syntactic processing, leading to a natural type of in(:rementality in NLG.
1 Introduction
Following (Reiter, 1.994), in the ma,jority of systems language generation starts with content determination.
This step is fllrther subdivided in deep content dcl.cr'm, inatio,n where a decision takes i)lat-e what infornmtion shouhl 1)e (:ommmficated to the lmareJ' mM 7q,,eto'rical planning where this ilfl'ormation is orgalfized in a rhetorically coher(mt rammer.
However, the definition of deet) content deternfination allows two difl'ering interpretations: One perspective is that there already exists a set of representations of different contents in a specific representation tbrmat.
The task is to select one of these representations to be commmficated.
This process is tyl)icalty implemented using discourse structure information and other criteria (e.g.
Grice's maximes, (Grice, 1975)).
Tim or, her t)erspective is more extensive.
If, initially, no set; of rcpresentations is available, deep content deternfination could also comprise the creation of this set.
In many technical apt)lications, this viewpoint does not really make sense.
In the most widesl)read case language generation out of ~ data base the systein is the set of representations.
A possibly more complex case language generation by agents 1 seems to be no problem either: Take tile world model and tile lflan representing the agent's environment and fl~ture actions, respectively and then select fi'om these representations the content to be verbalized.
Approaches of this kind are 1For a discussion of this notion see e.g.
(Franklin mid (\] raessc.r, t996).
indeed al)plied in various scene description or robotic systems, e.g.
(Now~k, 1987), (Lfingle et al., 1995).
Itowever, there are agent architectures not entertahfing a coherent world inodel and not having an explicit plan at ('.very level of action available.
Such agent architectures have emerged within behaviororiented robotics over the past fifteen years (e.g.
(Brooks, 1986)).
Percet)tion and control 1)rocesses are distributed over many inodules and interacl; 012 a local rather than a global basis.
Thus, reactive l~ehavior is modeled.
Considering the problem of language generation, it becomes more natural to adopt the second t)erspective about what deep content determination should mean ill this context.
In this paper, we present an aI)proach to natural hmguage generation where in a first step, a set of possible utterances of an agent is constructed 1) 3, the system "R.oAD l~)r the lack of a better term, we call l;his proeess concCl)tualizatio,n.
The intermediate struclurc, is based on the Conceptual Semantics paradigm (e.g.
(Jackendoff, 1.990)).
In a second stel), what is classically thought of as language generation is accomplished with the system IPaGe (Increnmntal Parallel Generator).
Here we propose a nmssively parallel approach that leads to a natural kind of either qualitative and quantitative incrementality (c.f.
(Flakier, 1997)).
The l)at)er is structured as follows: In section 2, some theoretical claims are clarified and the implementation of ~,oJl'D is illustrated with an example conceptualization.
The corresponding CR is also used in section 3 where IPaGe is described.
An outlook on directions for further research ill section 4 concludes this paper.
2 Conceptualization
The example domain of our work is the artificial agent CoT~,el (c.f.
(Milde et al., 1997)).
It is a sin> ulated assembly robot, al)le to manipulate wooden toy parts and instructable by a human user.
Due to its behavior-l)ased control architecture, not every instructed action is carried out as expected.
Thus, an explanation of ongoing actions by the robot is desir1091 able.
We shall deal with a specific kind of utterances, namely situation/action descriptions (SADs).
SADs are descriptions of the enviromnent and the actions of an agent from its own perspective.
In the chosen domain, possible SADs are: Ich bewege mich zu dem blauen Wiirfel (I am moving towards the bhm cube) or Ich lege den Wiirfel auf eine Leiste (I am placing a cube on a connection bar).
A theoretical and an application-oriented issue are addressed with the investigation of SADs: First, we claim that internal and sensoric parameters of the agent play a decisive role in deternfining the semantics of SADs, especially of action verbs.
Second, by generating SADs, we enable an interactor to understand what the agent is doing.
This is particularly interesting if there is no direct visual contact between the agent and the interlocutor.
Sensor data (visual, telemetric, haptic) and internal states (activation of behavior generating modules (BM), joint values) of Co7¢A set've as selection criteria (SC) of interpretative schemata (ISM) containing also conceptual units (Goeeke and Milde, 1998).
These units constitute the interface to tile surface generation process.
If the SC are present in the current sensoric pattern of the robot, an ISM may become active and the corresponding concept information is passed to surface generation (c.f.
section 3).
Some SC are temporally extended: A sensor value has to be in some interval for a certain amount of time to function as a trigger for an ISM.
Additional to sensor data and internal values, ISM themselves can be part of the SC of other ISM.
The latter ones are then said to have a higher degree of complexity then the former ones.
ISM may be subsumed by other ISM or may bear a part/wholerelation to other ISM.
An ISM is subsumed by another one if its SC constitute a proper subset of the SC of the subsuming ISM, including time restrictions.
For example, the ISM MOVE, detecting a movement of the robot that is not specified with respect to direction or velocity, is subsumed by MOVETO-OBJECT which, in addition, recognizes a goal of the movement, namely some object.
Part/wholerelations of ISM exist if a "higher" ISM combines others to identify more complex actions.
In this case, the "lower" ISM not necessarily has to be active over the whole time interval that the higher one covers.
Thus, ISM form a hierarchy (see fig.
1). ISM on the lowest level (St.E, MOVE, BUMI', )... are basic in the sense that they only contain sensor data as SC.
Complex ISM in levels 1 to 4 integrate sensor data as well as other ISM.
When an ISM becomes active, the corresponding conceptual representation (CR) is a possible candidate to be passed to the surfime generation component.
As it is possible that several ISM are active.-d; ~5:'f~'~7"S~Z~{~it:?gfiJ:;'~5g'~}f<'Y'~T~2"-' i''::-¢{:' i';}~ ; "-' "'!
" .::'" ~'~ i::: :'~"" ", ... . Figure 1: Screen depiction of the ISM-hierarchy.
Active ISM are coloured; edges mark subsumption or part/whole-relations.
at the same time, a selection has to take place.
At present, the only criterium relevant for selection is the position of the corresponding ISM within the hierarchy.
Thus, only the CR of the highest active ISM is going to be verbalized at the given time.
CRs contain information about objects, their properties attd about events tile agent is involved in.
They follow the Conceptual Semantics by,Jackendoff (Jackendoff, 1990).
In the next section, an example shows the representations used in goAD in more detail.
2.1 Example
In the following, the conceptualization of tile SAD Ich drehe mich zu dem blauen Wiirfel (I am turning to the bhm cube) is going to illustrate the processing mechanisms described in the previous section.
Suppose a situation where visual and movement information is provided by the sensors of tile robot.
Among other things, the ISM SEIC checks for the existance of values in the interface for either object type (type), object color (color) or object position within the visual field (x-g und y-g).
A possible configuration is type: c color: b x-g: 102 y-g: 99 width: 83 height: 200 The SC of SEE is a disjunction of several conditions.
If any of these conditions is met, tile ISM becomes active: x-g > 0 \[ y-g > 0 \[ width 1092 > 0 \[ height > 0.
The ('Oml)arison between the attribute-value pairs in the interface and the SC of Sl,',I," shows that solne relevant paranmters are indee(1 present.
Thus, SEE t)ecomes active.
The understmcified CR of SEE is EVENT: see, AGENT: ±, OBJECT: 0BJ, (COLOR: COL).
EVENT and AGENT arc instantiated with default vahms.
Tile associated transition rules sl)ecit\[y the remaining conceptual parameters: type OBJ ---+ OBJ color COL --+ COL Consequently, the comt)lete CI1, of sI.:g is EVENT: see, AGENT: i, OBJECT: c, COLOR: b 2 On the basis of the sensor data down: -8 and velocity: 0.441355, denoting a downward moveinent with a certain velocity, the ISM MOVF becomes active at the same time.
The basic ISM SEE and MOVE serve as SC for the COlnplex ISM TUIN-TO which identifies the turning of the robot towards an object;.
Furthermore, TURNq'O has some additional SC.
The complete set ix as follows: MOVE ~ SEE ((cont 100) x-g) (,:,,,it lOO) y-g)) fo,.s cycles Thus, if MOVE an(1 SEE are active tbr five cycles and, in addition, the object in the visual tMd is moving to the center of vision, 'I'\[JI/.N-'I'O is activated.
MOVE and SEE make available their CRs to TUI/NTO.
By this nmans, 1)reviously unst)e(:ificd t)arameters in 't'UII,N-TO's Cl~, c&n })e spell(~d out via the.
transition rule see(OBa, COL) ~ OBJECT, C()L()1\].
resulting in the flflly instantiated CR EVENT: turn, AGENT: ±, PATH: to, OBJECT: c, COLOR: b.
If TUI/N-TO turns out to be the highest active ISM at; a given time, it is selected for surface generation.
3 Generating
the utterance After conceptualizing the agent's current action at the level of ISMs (content determination) it has to be decided how the corresl)onding CR can be articulated in a natural language utterance.
A fimdamental division in lexieal and syntactical processing along with an incremental and parallel processing behaviour are the crucial features of tile proposed architecture for surface realization.
Such a processing behaviour ix facilitated by the use of CRs as interface between "R.oAD and iPaGe.
2c stands for the concel~tual entity 'cube', b for 'l)hm'.
" ~;oipho\]D~i,i, \[ "t ~ l SYNTACTICAL IPIIOCF.S SING inMnltliMioll Figure 2: The architecture of the generation system.
Conceptual, lcxical, and syntactical information is stored centrally on the blackboard.
All processes can obtain this information if needed.
3.1 Blackboard
architecture The blackl)oard is the central storing device of tile system.
All processes write their results on tile blackboard and obtain their input structures there.
In such an architecture parallel processing can be achieved in a convenient fashion.
3.2 Parallel
processing Parallel processing can be found on various levels of abstraction.
The flmdmnental division runs 1)etween lexical and syntactical 1)rocessing (see fig.
2). When a (1)art of a) CR originating from tile ISM is written on the blackboard, processing of this structure starts sinmltaneously in both components.
Using a conceptual lexicon as described by Jackendoff a transfornlation process constitutes the first si:e l) on the lexieal side (Jackendoff, 1990).
On the syntactical side, a 1)locess based on the type-phrase-corresl)ondence, also described by Jackendoff, starts processing in this component.
The type-t)hrase-correst)ondence constrains the choice of possible phrases to realize a structure with a given conceptual type in an utterance.
Different processes inside these two components work sinmltaneously on different CRs.
On the lexieal side, the three subprocesses transformation, choosing of lexeme and morphological processing can be identified.
On the syntactical side the real)ping of conceptual types on possible phrase structure rules and the instantiation of these rules take place.
3.3 Incremental
processing In natural language generation, incremental processing is a central issue.
According to Finkler's definition two fundamental types can be identified: quantitative and qualitative incremental processing (\]?inkier, 1997).
Quantitative incremental processing nmans that the inlmt to a process can be divided into differ1093 \]EVENT turn (\[AGENT\] 52' \[PATH\] \]AGENT i152 29 )\] 7 \[PATH to (\[OB.I~CT\])\] 29 I OB JECT cube-~ COiOR\] J 29 \[COLOR blue\] 29 Figure 3: A complex CR with its subparts which can serve as inlmt increments to the generation protess.
Parts of the same structure are coindexed.
The relevallt features fbr generation fronl CRs are: tilt type, the head, and tile number and types of argulnents.
Thus, \[PATH to(\[0BJECT\])\] is a possible increment.
ent parts and that processing of these parts is possible.
Qualitative incremental processing ou the other hand denotes the possibility to ()btain a first, suboptimal result and to elaborate it wtmn new ilfformalion is available.
IPaGe realizes both kinds of incremental processing.
Parts of CRs correspond to possil)le phrase structures that constitute the utterance, i.e. typeptlrase-corresl)ondence.
Thus quantitative increinental processing can be achieved ill a natural way.
An arbitrarily complex part of a CR can serve as an increment.
Qualitative increnlental processing is accomplished on tile level of instantiating phrase structure rules.
A pllrase Call always be realized by several rules of differing colnplexity.
D)r exalnple, a noun phrase call be realized ill one of tile following wws: as a noun, as a determiner and a noun, as an adjective and a noun, etc.
All rules for a given CR m:e started as independent processes trying to ii1stantiate ttmir right hand sides.
The result of a successful process is written on the blackboard and all processes with equal or less complexity are stopped.
Processes of higher complexity can try fllrther to instantiate their phrase strnctnre rules.
Ill case Olm of these processes succeeds, the former result is overwritten by the more colnplex one.
Depending on the utterance tilne of tile given phrase a more or less complex result is achieved.
3.4 Example
The exmnple introduced in section 2.1 is continued here.
Outlmt of the ISM and thus input to tile generation process is tlm CR dei)icted in figln'e 3.
This structure will be realized in an utterance like Ich drehe reich zu dem Wiirfel (I anl turning to tlm cube)bzw.
Zu dem blauen Quader drehe ich reich (To the blue cuboid I am turning).
Tlm generation process is exemplified by the processing of the PATH-structure.
3.4.1 Transformation
Every CR carries enough information to initiate different processes sinlultaneously.
At the moinent all input structure is supplied, it triggers processing inside the lexical and tile syntactical comt)onent: tile transformation and the mapping process.
As CRs describe meaning by a structural mechalfism, the same head can have different ineanings ill different structural constellations.
~iS'anst'orinalion a disanlbiguation process is imt)lemented as a lookup process in a conceptual lexicon.
The entries in tiffs lexicon are sorted by different keys.
The first key is the type of the CR.
Int)ut increments to tile lexical processing component are typed CI/,s.
Thus a type specific distribution of processing seelns natural here.
By the PATH-stnmture tim PATH-specific transformation process is triggered.
The lookup process will yield a so-called intermediate structure already with some syntactic intbrmation such as category infornlation: \[PRED "co, CAT prep, ARG 29\]29.
\[OBJECT cube\] will yield: \[PRED block, CAT n\] 29.
3.4.2 Mapping
PATHall(\] 0BJECT-structure initiate tlm mal)t)ing process simultaneously to the transfiwmalion i)rocess.
During mal)t)ing the tyl)e-1)hrasecorrespondence as described by (Jackendotl', 1990) is used.
A given tyl)e can be expressed in an utterante only by a restricted set of possible phrases.
A nml)t)ing of the types of the int)ut structures to the relevant 1)hrase structure rides takes place.
Tllese rules are then started as independent threads.
In Gerlnan, structures with type PATH are nearly always realized as prepositioiml pllrases.
The PATHspecific mapl)ing process will tlms start PP-rlfles, e.g.
PP29 -+ PREP NP or PP29 -+ PREP ADV.
Tile 0BJECT-structure will trigger the 0BJECT-sl)ecific mat)ping ttlrea(1 which will start NP-rules, e.g.
NP2:) -+ N, NP29 -4 DET N, orNP29 ~ DET ADJ N.
3.4.3 Instantiation
All threads started during the mapping process constitute the instantiation module.
These threads co> respond to phrase structure rules and try to substitute the right hand side non-ternfinals with inflected words.
If one rule is fillfilled, the result will be written on the blackboard.
All rules for the same constituent which m:e more colnplex will continue processing.
If such a more complex rifle is flflfille(1, it; will overwrite the result on the blackboard by a inore 1094 eomt)lex, i.e. more elaborate one.
Which one, will t)e uttered del)ends (m the time the outtmt t)rocess reaches the eorrest)onding 1)hrase and on the time eontraint given 1)y ml 'aEqcncy tlarameter.
A low urgency corresponds to more 1)recessing time whereas a high urgency denotes the need for a fast result.
Let's have a closer look on dm NP29-rules.
If Wiirfel is SUl)t)lied 1)y tile h;xical t)rocessing cornt/orient, all N-(:onsl;ituents will be sul/sdtuted 1)y this word: (i) NP29 -+ Wiirfel, (ii) NP29 -+ DET Wiirfel, (iii) NP29 -+ DET ADJ WiirfeL Rule (i) is complete, and will be written on the 1)ladd)oard.
If the OUtlmt 1)roeess reaches the noun t)hrase at that moment of time Wiirfel (cube) will lie used as noun phrase.
Otherwise the more complex threads ca.n try to flfltill their rules.
Next, e.g., the del;erminer reaches the t)laekl)oard, lhfle (ii) will t)e (:Oml)lel;e mM will overwrite the, former result;: NP2:) -+ dem Wiirfel.
Now, the ul;l;ere(1 i1(31_111 phrase will be dem Wiirfel (tile cut)el.
3.4.4 Choosing
Lexemes The infle(:l;ed words a.re 1)rovided t)y the lexical pro(:essing (:onq)onent.
After th(; disambiguat;ion of l:he inf)ul; stru(:i;m'es during the trmmfl)rmation f)rocess 1)ossibh; lexenw, s :{ have to lm chosen that will const;il;ute the ul;tera, n(:e.
This pl'()(:e,qs is ()ll(',(~ re(ire a h/okul) in a lexi(:on.
The tirst key to this h/okul) is the synl;acdc ca l;egory which is given in the interm(> diate sl;r11(;l;l11"e~s.
ThllS ~l cat(~gory-sl)e(:iti(: distribution of 1)ro(:esses is realized here.
h,'bmy coneel)tS can be paral)hras(!d 1)y a munl)er of words, l%)r (~'Xmnl)le, l;lm (:(m(:el)t of cube ('~t.ll t)o, e, xl)ressed ill German t)y words like Wiirfel, Quader, Block, Klotz, Qua&rat, eL(:.
((:ulm, (:,lboid, 1)h)ek, 7?7, S(luare'l).
One of these has I;() 1)e chosen.
This is mainly done rmMomly but the process takes illl;O :,lC(:()llll|; l)r(?f(',rell(;e values l;hal; gll;lla,lll;ee l;lmt 111ore UllllSllal words wilt not be chosen as often as fl'equ(',nt words.
\[PRED block, CAT n\]2:) will trigger the NSlm(:ifi(: choosing process.
It is 11tos\[; likely that the result of this 1)ro(:ess will 1)e \[STEM Wiirfel, CAT n\]2:).
\[PRED zu, CAT prep, ARG 29\]2:) will yiehl \[STEM zu, CAT prep, SUBCAT np'):)\]2!).
A noun t)hrase is sut)(:a.l;egorize.d, as tim tyt/e of the argument is OBJECT.
a.4.5 Morphological Processing The chosen lexemes have to 1)e inth',(:l;ed.
Agmn, this morl)hological processing c(ntsists at the moment of a k)okuI) l)ro(:ess.
All 1)ossible woM forlns are listed along with the needed agreenm, n(; infornmdon.
3L(}X(!III(~S }~l'(} llll(|(!rsiO()d \]l(}l'(!Is the {~(}ll(!\]';ll |'Ol'lll ot" D.
word, i.e. llO|, inflected.
This 118~145(} is not to 1)e confused with the notions of lemma and lea:tree as introduced by Imvelt (1,evelt, 1989).
4Nol; corro, ct \])Ill; found ill ~tCtllal l~-ttlgtHl~ge data.
Thus, \[STEM Wiirfel, CAT n\]29 is changed lille \[SURF Wiirfel, CAT n\]29 mM \[STEM zu, CAT prep\]~9 into \[SURF zu, CAT prep\]20 which are used during the instmltiadon process.
4 Conclusion
The systems deserit)ed have been imi)lemented ill .\]av~l mM |;esl;ed in tile at)ove-nmntioned context.
Currently, the coneeptuMization is a pure t)ol;l;omup lneclmnism.
No deliberative information like a llartner model or intentions is taken into aecollll;.
A discourse model could improve the selection mechallisln for CIs significmMy.
In tPAGE, it coukl also be used for t;he treatment of ellipses or anal)hera.

