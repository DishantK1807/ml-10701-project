Based on the formal definition of CCGs in (Weir-Joshi 1988), a CCG, G, is denoted by (VT, VN, S, f, R), where • lit is a finite set of terminals, • VN is a finite set of nonterminals, • S is a distinguished member of VN, • f is a function that maps elements of VT U {e} to finite subsets of C(VN), the set of categories, where, VN C C(VN) and if el and c2 • C(VN), then (el\c2) and (cl/c2) • *I would like to thank Mark Steedman, Libby Levison, Owen Rambow, and the anonymous referees for their valuable advice.
P88-1034
In future research, I will investigate whether VAR-CCGs is an adequate linguistic formalism in capturing all aspects of free word order languages or whether a formalism such as {}-CCGs (Hoffman 1992), which allows sets of arguments in function categories, is better suited.
P92-1044
of Computer and Information Sciences University of Pennsylvania Philadelphia, PA 19104 (hoffman @ linc.cis.upenn.edu) Abstract Combinatory Categorial Grammars, CCGs, (Steedman 1985) have been shown by Weir and loshi (1988) to generate the same class of languages as Tree-Adjoining Grammars (TAG), Head Grammars (HG), and Linear Indexed Grammars (LIG).
P88-1034
Note that MC-TAGs, which are a more powerful extension of TAGs, can also generate languages like L, and they are known to be mildly context-sensitive formalisms (Weir 1988).
P88-1034
The language generated by this grammar is defined as L(G) = {al,..., an \[ S :~ c,,...,cn, ei • f(al),ai • lit U {e}, 1 < i > n} Under these assumptions, Weir and Joshi (1988) prove that CCGs are weakly equivalent to TAGs, HGs, and LIGs.
P88-1034
