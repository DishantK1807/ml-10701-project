OPERATION LOGIC A DATABASE MANAGEMENT OPERATION SYST~ OF HUMAN-LIKE INFORMATION PROCESSING V~clav Pol~k and Nad~da Pol~kov~ (in memoriam) Z~vod v~po~etD/ techniky ~SAD, Brno, Czechoslovakia The paper contains the description of a database management computer operation system called operation logic.
This system is a formal logic with well-deflned formulas as semantic language clauses and with reasoning by means of modus ponens rules.
There are four frames CLAUSE, QUESTION, I:~O~T.~, SYST~.
Each of these frames is processed by one program.
By means of these programs it can be realized understanding of any clause, answering any reasonable question, solving az~7 reasonable problem and understanding any organizatlonel structure.
Some algorithms of operation logic are described and examples of clauses are exhibited.
Our approach is the following: (1) Information processin~ of sub teots~ Material objects are anorganic objects or organic ones.
They are also non-live objects or live ones.
Live objects reproduce themselves autonomously.
Live objects are organic individuals or artificial ones.
Organic individuals are one-cellular or multi-cellular.
They are also heterotrophic (they consume organic objects) or autotrophic (they consume anorganic objects only).
Multi-cellular autotrophic organic individuals are called pl~ts.
Multicellular heterotrophio organic individuals are called sub teots.
Plants have no moving organs and no consciousness.
They do not need them.
Subjects have moving organs and consciousness.
They need them for searching, hunting and escape.
Each subJects has general knowledge database.
It contains information 234 about types of scenes (called image-frames) in the form the scenes are seen by the subject by its eyes, but in a very simplified form.
It contains also sequences of scenes (called sceneries ) representing rules (called mgdus ponens rules) according to which changes in the universe are realized.
Each subject has concrete knowledge database representing history of life of the subject and image-frame of actual scene~ Each subject constructs possible scenes and realizes program, ed behaviour of itself.
Each sub, sot has information processing database mans~ament operation system having both above databases in long term memory ~nd processing actual knowledge in short term memory.
A subject is called human, if it is able to describe scenes by means of processes (i.e.
to decode image-frames into formulu (called clauses) representing processes) and if it constructs ~ew clauses from the old ones by means of modus ponens rules (called reasonS).
Subjects with consciousness without above properties are called animals.
Humans operation system for information processing is called o e_~.e~ion logic, humans clauses form & system called semantic language.
Humans have the ability to exchange information among themselves by means of clauses (such activity is called di~o~).
We have thus the following stages of information processing: First there are anorganic objects only.
Then organic objects appear by a random.
Then by means of natural selection one-cellular heterotrophie organic individuals (bacteria) appear.
From bacteria one-cellular autotrophic organic individuals are developed (cyanoph¥cae).
Prom bacteria more sophlstic~ted one-cellular heterotrophic protozoa are developed and by symbiosis from protozoa and cyanop~vcae one-cellular autotrophic al~ae appear.
From algae plants are developed and from protozoa animals.
From animals humans are developed (namely because of necessity of exchange information in social production activities).
(2) Semantic la~a~a~e clause.
In each scene there are individuals (like TREE, JOHN, FEAR) and processes (like TO-GO, 235 TO-EXPLAIN).
Names of individuals are called atomic individual__.ss (or nouns), names of processes are called verb__._~s.
In each process participating individuals play Certain roles (called individual members) like (TO-GO WHO WITH-WHOM), (TO-EXPLAIN WHO WHAT TO-WHOM).
Individuals have properties (like BLUE, EMPTY).
Processes have properties (like QUICKLY, DAILY).
Propertiee of individuals are called attributes, properties of processes are called adverbs.
Names of attributes are called atomic attributes (or adjectives), names of adverbs are called atomic adverbs.
There are several types of adverbs (called Bdverbial.members), each of them describes the circumstances the process is realized.
The process is realized in euclidean three dimensibnal space (NHERE-PLACE,WHERE-NEAR, WHERE-FAR, ~IERE-INSIDE, %~-/~E-OUTSIDE, ~CdF.~%E-BESIDE, WHERE-LEPT, WHERE-HIGHT, V~RE-BEPORE, WHERE-BEHIND, WHERE-BELOW, WHERE-ABOVE, ~-AROUND, VP~ERE-A~ONG, ~/tEaRET~F~N, FROM, TO, VIA, DISTANCE) in linear time scale (WHEN-ANTERIORITY, WHEN-SIMULTANEITY, r~N-POSTERIORITY, BEGI~ING, END, FREQUENCY, DURATION) under validity of several modus ponens rules (CAUSE, RESULT, PURPOSE, CONCESSION) with instruments (BY-MEANS-OF) and acoordinE to algorithm types (BY-~AT-WAY, INTENSITY, RESEMBLING).
Hence we have (ATOMIC-INDIVIDUAL (ATTRIBUTE (K))K) for individuals (such form is called compound individual) and (VERB (INDIVIDUAL-~3ER(I))I (ADVERBIAL-MEM~ER(J))J) for processes i.e. for clauses.
Modus ponens rules are of the form (IF CLAUSES THEN CLAUSES).
Individual can be atomic individual, compound individual, process-as-individual clause, meta-level clause.
Adverb can be atomic adverb, individual, adverb-defining clause.
Attribute can be atomic attribute, individual, attribute-defining clause.
To each clause some information about the whole clause belongs (called clause parameters).
Individual members and adverbial members are called clause members . Hence we have (VERB CLAUSE-MEMBERS CLAUSE-PARAMETERS) • 236 (3) Clause Dar~neters.
(a) Conte~tuatit ~.
Because of existence of short term memory one must distinguish in each clause the old knowledge (called topic) and the new one (called focus) receiving thus either (TOPIC-VERB TOPIC-CLAUSE-HEMBERS FOCUS-CLAUSE-M~BERS) or (POCUS-VERB TOPIC-CLAUSE-MEmBERS POOUS-CLAUSE-~Y~S).
(b) TenseBecause individuals, adverbs and attributes can be clauses, we have for each clause a graph tree with clauses as vertices and to-be-superior-clause-of as edges.
One needs only relative binary time relations (anteriority, simultaneity, posteriority).
We consider time of construction of the clause and time of clause process realization.
Time of construction of meta-level clause is the time of process realization of the superior clause.
Time of construction of clause of other types is the time of construction of its superior clause (or in the case of top clause the time of sending it by sender).
Other binar~ time relations (if needed) can be given by time adverbs.
(c) Quantifiers.
The simplest way in using quantifiers is to have only ALL and SOME with areas given in attributes.
(d) ~ot~ The negation is used only in building scenes: We have old knowledge about scene.
We expect new knowledge.
We add new knowledge.
We negate expected but untrue knowledge.
Prom this we have the followingz either we negate new expected focus (i.e.
focus with or without verb) or we negate topic verb only.
(e) Aspect s iterativness I extension m process realizati~: Each process according to its completness can be COMPLETED or NOT-COMPLETED, according to its iterativness REPEATED or NOT-REPEATED, according to its relation to ~a certain time moment I~IATE or EXTENDED and according to its realization REAL-PROCESS, UNREAL-PROCESS-POSSIBLE-SCENE-DEFINING or UNREAL-PROCESS-POSSIBLE-SCENE-NOT-DEFINING.
237(f) Sub.jective modalit~: (CERTAINTY: I know that CLAUSE), (HOPE: I suppose that CLAUSE), (INDETER~INATION: I don't know that CLAUSE), (DOUBT: I suppose that NOT-CLAUSE), (NEGATION: I know that NOT-CLAUSE).
(g) Emotlonalit2: (OBJECTIVITY: I am indifferent to realize CLAUSE), (PLEASURE: I want CLAUSE, I know that CLAUSE), (LONGING: I want CLAUSE, I suppose that CLAUSE), (FEAR: i want CLAUSE, I suppose that NOT-CLAUSE), (ANGER: I want CLAUSE, I know that NOT-CLAUSE, It is CLAUSE(~) if NOT-CLAUSE, I don't want CLAUSE( 1 ), It is NOT-CLAUSE( I ) if NOT-CLAUSE and CLAUSE (2), I strive to realize CLAUSE(2)), (REGRET: dtto like for anger but I don't strive to realize CLAUSE(2)).
(h) Oblective modalit2: (NECESSITY-WITH-SOURCE-AGENT) : Agent A is indifferent to CLAUSE" A realizes CLAUSE(I) if NOT-CLAUSE, A doesn't want CLAUSE( I ) ), (NECESSITY-WITH-SOURCE-NON-AGENT: Non-agent B is superior to A, B realizes CLAUSE(1) if A doesn't realize CLAUSE, B wants CLAUSE, A is indifferent to CLAUSE, A doesn't want CLAUSE(1), B appeals to A to realize CLAUSE), (NECESSITY-WITH-SOURCE-ENVIROI~ENTAL-CIRCUMSTANCES: A is indifferent to CLAUSE, One realizes CLAUSE(1) if A doesn't realize CLAUSE, A doesn't want CLAUSE(1)), (NECESSITY-WITH-SOME-SOURCE: At least one type of necessity 'is given), (PO~IBILITY-WITH-SOURCE-AGENT: Inner circumstances of A are complete for CLAUSE), (POSSIBILITY-WITH-SOURCE-NON-AGENT: B is superior to A, B agrees to realize CLAUSE, B realizes CLAUSE(1) if A realizes CLAUSE and B doesn't agree to realize CLAUSE, A doesn't want CLAUSE(I ) ), ( POSSIBILITY-WITH-S OURCE-ENVIRONMENTAL -CIRCUMSTANCES : Environmental circumstances are complete for CLAUSE), (POSSIBILITY-WITH-ALL-SOURCES: All types of possibilities are 238 given), (WILL-WITH-SOURCE-AGENT: A wants CLAUSE, A strives to realize CLAUSE).
Objective modelity = n-th objective modality ((n-1)-th objective modality (...
( 1-th objective modality) ...
). (i) Global modalit2: INFORMATION, rIND-TRUTH-VALUE-QUESTION, PIND-X-VALUE-QUESTION, COMMAND, PROHIBITION, REQUEST, ADVICE.
(J) ~atabase position: VIEWPOINT.
(4) Understandin~ . Clauses are grouped into role-pairs (WHY-ROLE-CLAUSE HOW-ROLE-CLAUSES), modus ponens rules, scenes and denote-clauses.
Content of clauses is given by means of such grouping.
It enables to operate with vague notions and even with contradictions.
Each system, say S, is described by input and output of structures, energy and records, by structures as means and records as database, by scenes and by role-pairs, where wh~-roles are the roles being fulfilled by S and how-roles are why-roles of subsystems of S.
Understanding of very large systems and semantic mathematical analysis of anthropoecoeystems is realized by the binary relation to-be-subsystem-of defined by role-pairs on SYSTEM's.
Example: (ROLE-PAIR(24): (WHY-ROLE: (TO-RECEIVE (WHO: IT) (WHAT: GLUCOSE))) (HOW-ROLE(1): (TO-REALIZE (WHO: IT) (WHAT: PHOTOsn~sls) ) )) 239 -

