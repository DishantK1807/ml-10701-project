LANGAGES "CONTEXT-SENS ITIVES" q~JEL(~JES ASPECTS DE LEUR EXTENSION.
par J.
FRIANT Ce rapport rappelle lea principales d~finitions concer~ant lea 8ramma/res de constituantsp notamment lea gr~maires CS.
Pule il introd~lt la.notion de Erammaires CS de reconnaissance, ce qui permet en particulier de d~montrer si~plement la stabilit6 de ltintersection relativement ~ la classe des langages CS.
Plusieurs langages CS, de nature arithm~tique, sont ensuite d6crits; ainsi il eat montr~ que l'ensemhle des hombres premiers constl~ue un tel langage.
En conclusion, l*6noac~ de deux r~sultats permet dlinclure la classe.des langages CF matrtelolles et celle • des langages CFP clans la claese des langages CS.
§ O.
RAPPELS. NOTATIONS.
~ 4 ~ O.l.
Orammalres de constl.tuant% imm~dlats.
Ce sont des syt~nes formels dont le but est de d6cEire la construction des phrases de langages artificiels par modifications successives portant sur des suites de symboles.
Formellement~ une Eranlnaire de constituants eat la donn~e d'un quadrupletz; -~ appel6 vocabulaire, est un ensemble fini de symboles; t~T, vocabulaire termlnalp est un sous-ensemble de~ dont le compl~mentaire~ ~N * est appel~ voeabulalre non-termlnal; S est un s~abole distlngu6 de t/N, d~si~n~ symbole inltial.
Les symboles -~l~ments de '0 ~seront repr6sent~s par des capitales latines habltuell~ent indic6es, et les suites flnies de tels symboles, ou mots -~l~ments du monoTde llbre ~ construit sur u ~par des cap&tales latlnes surmont6es d,u accent eirconfle=~e.
un couple ordonn~ de mo~ts (A,B) on associera le mot L obrenu en 6crivant le mot B & droite dumot A, Formel lement I sl A = A 1 ...
A t .,.
A n =B 1 ...
Bj ...
B m C ^ ^,, alors = A B = A 1 ..~ A n B 1 ...
B o On dire que Aj D et C sont des mots de longueur respectivement ~gale ~ np et n + ~ et on ~crlra.
/ If, l=-, IBI==, ICL=n+ . -~ est un ensemble finl dont les 61~ments, appel~s r~-gles do productlon~ sont des couples ordonn~s de mots.
Ainsi: ^ ^ ^ r 6 ~: r = (A,B) avecla restriction A ~ \[2"~ . 0.2. r~gle de production ^, ^ On ~crira : X D~rlvation; . On dira que Y d~rive dircctement____.___ de X~ selon ~, par la ^ ^ ^ r = (A,B), s'il existe deux mots Get D tels Gp rp D On dira queYd~rive-de X, selon ~,, slil exlste ^ flnle de mots X 0, X I i..., X n tels que : io =f: ' ~n =~ ~ r i ^ >X.
et Vi, I ~ i < n r i 6 ~-" Xi . I (~ z on ~crir~: ~ ~,'~ ~ ~.e~ ".
= r I ...
r i ...
r n ~ ~* une suite 0.3, ~.
Le langage engendr~ par la grammalre ~ est le sous-ensemble,o ~;,o=,~ ~o.
°o. d0.,.=,°,, .°,o.
~, oo.,o .o<°..
~ <~.
ll' Deux grannnalres seront dltcs ~quivalent~s si elles engendrent le m~me langage.
0.4. Grammalres et langag, es context-sensitive~ sous-ensemble de ~ sera appel~ langage eontext~sensltlve Un sill peut 8ire engendr6 par une grarmnaire ~ dent routes les rAgles sont telles que la Iongue~r du premier meabre est au plus ~gale ~ celle du second, i.e. i On remarquera que tousles langages context-free ~) sont context-sensltive (CS)~ oo.,~°o.<.o (\[, \], E, \]J,-'.--,,.-~.,o ~, ~°.< toujours 8tre engendr~ par une granmmire satlsfalsant aux conditions sulvantes: " 3 . Outre le symbole ini~'ial S, t/N contient deux symboles particuliers S T et ~! on note: S . • Les r~gles se rdpartissent en trois groupes: les r~gles initiales: (S,SW) et (.sps') l'ensemble des r~gles binaire$, de la forme: (A i Aj, Ak, A I) aucun de ces symboles n'~tant terminal, et l'ensemb!e ~ des r~gles terminales, de la forme: (A,T) : A 6 t7, T 6 ~T Soit X 6 D~,£, I ~ I = n ; il r6sulte des conditions cl-dessus que est une phrase de ~ sl et seulement si on peut d£river X de S' W n " 1 l'aide des r~gles de ~l ~, ^ et de ; plus pr~cls~ment" ~ 6 si et seulement sl il existe A 6 ~,n tel que A d~rive de S' I~ " I par ~let § 1, GTJ%IRI/A£PJE DE RECONNAISSANCE ASSOCIEE A tiN LANGAGE CS.
I.I. Soit i un langage CS engendr~ par une grannnalre ~ du type rappel~ cl.dessus.
Nous allons d~flnir une grarsnaire ~ ~qulvalente ~ ~: Le symbole initial ctles symboles terminaux sont ceu x de ~.
On trouve de plus les ~16~nents de repr~sent~s par: ~ A 6, T 6 ~YT Les r~gles de~r sont d6duites de celles de ~: • r~gles inltiales: W S' • r6gles binaires, u~ r : • irA.
~,-A.
~ A i I VTI, T 2 6 %: tL~\]L~\],\[_\]\[~\]~ ~~ ~ si et seul~:lent si.(A i Aj, A k A1) 6 ~t . r~gles terminales, A • VT 6.~T : <\[~ \]' T) ~ ~ si et seulement si (A,T) ^ Par extension sl A = A I ...
A i ...
A n 6 ~n ^ T1 Ti n et X = • .....
T n 6 ~T gO on ~crira: c A 1 A i \[#\] : L~\]...\[~\] .-.\[An Co~e pour la gr~aire ~, il r~sulte du choix des r~gles de r que X 6 ( ) si et seulement si on peut d~rlver X de 8' wn^ 1 X seulement si il existe A 6 ~,n tel que d~rlve de ^ X par et,," d~rive de ~ par . Ainsi ~ route S-d~rivation de X, selon ~, d~composable en (of.
ci-dessus) : s s,v~ n'1 ~'~) > ~ t~) ^ ....
~ > X correspond la S-dErivation de X selon ~r : 9 _ \[~',: -~ ' (~ x \]~~\[~ -------et r~ciproquement.
On a done blen le r~sultat annone~: La gr~aire est dice de reconnaissance car si X est un mot terminal ( X 6 b~ T, et I X ~ : n )notts pouvons touJours envisager -5une S-d~rivation, selon r~r, te!le que l"application des r~gles initiales LS IW n I~ aboutisse au mot' ~ J ~ mais cette d~rivation ne sera fructueuse que si X est une phrase du langage ~.
e'est-A-dire si la gran~maire ( r ' par ses r~-gles r et, le "recomnalt" telle.
On di):a indiff~remment que engendre ou accepte X.
on peut auss:' envisager des gran~maires CS de reconnaissance avec marquant d'extr~nit6s de phrases, not~ #.
L'introduction d'un tel marquant ne modifle pas la capacit~ g~n~rative de nos grarmaaires.
Io2, t~pplication: Intersection de langages CS= En utillsant la notion de grammaire de reconnaissance nous .,,0..
.ouvo.,o <E, E + ;).
. L'intersecti0n de deux langages CS est CS.
Soient ~I et ~2 de~ langages CS sur le mSme vocabulaire retinal ~ . On suppose ~on.+ pour ~ ~ : i, 2 > une ~a~a~re du type indiou~, en 0.4. on note S.l le symbole initial, S~I ' W i les symboles sp@c!aux ~ ~i " D'apr~s le paragraphe I,I.
on peut d~finir une U graraaalre de reconnaissance (~ ~quivalente ~ ~.
d0nt l'ensemble des A d ri ~ t symholes non-te~inaux+ mis ~ part S.~I + est not~ ~rlet l'ensemblc des r~gles binalres (resp.
terminales) ~/ri (resp.
~ri ).
On va construire une grarmmaire CS de rcconnaissancej av~cmarquant ~ = (~., %,S,~,~),~ ~c_ I et ~ qui engendre I n 2 Vocabulaire: Le vocabulaire tel~inal de ~ est ~T ; levoeabulaire q non-terminal ¢~N comporte en plus des symholes distingu~s S et ~, les symboles de ~r (i = I, 2 ), i.e.: 1 ~6Principe du choix des r~gles de Nous voulons dSfinir une grammaire de reconnaissance qui n'accepte que phrascsappartenant simultan~ment A ~I et ~2 " Etant donn~ un mot les i% terminal X~.
nous v~rifierons done d'abord, & l'aide des r&gles de ~ I r 1 h que est une phrase de ~I ; si c'est le cas~ et alors seulement, par des r&gles intez~m6diaires nous passerons ~ l'6tude de la reconnaissance de par la grammaire, & l'aide des r&gles de . gg les r&gles de 2 r2^ nous permettront de passer au niveau tcrmlnal Xp s! et seulement sl ^ r2 X appartient h l iintersectlon J!l N '22 " R~gles de ~.~: • r&gles initiales W 1 S 1 . r~glcs de'~econnafssance" de rl • r&gles interm~diaires r t V T, T' 6 bVT A W2 ~'12 W 2 ¥,T E F I,W 2 S 2 .r~gles ~t et ~, de la grammalre r2 vr2 2 Le lecteur vSrlflera facilement que le prlnclpe signals plus haut se i/9 ^ trouve respects par le cholx de ces r@gles t {~ aecepte les phrases X 7 appartenant simultan~ment ~ ~I et ~2 ' le r~sulta~ ~nonc~.
et elles seu!esi ce qui d~ontre Nous allons presenter maintenant quelques examples de langages CS.
§ 2.
LANGAGES CS ARTIFICIELS.
Les langages ~tudi~s dans ce paragraphe, sont d~finis sur le vocabulaire = + dtun tel langage iest enti~rement caract~risfie par sa longueur klaussi, par ahus de langage, dirons-nous parfols "le nombre k", pour le'~ot I k " . On salt qulun tel langage Infini ~est CF qua s'il contient un soBs-ensemble "formant|' une progressiongdom~trique.
J. P.
Benz~cri<L ! \], \[ 2 \]) a g~n~ralis~ la notion de langage CF en faisant intervenir des symboles et des mots ~ plusleurs insertions iet diverses operations sur ees mots, en plus du prodult de juxtaposition on parle de langage CFP.
R. Gued~ a contient une pz~gression arlthmltique ou une progression de la forme: k ri~+uv } I k E ~ . Ainsi le lecteur pourra v~rifier faeilement qu'aucu n des langages fitudifis dans ce paragraphe n'est CFP, a fortlori CF.
o~: 2.1. lC~ example: J { P" + J" = l,n ~} et j +rant deux entiers distincts sup+rleurs ~ I.
Solt ~(i,j) la grammaire CS avec marquant -m-,+> : .++.
I). -~(i~j) comporte : 8 Q • la r~gle initiale (S, AIB I) • les r~gles de production ( # A 1, # A 2 ) (d~but) i iB2 ) ( A2A 1, A 1A 2 ) ; ( A2B 1 ~ A 1 ( B 2 #, B~ # ) (fin) . • etles rggles te~ninales ( A 1, I ) Le lecteur v~rifiera facilement qua ; ( B2B 1, B~ B 2 ) ; ( B I, i ) • Ce rdsultat scralt ~viden~ent susceptible de g~n~ralisation en eonsid~rant plus de deux indices (i,j).
2.2• 2 ~e example: Consid~rons la grarm~aire CS avec marquant ~()! comprend les deux symboles distingu~s Set #, !as ~l~ments de • { } t~i = A ~ A 1, A 2 ~ B ~ C, C 1, C 2, D et ceus de et le symbole terminal I • Nous allons d~crire les ragles de la grammaire ~()! en ~ndiquant les d~rivations qu'elles permettent.
L'id~e directriee est la suivante: on passe de I n!
A I (n + I)! en '!eoplant" (n + I) fols le premiere phrase I n! : (n+ 1)!
= In!
In! in!
KI | ••, | . (n + I} fols -9~° 1" Ainsi au nlveau ~on terminal le passage de I 5!
~ I 4! correspondra ~ la d~rivation: # AAAB 3 # ~ > # A 4 B 20 # ~ (~) le nombre de symboles A permet de savoir ~ quelle ~tape on est rendu.
On montrera comment les r~gles d~crites permettent de r~aliser la dSrivation pr~c~dente.
I. R~gle.
initiale (S:, AA) II.
'-~ (,) . ( # A, -# DA 1 ) -(d~but) • ( AIA, AAIC ) ; ( AIB, BAIC ) : • ( CA, .~C) ; ( CB, BC ) "~ ( C #, C 1 # ) ; ( CC 1, ctc t ) .\] • (Arc 1, c~c 1 ) f ( YX', yz~'~ ) E~gles pe~nettant les d~rivations du type: # A 3 B 3 # > # DAAB 3 (Ci)6 # r~gles de "recopiage" mise en place des nouveaux symboles passage ~ l'~tape suivante Par la suite les symboles X et Y d6sign~ront un symbole quelconque /1 ~ les restrictions faites seront seules indlqu~es.
III. RAgles permettant les d~riv~tions du type DAAB3(CI)6 # > # DAA 2 B 3 (CIC2C2)6 • (DA t, DA~ ) ou ( A2A', Z~ ) : d~but de la nouvelle ~Cape • ( x,,z, .~.
) x# c I • ( C~Y, ClC2Y,, ), ( C~ #, CIC 2 # • (c~,c~) Dtune fa~on g~n=drale slil s'agit du passage de I n!
) : r~gles de "recopiage" L(n + I)! de cett~ ~tape recommence (n 1) lois.
10 IV.
R~gles permettant les d~rivations du type # DAA2B3 (CIC2C2)6 # ~ # DA3 B20 #,~(1) • ( A2C {, A!"A"' ) ou ( A2B, A"'A"' ) : un nouveau s)~nbole A apparat en x~e d'une nouvelle ~-tape ~ventuelle • (x",Y, xY,,, ) X # c I at X# O 2 • ( C~'Y, BY"' ) • (c~,Y, ~,, ) ou (c~, #, B#).
V. Enfin les r~gles • ( XA"', X"'A ) • ( # D"',#;~) ach~vent un d~veloppement complet (dans l'exemple cholsi on aboutira ~: # A4B 20 # ), et l'on pourra recommencer un nouveau d~veloppemnt (on passerait g: 5~i '~ A5B 115 # ) ou appliquer les • VI.
K~gles terminales: .(s,} ) • (~A,~ { ) ( {a,i} ) • ({B,i I ) On v~rifiera que • 2.3. 3 ~me exemp le V i i > 2 • ~(i) = { En s'insplrant de la granunaire {i n' \[ ne i~,} i {~ { n~ ~} ~ (l) on peut trouver une grammaire CS ° 11 engendrant ~6~(!
) i-L 4 qj . Cela nous permet de donner dans le cadre des langages CS un ~nonc~ du "thdoz~me" de Fermat 6non, ant que les ~quations n n n X +y =Z, pour n entier sup~rieur ou ~gal ~ 3~ n'admettent pas de solutions~ valeurs enti~res, ii est facile de v~rifier que cela revient ~ poser: • . ^ et l'intersection (cf.
§ 1.2).
~tant stables relatlvement ~ la classe des langages CS~ on peut d~finir une grammaire CS engendrant le langage du premier membre de l'~.gallt~ pr~c~dente.
Malheureusement le problAme g~n~ral, de savoir si le langage engendr~ par une grammaire CS est vide, est ind~cidable.
Nous avons aussi d~montr~ \[ 5 \] que le lang~ge est CS.
Mals icl nous allons presenter une grammalre CS engendrant les hombres premiers ~crlts Sous forme d~cimale.
§ 3.
NOM~RE3 PREMIERS DECIMAUX ET LANGAGES CS.
L1ensemble des nombres premiers, ~crits Sous forme d~cimale usuelle, est un langage CS.
DEMON STRAT ION: Consid~rons la grarmnaire CS avec marquant" o~: le vocabulaire terminal, L/T, est llensemb!e des chiffres, ~Y~T -----~ O, 1, 2, ..., 8, 9, } le vocabulaire non termlnal~ ~N ' comporte en plus des deux c I, c 2 ~ c 3 sont des chiffres arbitraires l'un quelconque d'entre eux • I pouvant eventue_lemnt &tre indic~ par pr~clsdment: "=I" °' ' les r&gles de la grarm~aire <<'>? ou <<,, 77 ~ plus vont ~tre divis~es en trois groupes.
• # s------>~# ss \[ol . # s -----> # s ..
ss -------> "5" "5" ~,.J \[%t~2J • # (o) / c 1, c 2 6 ~W T # S.,r --------># u 6 0, 1 . Falsons Ici llhypoth&se que le symbole S n'intervlent pas dans les autres r&gles et que ces derni&res n'agissent que sur les symboles du type ¢c ~cl~21 indicds ou places & l'extr~m!t~ g~ucheil en r~sulte que toute ~S#-d~rivation cormnencera par une s~quence: #s# ---> #ss# ---> #s n " 1 # ___> # sn 1 # __.> ...
L°4 • . c 1 s np + 1#__> ...----># ...
#, L ~J L% 13 cn# o Ces d~rivatlons faites, les r~gles initiales ne pourront plus ~tre appliqu~es.
II. R~!esde transf6rmation: Elles seront d6crites formellem'ent ci-dessous; signalons ici qu'il s'agit de r~gles conservant la longueur et que leur but est de d~terminer si~ oui ou non, le nombre N, N = CnCn 1 "*" C2Cl est premier, Dans ce but N va ~tre "divis~" par les hombres D, compris entre 2 et N: D dldl 1 "'" d2dl Ahnsi, en tours de d6ribation on passe par le mot non terminal: Cn ;.~ 0 dl ...
d2 dl \[il que l'on representer sch6matiquement par, 2 ~ D < N . Si Nest un multiple de D on obtient le mot, i.e.
{° 1 \[° I ro01 • ..
... NN, et l'on bioque !a d~rivatlon, N n'gtant pas prmler.
Si N n'~st pas divisible par D on passe ~ la "division" par (D + I), e'est-~-dire au mot non terminal I~l 11 en r~sulte que si et seulemnt si Nest premier on aboutit eu mot non terminal j i,e.
: 14• n"'" g L°nlJ dour on d~rivern le nombre premier N par les r~gles termlnales.
III. c I c 2 R~les,terminales.
c, c 1, c 2 sont des chiffres quelconquesz ClC 2 si si R ~ O, apr~s la (k + 1)-~ne soustraction de D, la presence de la retenue ( N (k + I)D < O ) nous fern passer au mot non terminal IDN+N~\] DistlnEuons done Ins diff~rentes ~tapes et les dlff~rents cas la d6rivatlon passera par les mots non terminaux inf~rieur h D, autrc que 1).
R = O, la d~rivation sara bloqu~e, pour m = k, ~ ~ ;.
sulvancs: 15 11 s'agit maintenant de pr~ciser les r~gles de transfo~ation et de d~crire les d~rivations qu'elles permettent.
On l'a dit ci-dessus, leur but est de "diviser'!
N par D (2 ~ D ~ N).
Cette division va consister en une succession de soustractions.
"Soit: N = kD + R O L~.~ < D, (N n'~tant multiple d'aucun nombre o<.
Ii. 1.
D~but de soustractlon.
Supposons que nous ayons d~rlv~ de S le mot m ~< k,.
avec: ND~D N mD = r i ...
r I . A.
r I ~ O (donc ~ fortiori (N mD) > 0 . ~ ~ -# t~J t~IJ Les chiffres r 1, d 1, 1 ' sont quelconques, seule existe la restriction siEnal~e, r I ~ 0..
Cette remerque vaut pour routes les autres r~glcs.
B. r I = 0 : il s'agit de v~rifier si (N mD) n'est pas nul.
~. r~ # ----~ r~ e Nous nous Int~ressons uniquement aux chiffres de la ligne sup~rieure, aussl les r~-gles pr~c~dentes peuvent, sans aucune confusion, se me~tre sou,, la fore: I ol # ~ fo,l# ~tant blen tntendu que les deux chiffres inf6rieurs sont quelconq~es (~ rQmarquer toutefois qu'ils ne peuvent 8tre indic~s) et ne sont pas modifies par ces r~gles.
Cctte remarque nous permettre de simplifier l'6criture de certaines r~gles • \[,:,1 r_,zl ~ ro,~ \[ol • Ainsi dans le cas o~1 N -mD on se trouvera arrSt~ ~: LClj Lel J (Tout au plus pourrait-on ajouter de nouveaux indices 16 ~,~7 ~ la ligne sup~rieute).
• Si (N mD) est positif il existe j, j ~< i, tel que r.
est distinct .! de O, et il faut alors continuer notre division par D par une nouvelle soustraction: x + o f_:if_o,'l -.--.> f_.:lro,,\] rodlol -...--+ \[olro-,\] \[~J# L~j II.
2. oi f~\] R~les de soustraction.
Seules nous int~ressent les deux lignes sup~rieures; la ligne inf~rieure, ni~tlrrtt pas modlfi~e, conserve l'information du nombre N ~tudi~.
Nous avons quatre cas ~ consld~rer: A.
Sanm retenue (sur le chiffre precedent): f:i\]l=~} ru, f<,o+::>:: -+:\] <~ < ~, ~/<,71 on introduit la retenue (Ividemment Igale i I) en utilisant l'indice ~''>~ B.
Avec retenue: r 2 > d 2 r"'i'l t f' lj + " (introduction de !a retenue) 17 r 2 .~ d 2 # IZ.
3". Fin de soustraction.
il y a essentiellemnt deun cas ~ envisager: A.
l,~ (m + I)D>/ 0 (m < k) sans la retenue: T avec Ia retenue: r>d " # ~ # 22ai B.
N (m+ I)D < 0 (m= k) • sans la retenue: r<d : # avecla retenue: rLd # ----.--> # -LTJ L'indice ~ ')~ ~i appara~t h la ligue inf~rieure, indique que H n'est pas divisible par D~ il va permetEre de passer ~ la division par (D + I) Er~ce au:: r~81es sui~-~ntcs.
" If.
Z}. passaze au mot tlon t A.
dl 9 " # Loll passage.
~ Ia division par (D + 1)~ c,est-~-dlre • NI~_I \] tez~Inal ~" -# 18 ligne inf~riet:~e indique que le passage de D ~ D+ 1 fait intervenir 'la . retenue (D se terminant per un 9).
l l, l=2J I°!
I*j de9 T I! r~sulte de la description faite que tout hombre pee~ler N d~rive de S, selon la grammaire ~.
!l resterait h,.volr que la gra~nalre nlengendre pas~ ou plut6t '~'accepte pas" d'autres nombres.
On: rt~-~clhera que les r~gles doivent &tre appliqu~es dens ltordre de leur presentation s~ llon veut que la d~rivatlon aboutisse ~ une phrase.
Pour cela on c~ l'apparition et la disparition des Ind~ces qui commandent, en quelque so~e~ l'eneha~nement des ~tapes.
Ainsi s'ach~ve la d~monstratlon du r6~/ta~ enTw~ ~.
= N I N nombre premier d~cimal . ~RQUBS 1°)langage: Ace r6.sultat nous pouvons ajouter le suivant: Le compl&nentaire du langage ~, e'est-~-dire le =(, } ~ I N' 1 N entier naturel d~clmal non pr~nler est un langage CS.
11 suffit de consid~rer la gra~naire v les r~gles ten~inales III par les suivantes: d<c ~ ~ ~ 'c 19 et d'en remplacer \[°2J ci¢ 2 e,.aJoutant @# S ~ ~ ~ 0 ~# et ~ S # ~ ~ 1 Le lecteur v~rifiera ce r6sultat facilement en remarquant que N n'est pas pr.~uier si et seulement s'il existe D, D < N (on peut pr~ciser D ~ N ) tel que N = kD.
Dana une d~rivation selon la grammalre ~, J essayant d'engendrer N, on aboutlt au mot . En posant: N = d n ...
c I et D = d I ...
d I on est sQr que l'on a d n < cn (car N ~ 2D) d'o~ la restriction Impos~e ci-dessus ~ la preni~re r~gle termlnale applicat~le.
E11e 6talt n6cessalre, car sl Nest premierp la grammaire ~ 8 nous permet d'aboutir au mot alors d n = cn et notre nouvelle grammalre "n'aceepte pas" N.
2 ° ) langase: Nous allons donner une nouvelle grammalre CS engendrant le (p) = |P \[ p ¢ ~, p premier, Auparavant~ donnons un ensemble ~1 de r~gles CS permettant de passer de l'~criture d~eimale d'un end!er naturel p ~ son ~criture "en b~tons".
• R~g!es C S de passage ~de~ p ~ ~ ~ \[_ p /=#.
Solt P = Qn~n 1 "'' C2dl Nous allons dlstlnauer 3 cas sulvant la valeur du chlffre des unlt~s.
i er cam: ~ > 1 . C# ~ (c 1) \[ # (¢1>ll . C I ----==~ . 20 2eme cas 0= I d 1# ~ d OI # ) • dXl doll r~gle de fin de transformation • # 11 --2 # I.\[ cas partlculier . # 1 # -----> # I ~f= d est un chiffre quelconque.
3~me cas: C = 0 0 # --> O' # . ol ---+ o'I d>l d=l • 0 0' ------> O' 0 • d O' ~ (d 1)9 I ' {i u 10'-----~ u 0 9 # 1 0'---> # 91' ' I' I o----~ 9 I'#--> \[# u est un ch£ffre quelconque On remarquera que la d~rlvation # P# ~ # IP# est d~finle dlune fa~on unique; on passera par les ~tapes: # p44~-----~# (p-1) i # ~ ...# qlP-q#--> ...---> #i'P#, le passage de q & (q I) ( i< q~<p ) exige, dans le cas 0h le ¢hlffre des unit~s de q est nul, l'intervention d'une retenue.
Nous sommes malntenant en mesure de d~flnlr une grammalre engendrant ~(p): i' terminal de . . ~f = la grammaire~ ~tudi~e ci-dessus.
~ ~l ',A.~tant: l'ensemble des r~gles de la graB~aire et ~I l'ensemble des r~gles de passage d~crites ci-dessus.
2tEn conclusion nous allons ~noncer des r~sultats permettant de cc~pnrer la classe des langages C~ & deux autres classes qui g~n~ralisent celle des langages CF.
Langages CF matricielles.
Une granmmire matricielle est un couple \[~,d~\] o~ : est une grammalre de constituants.
e=~ une pattie finie du monolde libre 6'~, E(.~ ..)4..\] sera dite grarmm~ire matricielle CF, CS, etc.~ si ~est respectivement une grmm~aire CF, CS, etc...
Le langage engendr~ par la grammaire matricielle \[~/~{~\] est llensemble: des mots sur le vocabulaire ~T qui d~rivent de S par une suite de r&gles de& qui est un produit de juxtaposition de mots de ~.
(Lutrement dit on applique d'abord dans leur ordre les rtgles d'un premier mot ~I 6 ~; puls on passe & un second mot ~2 ' dont on dolt pouvoir appllquer la premi&re "lettre", qui est une r&gle de ~ puls la seconde etc...).
J, P.
Benz~crf a prouv~ \[ 2 \] que : • tout langage engendr~ par une grarmuaire CF matriclelle est C8...
On a plus: tout langage CS matriclel est CS.
Langctges CFP (cf.
§ 2 au d~but) Nous avons prouv~ (travail & paraStre) que: • tout langage CFP est CS.
22 References • J.
P. BENZECRI (Rennes, f~vrier 19~5) Structures alg~brlques et eonstltuants non connexes dans les grar.malres.
J. P.
BENZECRI (Paris, 1966) Granmmlres matricielles N.
CHOMSKY, Formal Properties of Gra,~ars, dans Handbook of 14athematical Psychology, vol.
II (Ed.
by D.
Lucew E.
Busch, E.
Ga~anter) 1963, pp.
323-418. J.
FRIANT (Th~se de 3 ° cycle, Parisp 1966) Les langages CS.
J. FI:IANT (Paris 1966) Nombres premiers et langages CS.
R. GUEDJ (Thgse de 3 ° cycle, Paris, 1966) Grammaires de Constituants G~n~raux.
7 S.Y.
KURODA (Octobre 1963), Classes of Languages and Linear bounded autamata.
\[ 8\] • P.
S. LANDWEBER, Three thehrems on phrase structure grammars of type i, Information and Control, t: 6, 1963, p. 137-146 .

