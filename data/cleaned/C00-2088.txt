A Formal Semantics for Generating and Editing Plurals Paul Piwek ITRI University of Brighton Watts Building, Moulsecoomb, Brighton BN2 4GJ UK Paul.Piwek@itri.brighton.ac.uk Abstract Wc present a formal semantics for an objectoriented formalism which allows for the representation of plura, l objects (such as 'Three N', 'Most of the N', 'Some N',...).
The semantics is given in terms of it mapping to a variant of Discourse Representation Theory.
It is motivated by its suitability lkw natural language generation and interactive editing of the representations.
1 Introduction
A natural language generator typically generates a noun plnase l'rom a representation consisting of an object with one or more attributes (cf.
Reiter & l)ale, 2000).
Usually this representation is supplemented with inl'ormation concerning the context in which the noun phrase has io be realized (e.g., the set of distractors, whether tile object is in focus, etc.).
\];or instance, the lil,ICUP, l system (Dale, 1992) deals with reference to plural objects by having the l'ollowing three attributes on physical objects: structure, whose wflue can be either a set or individual, cardinalio, which in case of a set records the numbers of elements which the set has, and constituents which in case of a set contains the elements of the set.
Our proposal is intended to extend the representations proposed in (Dale, 1992)) Most importantly, wc replace the attribute cardinalily with the more general attribute quant (for quantifier) whose value is a quantilier such as 'most', 'few', '5', '< 6' (at most 6), etc.
Furthermole, we introduce the new attribute parl_of which takes its a value an ob.jecl of which the object in question is a part.
~ ~Note that we are dealing with the generation of plurals from (logically) structured data as opposed lo raw data as in, e.g., Stone (1999).
2We use the mcfcologicat 'part of' relation as an alternative It} "subset' For details, see the next section.
The object-oriented (00) forlnalism in which we implement tile al'orelnentioned attributes is an extension of standard oo formalisms.
It is known as Scoped Semantic Networks (SSN; Kibble et al., 1999; Power, 1999).
3 An
SSN consists of a network of objects together with a mapping o1' these objects to a set o1' logical contexts.
This makes it possible to represent universal quantification, implication, negation and other logical operators.
In particulal; Power (1999) shows how an SSN can be mapped into a I)iscourse Representation Structure (DRS; Kamp & Reyle, 1993), lhus providing a forlnal semantic interpretation of SSNs.
In tiffs paper, we provide a mapping of SSNs with plural objects to an adapted version of Discourse Represemation Theory (I)RT).
The mapping is provided to obtain t%rmal truth conditions for the SSNs.
Such a lnaPlfing provides us with a mathenmlically precise characterization el' the information which is represented by a SSN ill terms of its truth-condilions.
This is useful if we want to automatically lnanipulale lhe information which is represented by means of an SSN.
For example, we can formally define whether some piece of information is aheady implicit in some other piece of information; in other words, we can deline a notion of logical consequence.
Related to this is the possibility to use the semantics in order to test the consistency of the informatiou conveyed by an SSN.
For tlmt purpose, we can do so-called model checking: an SSN is consislent if we can construct a model -that is, a logically possible state of the worldin which tile SSN is true according to our truth-conditional semantics.
We do not provide a direct formal semantics for SSN, but rather map it to a more convenient logical l'ormalistn, i.e., I)P,T.
The main reason for tiffs approach is that phenomena which we will be modelling in this paper, i.e.
(plural) reference and aScc also, e.g., Sowa (1984).
607 anaphora, have been studied extensively within I)RT (see, e.g., Kamp & Reyle, 1993; Krahmer & Van Deemter, 1998; Piwek, 1997).
Fnrthermore, we believe that the adaptation of DRT that we propose is of interest in its own right.
The mapping which we provide from SSNs with plural objects to DRSs requires some modifications to standard DRT with plurals (Kamp & Reyle, 1993: Chapter 4).
For networks with only singular objects, there is a straightforward mapping of the objects in a network to the discourse referents which populate a DRS.
Things are different for networks with plural objects.
Consider: (1) Susan has found most books which Bill needs.
The DP, S for this sentence is: (2) y book(y) need(bill,y) found(susan,y) Intuitively, the meaning of this condition is that: fi')r most y which satisfy the conditions to the le/'t of the diamond, it holds that they also sati,@~ the condition on the right.
Note, that the representation contains no plural discourse referent corresponding to the Nt' 'most books which Bill needs'.
The 'y' in this representation is a referent for singular individuals.
This might make one wonder how it is possible in standard DRT to refer back to plural individuals as in: (3) Susan has found most books which Bill needs.
They were on her desk.
For this purpose, there is a so-called abstraction operation (Kamp & Reyle, 1993:313) with which we can obtain a discourse referent for the set of books which Bill needs and Susan Jbund.
In more technical terms, the set is obtained by the summation of the values which 'y' can take.
Thus there is no direct way of mapping a plural object in a semantic network (which represent the interpretation of an NP) to a plural discourse referent in the corresponding DRS.
For this reason we have chosen to adapt the DP, T formalism, so that plural noun phrases do directly colTelate with plural discourse referents.
We now proceed as follows.
In Section 2, we specify the mapping from SSNs to our version of DRT.
In the next section (Section 3), we describe an application which uses the SSNs with plurals.
We finish this paper with a conclusions section (Section 4).
2 From
SSNs to DRSs In this section, we provide a mapping from SSNs into discourse representation structures (DRSs) with plurals.
We start out by specifying the target of the mapping, i.e., plural DRT.
DRSs with Plurals Following Kamp & Reyle (1993), we treat singular objects and sets of objects as entities of the same kind.
Both am considered to be individuals: atomic and non-atomic individuals, respectively.
Thus, the model theory follows the models which Link (1983) provides for count nounsfl The idea is that the denotation of an NP which contains a count noun can be uniquely subdivided into atomic parts (as opposed to the denotata of mass nouns).
The domain for NPs is structured by a prot-whole relation which satisfies the axioms of upper semilattices (for background information on these lattices see Kamp & Reyle, 1993:398-406).
In formal terms, a model is defined as follows: A model _/14 is a quintuple (Lt, g, Pred, @mrzt, Name) which consist of: (1) A domain of individuals with the structure of a complete, free, atomic upper scmilattice H = (U, C) with zero; (II) A domain of eventualities with the structure of a complete, free, atomic upper semilattice g = @7, C); (III) A function Pred mapping predicates P to their extensions in k//, such that (III.1) for tim relations representing thematic roles, such as agent and patiertt, I@ed assigns a set of tuples (c, a), wherecCEandaGU.
(III.2) for eventuality predicates, Prod(P) C_ E.
(I11.3) For object type predicates, Prod(P) C U.
(IV) A function Qua~tt mapping determiners DEW to their corresponding interpretations, i.e., a set consisting of tuples {a, b) (where a, b C U).
(V) A function Name mapping constants to members of U.
in particular, the constants c/,, where P is a predicate are mapped to Â®Pred(P), i.e., the supremum, also known as the sum, of the interpretation of P.
Notice that in our models there are separate domains for objects and eventualities (i.e., states and events).
4Fora critical discussion and alternative to Link (1983), see for instance Landman (1989).
608 The relations agent and patient have an eventuality as their first argument and an object as second argument (cf.
Parsons, 1990).
agent(e,o) is to be interpreted as: object o is the agent of eventuality e.
Furtherlnore, there are predicates applying to eventualities and others applying to objects.
For our purposes, the most interesting part of the definition is the function Q~ta,~,t; which maps determiners to their respective interpretations.
We take the interpretation of a determiner to be a set of tupies, where each tuple consist of a pair of (plural) individuals.
For instance, take the deterlniner 'most'.
Q'~m, nt, maps it to the following interpretation: '5 (4) Q~ga~,t(Most) = {(r, c) : r c c & r is a nonatomic entity of M & kl -> } Thus 'most' corresponds to the set of all tuples of individuals, such that the first individual is a nonatomic part of the second one and the cardinality of the first is greater than or equal to the cardinality of the second divided by two.
Henceforth, we will call the second individual the context individual (cf.
Westerstfihl, 1985).
Given a noun phrase, such as 'most birds', the first individual is intended as the interpretation of the entire noun phrase whereas the second individual plays the role of the context against which the noun phrase is interpreted.
The context individual can be restricted by extralinguistic circumstances (e.g., the siluation in wlaich a noun phrase is produced) and by linguistic means (as in 'most of the birds on the beach', where 'the birds on the beach' supplies the contextual individual).
Let us focus on the DRS condition which is interpreted in the models in terms of @m,~,t.
This condition functions as a substitute for the duplex conditions of standard DRT 6 The condition in question is: '51tere we follow Ihe 'more than half' interpretation of 'most' common fi'om the literature on GEneralized Quantiliers (see, e.g, I?,arwise & Cooper, 1981; Keenan & Westerstahl, 1997).
This interpretation is not entirely unproblematic; see, for instance, (Kamp & P, eyle, 1993).
Our use of the interpretation is, however, solely for illustrative purposes.
We can also accommodate for alternative mappings fur Q~u~nt(Most).
Similarly we cannot go into detailed discussions of other quantifiers such as, for instance, 'many' (of.
Lappin, 1988).
6Within the conlines of this paper it is impossible to give a full formal delinition of our version of plural I)RT, thcrelore we focus on the aforementioned condition.
The other definitions closely lollow those in Kamp & P, eyle, 1993: 425-427, 6776'79).
If z is a discern;re referent and t is a discourse re\[erent or constant, then DETt(:c) is a condition.
The verification condition for this condition is: (5) M ~f DETt(:C) (if" (11 II II t IIAJ'f> Let us illustrate these definitions with a simple example.
Consider: (6) At most two men walk.
The NP 'At most two men' introduces a plural discourse referent X, together with a number of conditions on that referent.
Additionally, the verb 'walk' supplies a condition to the effect that all the members of X walk.
7,s (7) X AT_MOST_2c.......
(X) man(z) walk(z) walk*(X) The first condition says that X consists of a subset of the set of all men (cm,,,~, alternatively, we could use a set of contextually given men) and that X should consist of at most 2 individuals belonging to that set.
'Â° The implicative condition is there to make sure there is no other set apart from X with (other) men who are also walking.
Such a closure condition is particularly useful for the direct representation of monotonically decreasing quantifiers.
~Â° A quantor Q is monotonically decreasing if and only if for all 7For cxpository reasons, we have left out explicit represEntations of events in this example.
But, see the next section for a DP, S with plurals and events.
8Note that when a predicate in a condition is marked with a '*', this means that the prcdicate is interpreted distributively over the atomic parts of the objects in its denotation.
"JWe assume that: @Umt(AT_MOST_2) = {(r, c) : r C c & I,'1 < 2} mln Van Eijck (1983), an allemative approach is proposed within a fl'amework which also allows for the direct representation of plural referents in DRT.
lie proposes to reanalyse monotonically decreasing quantiliers in terms of negation and monotonically increasing ones.
This, however, means that WE no longer have a direct correlation between plural discourse referents and monotonically decreasing quantifiers.
Furthermore, it prevents such quantifiers from any anaphoric uptake as in 'Fewer than ten students took the test.
They all passed it'.
609 X,Y,Z it holds that: if QXY and Z ~ Y, then QXZ.
Thus, for instance, (a) 'At most two meu walk and talk' does not imply that (b) 'At most two men walk'.
If we would represent (a) without the closure condition (i.e., there is a set of at most two men and each of them walks and talks), then (b) (i.e., there is a set q\[" at most two men and each of them walks) would follow fi'om (a).
However, if we add to the representation of (a) that there are no other sets of men who walk and talk and to the representation of (b) that that there are no other sets of men who walk, then (a) no longer follows fiom (b); the additional information in (a) that there are no other sets elmen who both walk and talk, does not entail that there are no other sets o/'men who walk.
Seeped Semantic Networks A seeped semantic network (SSN) is a triple (D, L, f), consisting of a typed DAG (Directed Acyclic Graph) D, a sef of logical contexts L and a function f which assigns a logical context (which are treated as primitive objects separate from those in the DAG) to each of the objects in the DAG.
In the DAG, there are objects which correspond with logical operators, such as implication and negation, and non-logical objects, such as physical objects and events.
The function f, which assigns logical contexts to objects in a typed DAG D, satisfies the following constraints: (I) The root object and all the objects which are direct descendants of a logical operator are assigned a unique logical context.
These contexls inherit the partial ordering (in the DAG) of the objects with which they are associated.
Furthermore, this set of logical contexts constitutes the range of f.
(II) Logical operators which have not been assigned a context by clause 1.
are mapped to the logical context of their nearest ancestor to which clause 1.
applies. (III) Objects which arc not assigned to a logical context by the clauses 1.
and 2.
are assigned to a logical context in accordance with DRT's accessibility rules.
Consider, for instance, the following sentence: (8) If a man is happy, then he whistles.
We can represent this sentence by means of the SSN in Figure 1.
In this representation, the dots represent objects, the circles represent logical contexts (an object inside a circle belongs to the corresponding logical context), the solid arrows represent attributes and the dotted arrows represent that the object fi'om which the arrow originates belongs to the context to which the arrow points.
There is a straightforward procedure for mappiug a SSN into a I)RS: (I) Logical contexts are mapped into boxes, where the nesting of the boxes is isomorphic to the partial ordering of the corresponding logical contexts.
(II) Objects are inserted into the box which corresponds with their logical context, except for logical operators.
The latter are mapped onto the appropriate operators on the boxes of their directly subordinate objects.
(III) Typing statements T(z) of a non-logical object are added to the same box as the object z itself.
(IV) Attributions/{(.% !/), where z and !/are non-logical objects, are added to the same box as z.
:~= ~ implication %% happy(e) ~ â¢ )whistle 4 #.
e'~'O0~ ""0: 4~ â¢ man Figure 1" Network for (8) By applying these rules, we obtain the following DP, S for the SSN in Figure 1 : (9) xe happy(e) man(x) agent(e,x) e ~ => whistle(e') agem(e',x) Note how the three circles in the SSN correspond with the three boxes of the DRS.
Furthermore, the discourse referent z colresponds to the object in the SSN of the type man and inhabits the same box as the conditions which correspond to the object of type happy and the attribute agent.
SSNs with Plurals In this section, we describe an extension of SSNs for countable plural objects.
This extension requires no changes to the format of SSNs.
Rathel, we introduce a number of special-purpose 610 attributions and types.
Subsequently, we specify their mapping to appropriate terms in a DRS.
We introduce two attributes on cotmlable objects: (I) quant.
The wdue of this feature is reslricted to an oltiect of the type det_type.
Examples of tlle subtypes of dcl, d, ype arc 2, > 1, < 3, all,.f>w, etc.
(11) parl,_of.
The value of this feature is restricted to countable objects.
The lnapping of SSNs which include these specialpurpose attributions and types to a l)P,s is defined as follows: (1) For typing statements T(x), where T is a subtype of del,_type: ignore the statement 7'(x) and the object x; (H) For attributions quant(x,y) such that ~z : p(,,rt_of(:,:,z) & z is an a,,cho,'& Tt(x) & 7~(y), add to the box in which also x lives the lbllowing condition: .r = T2(c7~).
Note that in this case T~ is subtype of &:t_type,.
The role of contextual individual is played by (:7,~, i.e., a constant which denotes lhe supremum of the denotation of TI.
Furthermore, we add a closure condition; (I\]tl) For attributions q'uant(:r,y) such that ~z : part_of(x, z) & T1 (x) & 7)(y) add to the box in which also :r lives the following condition: x = 5/)(z) .Furthermore, we add a closure condition; (IV) Otherwise apply the standard mapping rules for SSNs (see the previous section).
Consider, lbr instance, the (phual) SSN for lhe sentence 'At most two men walk' in Figure (2).
:, â¢ ) walk -.f : 133 V â¢ mar, at most 2 Figure 2: Network for 'At most two men wall<' This SSN contains only one logical context which is inhabited by the objects of type man and walk.
The object of type man is possibly plural: its quant attribute points to an object of type at.anost_2.
The value of the other attribute, i.e., part_oJ; is not instantiated in this case.
This is represented by means of the empty box.
When we apply the rules for mapping SSNs to DRSS, we obtain the following representation: (lO) at AT_MOST_2 c' ......
(X) man(X) walk(c) agent(e,X) z e I man(z) z c X agent(e',z) => walk(e') ~e.'~ The first four conditions correspond to the types of the nodes and the attributes of the SSN.
They are followed by the closure condition.
3 Editing
Plurals In tiffs section, we describe how plural SSNs can be used for WYSIWYM editing (Power et al., 1998).
1~ WYSIWYM stallds for What Yott See \]s What Yott Meant.
it is a technology for directly manipulating knowledge representations using natural language feedback.
WYSIWYM \]las been used in various systems for (multilingual) document authoring and query formulation.
The proposal which is presented in tiffs paper has been inaplemented as part of the M ILF, query-answering system (e.g., Piwek ct al., 2000).
The basic idea underlying WYSIWYM editing can be presented by means of a simple diagram.
W~" update,~'(!llt't'{ll(!
Feedback text with anchors \[ / / .~ select, paste, VIeW cut, copy Figure 3: The editing cycle 11SCC also: http://www.itri.l~righton.ac.uk/resea,'ch.htnfl:ff:WYSlWYM 611 Figure 3.
represents the editing cycle.
Given a Semantic Network (SN) in a knowledge base (KB), the system generates a description of the SN in the form of a 'feedback text' containing 'auchors' represeuting places where the knowledge base can be extended.
Each anchor is associated with pop-up menus, which present the possible editing operations on the SN.
On the basis of the operation that the user selects, the knowledge base is updated and a new feedback text is generated from the slew contents of the SN.
â¢ conjunction fitted_with â¢/~-~ â¢ conjunction carrierSÂ°lid bulkl~ bilge'~l â¢ pump â¢ v 1 3 â¢ purpose states equipment fire.
fighting Figure 4: Network underlying (11) Let us slow go through an example of editing plurals as it is supported by our prototype system.
Let us join in at a point where the network in figure 4 has been constructed.
12 This
network is presented to the user by means of the following feedback text: (ll) A solid bulk carries" is fitted with three bilge pumps.
Some equipment is used fox" firefighting.
Some states.
copy copy some cut Figure 5: Pop-up menu on 'three bilge pumps' The spans in bold face indicate where tile network is still incomplete.
Other spans of text represent specific objects in the network.
For instance, the span 'three bilge pumps' is associated with a plural object of the type 'bilge pump'.
When the user clicks 12In order to keep the example transparent, not all information in the network has been represented.
Attribute names on the edges, attributes without a value which arc not expressed in the feedback text and the mapping fi'om objects to their logical contexts have been ommited.
on this span, tile menu of Figure 5.
pops up.
Let us assume that the user selects 'copy'.
In that case, the object which is associated with the span is saved in a buffer.
Subsequently, the user can click on the span 'Some equipment'.
This causes tile following menu to pop up: I insert new paste Now, file user can paste the object from tile buffer into tlle location in tile network which is associated with 'Some equipment'.
This gives rise to the network in figure 6 and the following feedback text: (12) A solid bulk carrier is fitted with three bilge pumps.
They ax'e used for firefighting.
Some states, â¢ conjunction fittedwith â¢ â¢ conjunction carrierSÂ°lid bulk/~ bilge Zl â¢ ~purpose pump â¢ Z..
states fire_fighting v 1 3 Figure 6: Network underlying (12) Note that now tile first attributes of both 'fitted_with' aud 'purpose' point to the same object.
In the feedback text, this is expressed by using a pronoun for the second reference to the object.
Van Deemter and Power (1998) originally defined the 'copy' operation for singular objects.
When we move to plurals, alternatives to a simple copy operation become available.
Here, we want to discuss one of those operations, i.e., copying part of an object, instead of the entire object.
Let us return to (l 1).
Suppose that the user had chosen 'copy some' on the menu of Figure 5.
The effect would have been that a new object would have been created in the buffer with its attribute 'part_of' pointing to the object conesponding to 'three bilge pumps' (its 'quant' attribute would still have to be filled ill).
Pasting this object into tile location marked by 'Some equipment' would have yielded the following result: 612 (13) A solid bulk carrier is fitted with three bilge pumps.
Some number of them is used for firelighting.
Some states.
Note that the text contains an anchor for the yet to be specified value of the 'quant' attribute.
Clicking on the anchor activates the following menu: Selection of 'one' yields the following text, which is generated from the network in Figure 7: (14) A solid bulk carrier is fitted with three bilge pumps.
One of them is used for firefighting.
Some states.
* conjunction fitted with â¢ / f solid bulk / carrier V 1 -k â¢ conjunction,, bilge J-bilge, pumpz~ Â°purpÂ°se \[& pump~ Z.
~,~..o~ 4 I states â¢ fire_fighting t 0 3 Figure 7: Network underlying (14) 4 Conclusions In this papel, we have described some editing operations on object-oriented networks with plural objects and provided a Deeise formal interpretation for these networks in terms of a version of Discourse Representation Theory.
The networks which we have used are an extension of commonly used oo networks for natural language generation.
In particulm, our networks cover quantificational plural noun phrases such 'most N', 'few N', etc.
Acknowledgements The research reported in this paper was carried out as part of the EC Esprit funded CLIME proiect (EP 25.414).
Thanks are due to Lynne Cahill, Roger Evans and Neil Tipper for stimulating coof, eration within the CLIME temn at the University of Brighton.
Furthermore, i would like to thank Alexander Boer, Kces vail Deemtcr, Rodger Kibble, Richard Power and two anonynlous COLING reviewers for commenting on earlier versions of tiffs paper.

