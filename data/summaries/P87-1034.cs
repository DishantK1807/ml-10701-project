Intractability in GPSG Ristad (1986a) examines the computational complexity of two components of the GPSG formal system (metarules and the feature system) and shows how each of these systems can lead to computational intractability.
P86-1006
In Ristad (1986a), the finite closure problem is used to determine the cost of metarule application.
P86-1006
Instead, Ristad (1986b) provides an RGPSG roughly equivalent to their GPSG for English; the reader should consult GKPS for the accompanying linguistic exposition.
P86-1006
Ristad, E.S., 1986a.
P86-1006
Ristad (1986a) observes that finite feature closure admits a surprisingly large number of possible categories: 9(36"bT) where a is the number of atomic-valued features and b the number of category-valued features.
P86-1006
Ristad (1986b) shows how this causes NP-hardnees, when coupled with lexical ambiguity or null transitions.
P86-1006
Then the language L(G) generated by G is L(G) = { z I z e V~ and 3C â€¢ K\[(C ~_ Start) ^ C =~ zl} Ristad (1986b) proves that universal recognition problem for RGPSG is NP-complete, a significant decrease in complexity from the EXP-POLY time hardness of GPSG-Recognition.
P86-1006
Shieber, S., 1986.
C86-1050
This work is similar to that of Shieber (1986) in its attempt to reconstruct GPSG theory.
C86-1050
Third, unrestricted null transitions in ID rules are a source of intractability because they allow GPSGs to generate enormous phrase structure trees whose yield is the empty string (see Ristad, 1986a).
P86-1006
Ristad (1986a) uses the eatego~j mem~ersA~p problem to determine, in part, the cost of mapping I'D rules to local trees.
P86-1006
30-39. Ristad, E.S., 1986b.
P86-1006
In the reduction of Ristad (1986a), head features encode an alternating Turing machine tape.
P86-1006
