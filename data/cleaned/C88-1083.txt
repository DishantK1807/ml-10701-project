A new formal toolt Functorlal variables representing assertions and presuppositions lngolf MAX Department of PhllosophylLoglc Martln-Luther-Unlverslty Halle-Wittenberg GroSs SteinetraBe 73~ 4010 HallelSaale, GDR Abstract The language of classical propositional iogIc is extended by functorial variables as a new syntactical category.
Functorial variables render to be a possible integrating representation of both assertion and presupposition in one and the same logical formula different from such using classical conjunction.
O~ Introduction From a computational point of vlew there is an important difficulty of an adequate formalization of both assertion and presupposition, It rests on dividing utterances into an explicit part (assertion) and an implicit one (presupposition).
Frege 118921 refused any explication of this implicit part, because of hls ideallza= t/on that logic deals only with correct ~tatemerlts.
At least in regard of definite descriptions Russell /1905/ pleaded for such an explication.
But classical conjunction was one of its essential formal tools.
To a certain extent assertion and presuppoeltion were represented at one and the same level.
Strawson /1950/ claimed that presuppositions have to be explicated, but not at the same level like the implicit part.
Many linguists = e, g.
Klefer 11973/ believe that logical means can be used to represent both parts of utterances aeparately~ but these representations cannot be put together in one and the same logical expreeslon~ because Russell's solution Is unsatisfactory.
My intention is to show that functorlal variables render to be possible tools for integrating representation of both assertion and presupposition in one and the same logical formula, Moreover unlike Bergmann i1981/, OunglKOstner /19861 this representation Is a svntactlcal one and different from that given by means of classical conJunction (cp, Max l1986/i /forthcoming/).
1. The logical apparatus 1,1~ Functors as classical functions n Let ~t be the form of n-placed propositional 2n functors; 1 ~ t ~ 2 ~ I will use 1and 2placed functors only, These functors are interpreted as classical (i.
e, 2-valued end extensional) functions, The value-tables are= 111 1 o--71 1 1 1 0 I 1 0 1 0 110 I 1 1 1 1 0,11 1 1 0 0 0,0 I I 0 1 0 lll I~0 Oel OmO 1 0 0 0 0 0 0 0 0 1 I 1 1 0 0 0 0 1 1 0 0 1 1 0 0 1 0 1 0 1 0 1 1.1.
1 0 0 0 1 1 0 1 0 1 0 0 0 0 1.2, Functorlal variables I introduce functorial variables as e ne~ pyntactlcal category, and take the classical functors as values of these variables.
Introducing such variables we get a whole class of syntactical extensions of the classical propositional logic.
Only functorlal varlablee of the following form are considered= G~=gi_ I ~ f,g ~ 16.
The f's and g's are called components.
The f-component (g-component) is called first (second) component.
are values of 2 Semantically, ~ and ~gG2 the functorial variables f,g.
Therefore these functorlal variables (abbreviation= FV's) represent eats of functors wlth exact two (not necessarily different) elements.
Wlth respect to an intuitive interpretation FV'e =unite" the properties of both functore.
1,3, The language O Primitive symbols= 1) .pliqliP2eq2s,,., (propositional variables) (fu.ctors) 2 ~2 ^2 _2 3) Gltl,..OlUli161U2ili...iu16116 (FV=a) Formation rules= (1) A propositional variable standing alone 40B is a formula of G.
(2) Zf A, B and C are formulae of G, then ~A" and ~BC are formulae of G.
(3) G~,6Ptq ;__ iS a formula of G.
(47 Zf A is a formula of G formed without reference to the formation rulee (1) end (27a then G 2f*gAA is a formula of G.
(5) A Je a formula of G lff its being so follows from the formation rules (1) (4).
Definitions and types of formulae= Ol= pvA =df ~A D2= (A V B7 =df ~AB D4= (A===B) =df ~AB D3= (AZDB) =df ~AB DS= (A A B) =df 0~AB 2 D6= (piqt) =df G4,6Ptqt" A K-formula A K (l.
e. classical formula) le that fo~'muZs which was exclusively formed by means o? formation rules (1) and (2).
A G-for~.luls A G iS that formula which was excluetveIy formed by means of formation rulee (3) and (4).
The rul~,s of substitution of G are formulated in such a manner that (a) the p-propositions,1 variables and the q-propositional variables occurring in G-formulae act as variables of a different eort= 1, s° in any case the former occur on the left.
and the latter on the right in formulae of the form G 2 4,6piqil (b) they have the same index; and (C) there ls no'rule of substitution which allows the substitution of more complex formules for propositional variables within Gformulae, In the case of K-formulae we have the usual rule of substitution.
Connection conditions of FV's= Now Z explain how several FV's occurring in the same formula ere connected, The conditions of connection are chosen in such a way that every formula containing FV°e represents exactly two formulas without FV*s= (1) Let A G be a G-formula of G.
I define both FV-free formulas in two steps= (S) Let G~,g be the matn-FV of AG.
Then AG1 AG/G 2 /~2~ AG1 =dr ~ f,g, pf~ t.e. is the formulao which results by substitution of ~ for G~g, \] AG2 A G { G 2 /~2 t =df i f,glW9~* (b) Let K R be e functor or e FV of e wellformed part of A Gl (AG2), end let this wsll=~:ormed pert be more complex than a formule of the form G 2 With re4~6Plqt ° spect to all well-formed parts of A GI (A G2) I generate the formulae A GEl and A GE2 by substitution of the functor indicated by the flret component of the mainFV of the first argument of K 2 for this mstn-FV, and by substitution of the functot Indicated by the second component of the matn-FV of the second argument of K 2 for thla matn-FV.
The formulae A GEl end A GE2 generated by this method dlffer only in the mafn-functor.
They are both K-formulae.
AG/A GEl and AG/A GE2 are abbreviations for all substitutions in A G which generate A GEl and A GE2.
respectively. (2 7 Let A be a formula of G which can contain both functore and FV's, A well-formed part of A is celled G-maximum tff (t 7 A is e G-formula= end (1t7 its governed connective is not a FV.
Let AI,..oeA u be all G-maximum wellformed parts of A.
Then AE1 A(A1/A~E1, -.GEl =df,°.,,Au/A u 7 AE2 GE2 A "A GE2" A(AI/A I, * U / U )" =df " "" 1o4o Validity of formulae with FV's (1) A G-formula A G ls valid tff both A GEl end A GE2 are valid in the classical sense= (2) A formula A is valid tff both A E1 end A E2 are valid in the classical sense.
2° Relations to classical logic My system is semantically equivalent..w.it h the .F!aaelcal PrOPOSitional logic in the sense that all FV'e can be eliminated by replacing every formula A of G by the conjunction of its both closed substitutions, t.
e° A E1 end A E2In this manner we get s complete and consistent system of classical logic.
It hoZds= A formula A of G ls valid lff its corresponding classical formula AE1A A E2 is valid.
There are some specific differences between the starting formula with FV'e and its analogous formula without FV'eo One important difference is the following= After replacing the propositional variables by values 1 or 0 the formula A gets none of these values and it remains,up eatured.
Only if this formula ls transmitted in one of its both closed substitutions A E$ or A E2 -, then it gets e value.
With respect to formulas with FV's which are neither tautologies nor contradictions there is another Important difference: Let A be 409 such a formula.
Then often A ~-~(AE1AA E2) is not valid, 3, Assertion and presupposition The introduction of expressions of the form G~,6Plq i_ renders to be a possible unconventional approach to assertion and presupposition.
I postulate that the p-propositional variables represent elsments of a set of assertions, and the corresponding q-variables represent elements of a set of presuppositions.
The FV G 2 4,6 constitutes an ordered sequence of both sorts of propositional vat la~s:-~ p re eu ppo sl t ion component !piq~ i presupposltion expression: ~2plql G2, (~Plql ~--ql ) I L-J-J--~assertlon expression : ~2plql --assertion component (~2piqi~ pi ) Concerning logical relations between several sentences both assertions and presuppositions can influence this relation.
In order to form s correct translation of such compound sentences their simple parts should be translated into expressions of the form G 2 . Let A G be a G-formula of G.
Then 4,6Piql we can put on the following generalization of our interpretation: A GEl .assertion expression A GE2 presupposition expression.
So ws get a new syntactical method to explicate assertion and presupposition in one and the same formula.
Unlike 4-valued/2-dimensional approaches our language possesses an enrlchment of syntactical expressive power.
4. FV's and functors The explication of both assertion and presupposition by means of formulas of the form (plql) dlffers from that one by means of claselcal conjunction, because (Plql)--(Pi Aql ) is not valid.
Because of TI: (Pi A ql) ~(Plql), end T2: (plql)~(pl V ql) the representation by means of G 2 is 4,6 stronger than that one by conjunction, but it is weaker than that one by disjunction.
5. Negations Because of 2 T3= Gll,ll(plql)(plql)~ r-~q 1 410 the 2-placed FV G 2 11,11 can be interpreted ee presupposition-rejecting negation.
G 2 13,6 can be interpreted as Presuppoeitlon~resefving negation, because, 2 2 2 G~3,6 ( "" .r--~13~4Plql~6plql~Pl PlqlJ(PiqlJ'--1 ~2-2 -2 ~.= A6p4plqlP6Plql~ql.
6. Extensions of the language G 2 Starting_point: G4a6Plqi.
~t~p 1~ Dropping index-equality of propositional variables: G 2 Hence it follows 4,6Piqj • e more direct formalization of sentences with the same presupposition: 2 2 G4,6plq 1 and G4,6P2q 1, ~t~p 2~ Admitting of repreeentetlon of several presuppositions (of one simple sentence) connected by propositional functors= 2 G4,6P1(q I A q2).
~t~p 3~ Admitting of functional dependence between propogltionsl varisbles (i, e.
admitting of an interaction between assertion and presupposition of simple sentences): 2 G3, sPlq 1" ~t~p 4~= Admtttin 9 of more than two components (e.
g, 2 presupposition components)= 3 r -F ~16Plql i~ pl (assertion) G 3 3 16,52, B6Ptqtri-~52Plqtrl~qi (preeuppo3 __ sttlon I) L~86Plqlri~ r I (presupposition 2).
~t~p 5~ Combinations of ssveral steps, References Bergmann, H.
(1981) 'Presupposition and twodimensional logic'.
Oournal of Philosophical Logic 10, pp.
27-53. Frege, G.
(1892) 'Ober.
Slnn und Bedeutung: Zeltschrlft for Phtlosophte und phtZosophleche Krttlk C, pp, 25-50.
3ung, U.
& H.
KOstner (1986) 'Etn KalkO1 zur Behandlung yon Negation und PrSeupposltlon und seine Anwendung auf die eemantteche Beschretbung lexlkaliecher Elnhelten'.
in= Kunze, Do; Dung, U.
& H.
KOetner: Problems der Selektton und Semantlk, Berltn=Akademie-Verlag, pp.
155-212. Kiefer, F.
(1972) 'Ober Prasupposttlonen'.
in: Kiefer, F° (ed.)= Semantik und generarive Grammattk, Frankfurt/H.= AthenSum, pp.
275-303° Max, I.
(1986) 'Pr&euppoettionen Etn Oberbltck Ober die loglechen Dsrstellungswelsen und Vorschl&ge zu ihrer loglschen Expltkatlon milreis Funktorenvarlablen'.
(= Dissertation A, unpublished) Halle.
Max, Z, (forthcoming) 'Vorsehl~ge zur loglschen Explikation von Negatlonen mittele Funktorenvariablen'.
Llnguietische Studlen.
Russell, B.
(1905) 'On denoting'.
Hind 14, N, S,, pp.
479-493° Strswson e P.
F. (1950) 'On referring'.
Mind 59, N, S.= pp. 320-344 .

