UN Mf:TALANGAGE,DE GRAMMAIRES TRANSFORMATIONNELLES APPLICATIONSAUX PROBLEMES DE TRANSFERTS ET DE GENERATION SYNTAXIQUES G.
2300 A Jauvier 1967 G.
VEILLON J: VEYRUNES B.
VAUQUOIS k Cette publlcation pr~sente une partie des r4sultats acquis par l'4quipe de recherche sur les modules au cours de l'ann~e 1966.
Cette partle est essentiellement consacr~e ~ la description de l'outil m~tallnguistique utilis~ pour les grammaires transformationnelles du 8yst~me de traduction automatique.
Ces grammalres feront l'objet de publication s~par~es lorsqu'elles seront suffisamment au point.
Les auteurs expriment leur gratitude ~ Monsieur le Professeur J.
P. BENZECRI qui a bien voulu s'int4resser h cette ~tude et h la D.R.M.E. dont la participation financi~re dans le cadre du contrat 65-34-497 en a permis la r~alisation.
PLAN INTRODUCTION TRANSFORMATION DE STRUCTURES ARBORESCENTES 1 ° D~finition des structures arborescentes a) n-graphe b) Structure c) Structure arborescente 2 ° Representation des structures arborescentes et des arborescences munies d'une relation d'ordre restreinte 3 ° Chemins et relations sur une structure arborescente a) Propri~t~s poss~d~es par un sommet b) Construction des relations simples c) Construction des relations multiples 4 ° Reconnaissance d'une figure dans une structure arborescente a) Schema de figure b) Figures dans une arborescence munie d'une relation d'ordre restreinte c) Figures dans une structure arborescente 5 ° Transformations a) Famille d~arborescences b) D~composition d'une arborescence c) Insertion d'arborescence d) Transformations synth~tiques e) Transformations 6 ° Grammaires trans~ormationnelles a) R~gle de transformation Bur une structure ~partie gauche ~ partie droite applic~tio~~ d'une r~gle de transformation ~criture et exemples b) Gra~naires transformationnelles II PROGRAMMATION l ° Representation d'une structure 2 ° Description de la reconnaissance a) Balayage g~n~ral b) Recherche d'une figure correspondant ~ une pertte gauche de r~gle donn~e 3 ° Application des transformations I~I APPLICATION.AUX PROBLEMES DE TRADUCTIONAUTOMATIQUE 1 ° Le r61e des grammaires transformatlonnelles dans le syst~me de traductlon.automatlque 2 ° Application au module M3 INTRODUCTION Au cours de ces derni~res ann~es les grammaires transformationnelles ont occup~ une place privil~gi~e dans la litt~rature relative aux syst~mes de structures linguistiques, auxprobl~mes de g~n~ratlon syntaxlque et aussl, ~ventue.llement, ~ quelques probl~mes de reconnaissance li~s ~ la traduction automatique \[IJ, \[2J, \[3\], \[4J, \[5\].
Ces grammalres transformatlonnelles et, plus g~n~ralement, les transformations brillent par le nombre de d~finitions dont elles ont ~t~ l'objet.
En effet, un auteur qui ~tudie un probl~me linguistlque adapte la notlon de transformatlon dont il a besoin au but qu'il poursuit.
Attach~e & un syst~me llnguistique cette notion fever une signification partlcularis~e par le probl~me traitS.
La transformation indique comment, quelquefols expllque pourquoi tels ph~nom~nes se pr~serrtent.
Apropos des probl~mes que nous avons rencontres lors de la r~alisation de certalns modules du syst~me de traduction automatique nous avons ~galement ~t~ conduits & d~finlr des transformations.
~ cette multipllcit~ des d4flnitions s'oppose, en g~n~r@1, une certaine falblesse des moyens d'expresslon et des algorlthmes d'ntillsation.
En effet, il est souvent propos~ des "r~gles de transformation" mals le formallsme de leur ~crlture ou blen n'est pas rlgQureusement d~fini ou blen se heurte ~ des difficult4s mat~rlelles insurmontables si l~on veut ~tabllr routes les r~gles d'un module r~el et non d'un module r4duit.
En outre, des probl~mes li4s aux algorlthmes d'emplol de telles grammalres transformationnelles sont peut souvent abord~s.
Sans pr4tendre r~soudre tous ces probl~mes~ ~ partlr des notions de transformations d~j~ rencontr~es et de celles q~e notre syst~me de traductlon auto i matique faisalt a pparaitre, nous avons essay~ de syst~matlser cette notion.
! I! Les ~,od~les transfor~tionnels an traduction automatique Rappelons la place de ces modules dans ie syst~me de traductlon automatique du C.E.T.A. L'article "syntaxe et interpr~tation"\[6\]pr~cise -2le module de reconnaissance syntaxiqu9 des phrases de la langue source (modUle M2).
Ce que l'on obtient ~ la sortie de ce module est une structure arborescente (~ventuellement plusieurs) de la phrase propos~e.
Cette structure ~tahlit un syst~me de liaisons entre les mots qui constituent la phrase en indiquant pour chaque liaison la r~gle de grammaire qui a permls de l'obtenir ainsl que l~l~ment consid~r~ comme gouverneur.
Le but poursuivi par le module suivant (M3) est de transformer cette structure pour obtenir une ~valuation s~mantique des liaisons syn~'i-i taxiques.
On est done conduit ~ substituer ~ une ou plusieurs r~gles for~' melles, une'~tiquette" (telle que "agent", "objet", "consequence", etc)... qui dolt indiquer, la fonction du mot ou groupe de mots consid~r~ dans la phrase.
En outre, pour 4viter la prolif4ration des ambiguit~s de construction syntaxique, le module M2 peut associer ~ une phrase une seule structure qui, en fair, repr~sente une famille de structures bien d~termin4es.
En consequence le modale M3 dolt ~ventuellement corriger le syst~me de llaisons propos~ par le modale precedent pour aboutir ~ une articulati6n correcte des fonctions de chaque mot dans la phrase.
Le probl~me de la transformation consiste done ~ remplacer une structure arborescente par une autre en changeant les noms attribu~s aux somets, en supprimant ou en rajoutant certains sommets, enfin en modifiant la relation d'ordre du graphe initial.
Le module suivant (M'2) fait apparaItre le m~m~ probl~me.
II s'a'git maintenant de transformer le graphe associ~ ~ une phrase dans le module M3 (sorte de langage pivot) pour en d4duire une construction syntaxique de surface dans la langue cible.
Ainsi, les transformations qui interviennent dans ces deux modales, de m~me que celles qui sont mentionn4es dans la litt~rature peuvent se ramener ~ un probi~me math~matique unique.
C'est celui de l'application d'un ensemble de graphes dans un autre ensemble 'de graphes.
Ii semble d'a ~ pros l'usage actuel que l'0n fait des transformations, que l'on puisse limiter le probl~me pr4c4dent ~ des graphes qui sont seulement des arborescenees sans perdre de g4n~ralit~o Encore faut-il mentionner que ces ar escences -3peuvent comporter des relations d'ordre lateral, c'est-~-dire,que tousles descendants directs d'un sommet quelconque sont totalement ordonn~s, Dans ce qui suit nous nous proposons d'~tudier les transformations de structures arborescentes d'un point de vue formel en soulignant quelques probl~mes (non r~solus) et en examlnant un type de langage outll pour la descrlptlon de ces transformations.
Enfln, la derni~re partle montre l'appllcatlonde ce m~talangage ~ l'~criture des grammaire s des mod~les 143 et M'2.
-4T R A N S F O R MA T'I 0 N S D E S T R U C T U RE S A R.B 0 R E.S C E N T E S I ° Ddflnltlondes structures arborescentes a) n-graphe Un graphe (X,p) est la donnde d'un ensemble X et d'une application multivoque P de X dans X On peuc dire aussl que (X I ) est la donn~e d'une partle de~.
Solent Pl' ~2'....
' Pn des applications multivoques de X dans X.
Nous,ppeUeron~ n-g~aphe ie <~+l)-upl~ : (X, ~ ' ~2' "'" ' ~ ) ~on, id~,~, • comme le graphe union des graphes (X, ~1) lequel tousles arcs sont d~sign~s selon leur appartenance ~ 1'application d'oO ils proviennent Exemple Soient : X ffi Ixl, x2, x3, x4, xs~ r' 1 f Xl ---# x 2, x 3 : x 2 ~ x 4 x 4 ---$ x 3, x 5 Ix I ~' x 1, x 2, x 4, x 5,\[-s.
2 x --+ xl, x3, x 4 Le 2-graphe {X, T~I,T~2) est reprdsentd par la figure 1 I -5. x 1 5 graphe (X, r'1) ~ x 3 • x 5 x3 X2 graphe (X, r2) rl : ---+ 2-grmphe (X, 1-1' 1"2) r2 : x 5 b) Structure Soit un n-graphe (X~ VI' "'" ' ~n)" D~signbns par V un ensemble de symboles (vocabulaire ou alphabet), et soit ~ une application univoque de~Cdans-v'.
Nous appellerons "structure", le (rrb3)-uple : (X, "v-, PI' "'" ' 1-n' A) On obtient ainsi la structure ~ partir du n-graphe en attribuant g chaque sormaet x.
du n-graphe le symbole appartenant ~-v'au moyen de ~.
1 Ainsi
des sommets distincts de la structure peuvent ~tre d~sign~s par le m~me symbole.
Exemple Reprenons le 2-graphe ~u paragraphe precedent et soient : "V" = (a, b, c) -6x I x 2 x 3 x 4 x 5 a b c a c La structure(X, V, VI, ?2'A> est indiqu~e sur la figure 2 figure 2 c) Structure arborescente 0n appelle "structure arborescente" une structure le graphe ~X, T~I) est une arborescence, c'est-~-dire : I) il existe un so.met XoE3C unique tel que r I x ° = "~ x = y, y£X 2) pour tout sommet x ~ x °, I 3) le graphe est 'connexe L'application T" 1 6tant d~termin~e, l'appllcatlon ~2 doit satisfaire aux conditions suivantes : Be graphe (X, T'2) est tel que . tout sous-ensemble r" I l x correspond une composante connexe de @, -7r I I x, -pour chacun de ces sous-ensembles . la relation d'ordre associ~e ~ ~2 est to,ale.
Ainsi~ dans tout sous-ensemble X i = ~l-lxi, il existe un XA6 X i unique tel que ~2"ixA et un XB(~X i unique tel que r 2 x B = ~ " La donnde du.'2-graphe CX, rl, r.2 ) constitue une arborescence, munie d'une relation d'0rdre restreinte telle que l'a d~finie HOLT \[7\] On pout interpreter le graphe (X, rl) cormne une relation de.
"paternitd" : "y est p~re de x" ~T~ I x = y, De m~me, le graphe (X, r2) exprime un ordre entre les fils d'un m~me p~re : ~2 x = y implique que x est n~ avant y Un sommet de type x A est dit "AinU" ; un sommet de type x Best dit "Benj amln".
Exemp le Soit le 2-graphe ~X, T~I, ~2:) o~ X = (A, B, C, D, E, F, H, I) A B C D E F G H I ~I : A B B B A A G G A ~2 : ¢ B F C D E F G .H I-~ D E ~ G ~ I (~ repr~sent~ par la figure 3, qui est une arboreScence munie d'une relation d'ordre restrelnte.
-8B A 1~ 1 __.>..
figure,3 P2 Si nous nous donnons en outre : "v'= (a, t~, c, d, e) et ~: A B C D E F G }{ I a b d e e c b d e La structure •(X, ~/, T'I, r2, A) est une structure arborescente cf figure 4 a d e e d e figure 4 '+ "92 ° Representation des structures arborescentes et des arborescences munies d'une relation d'or~rerestreinte : ~ On s'attache surtout ~ larepr~sentation des arborescences munies d'une relationd'ordre restreinte, celle des structures arborescentes se d~duisant facilement de la premiare.
Pour des raisons algorithmlques, nous repr4senterons une tel!e arborescence ~ l'aide + de trois applications biunivoques, noises ~, K et W, et d~finies de la fa~on suivante : :.
" " ly ~ (x) = y si et seulement si PIy = x et ~2 = @ (fils ainU) ~ (x) ffi y si et seulement sl r2 x = y (frare cadet) ~ (x) = y sl et seulement si ~i x = yet si ~2 x = (pare du benjamin) Reprenons l'arborescence du paragraphe precedent (figure 3).
Sa repr4sentation au moyen des fonctions ~, ~ et ~ est:alors celle de la figure 50~ l'on a repr4sept4 aussi la structure arborescente d~j~ mentionn~e.
! A a Bb, ~-" ~ F ~ ~ 'c "" C d D E e e G b . +.
+ H d ~ "ie +9 '+ f__i~ur e___~5 -iOOn retrouve certaines des fonctions d~crites par A.
HOLT ~\] pour representer les arborescences munies dGune relation d'ordre restreinte.
On peut~aussl consid~rer cette structure comme la donn~e du3-graphe (X, ~, ~, ~ ) du vocabulaire~/ et de l~application~ (~ : E--+'~) 3 ° Chemlns et relations sur une structure arborescente -.
D'apr~s les d~finitlons de ~, ~, ~ ~ partir de 71 et ~2' .p°ur tout couple de sommetsdistincts (x, y), il existe au moins un chemin dWoriglne x et d'extr~mit~ yet il exlste un chemln unique sans circuit.
Ces chemins Correspondent ~ des compositions des fonctlons ~ ~ ~ ~ ~.
Soit f" une composition de~ ~ ; ~ et X6X un sommet Si fx ex~ste~ c'est .un sommet y unlquede ia structure ; en.outre f-ly exlste etest le seul so.~et x.
Un tel chemin caract~r!seune relatlon entre deux sommets..
Nous nous propos0ns de d~terminer les moyens de construire des relations 'qul poss~dentles propri~t~s suivantes : : des relatlons l-alrecorrespondant & des propri~t~s poss~d~es par un sommet Consid~r~ isol~ment.
des relations blnalres que nous rangeons dans l'une des deux classes sulvantes : des'Yelations simples"Ces relations sont tel!es qu'~ tout x i ii corresponde au plus un Yi en relation avec x i.
4 des "relations multiples '' A tout x iil correspond un ensemble X.
CX :de son, nets y tels que xiRY (y~Xi), Xi poss~dant en l g~n~ral plus d'un ~l~ment.
9~.~.~}~.~-}~-~P.~}~P}~-~ un ordre total sur les ~l~ments de X i L'importanCe de cette propri~t~ .................................... i apparaItra lorsque l'on travaillera sur la structure oO'plusieurssommmets peuvent porter le .m~me nom (symbole de V).
j Torte relation peut 6tre Consid~r~e comme un pr~dicat.
Si Rest une relation 1-aire, Rx est un pr~dicat ~ 1 variable (x poss~de la propri~t~ R).
-llSi Rest une relation binalre, x R.
y est un pr~dicat ~ deuxvarlableset l'ensemble X.
des so~nets y li~s ~ x.
~ar Rest l'extension du pr~dicat I 1 x.Ry. i I I ' X i " {Y / xiRY} q I ",~a) Propri~t~sposs~ddes " par un son,set ' D'apr~sles d~finltions de ~, ~, ~ certains sommets poss~dent des .propri~t~s partlculi~res.
Ces propridt~s sont caract~rls~es par un -pr~dicat, Exemples ."Etre la racine de l'arborescence" d~algnd'par ~ Ainsi-~x eat un pr~dicat vrai si et seulement sl x est la racine de l'arborescence : ~x<-#~x= ¢ ^ ~x= ¢ ..
"Etre un fils ainU" J~x +-~'Ix = ¢ "Etre Un benjamin" "N'avolr pas de fils" ~ ~x e-~ = ¢ A partir de ¢es propri~t~s ~l~mentaires on.
peut construire des propri~t~s plus compllqu~es Par e,,.xemp le "Etre fils unique ''• / ~x +-~ J~x ^ ~x ~(On peut aussi ~crire~x~x ~a w x) "Etre le point unique de l'arborescence" "~x ~ ~.~x ^ ~x -i2b) Construction des relations simples Le cas ie plus simple de construction de telles relations est celui qui provient d'une composition d~termin~e de fonctions ~, ~, d~crivant un chemin sans circuit.
J Exemple : Etablir la relation : "3i&me FS" o~ x 3i&me FS y signifie ~ly est le troisi&me fils de x" -~i~ Alors : • x 3i&me FS y.<---->y =~2 0L x En nous referrant & l'arborescence de la figure 5 A 3i&me FS G est vraie et G est le seul sou=net qui soit dans cette relation avec Ao.
~ Un cas plus compliqu~ est celui o~ ia relation x R y est satlsfaite si et seulement si, fl ' f2' "'" ' fn ~tant des compositions de ~,~,~, il existe au plus u,n j-(l~j~n) tel que y = fix ; le nombre n n'~tant pas connu mais seulement major~ par le nombre d'~l~ments de X.
• On utilise alors des pr~dlcats munis de quantificateurs.
Exemples : Etablir la relation : "FNE" o~ x FNE,y signifle "y est le fr&re ain~ de x" Alors : .n x FNE ye---> V Y C~.'rr.~r = X r=O On volt qu'ici la relation peut ~tre r~flexive six est lui-m~me un aln~.
Si l'on veut ~liminer ce cas, il suffit de d4finir FNE comme la conjonctlon du pr~dicat d~j& 4crit et du pr~_dicat y ~ x (o u bien --~ ~ (y)l Etablir la relation "PERE" o~ x PERE y signifie y est le p&re de~x n x PERE y~> U y = ~ ~ rx r=O Comme la relation simple x AINE y (signifiant~y est le fils ain~ de x) eat d~finie par x AINE y <---)y =~ x, on peut aussi d~finir FNE par o J -13Etablir la relation "FBENJ" oO,i x FBENJ y signifie y est le plus jeune fr~re de x n x FBENJ y~--->V (y = ~rx A ~y) r=O A route relation simp.le R, on associe la fonction Rf d~finie par y = Rfx si et seulement si xRy c) Construction des relations multiples Darts de telles relations xRy peut ~tre v~rlfi~ par un ensemble de sommets y pour un x d~termin~, et Xl = {y/x i R y~ dolt ~tre totalement'ordonn~ On donne alors le moyen d'~num~rer r~cursivement les ~l~ments de X i Dans ce but, on d~termine un premler ~l~ment Yl de la m~me mani~re qu'on a constrult les relations ~Imples Puis on donne le moyen de calculer Yi+l connalssant y.
Exemples Etablir la relation "FRERE" oh x FRERE y signlfie que y est fr~re plus jeune de x Alors : f {y/x FRERE y} = Yl =b'x Yi+l -~\[ Yl Etablir la relation "FILS" 05 x FILS y slgnlfie query est fils de x {y/x F Ls y} -{ Yl-x Yi+l = ~ Yi Etablir la relation "COFILS" oO x COFILS y est vraie si et seulement si y = x ou y est un fils du p~re de x {y/ x COFILS y} = { Yi+IYl = FNEfX=~yi L'ordre total induit est celui donn~ par ~ sur tousles fils du m~me p~re.
14Enfin, ~tablissons la relation "GOUV" o~ x GOUV y est vraie si et seulement si y = y-ix (x est le cadet de y) ou y se trouve dans la li~e des benjamine du premier y.
~ ~l x Yl Yi+l -DFILSfYi oO DFILS est une relation • simple (y est le dernler fils de x) n x DFILS Y<--)V Y = ~r~xA~Y r=O Ainsi une relation multiple's'exprime au moyen de deux relations slmples, c'est-~-dire au moyen de 12 fonctlons f et g I Yl = fx Yi+l = gYl L'~l~ment Yr de rang r dans l'ensemble X i = {y I xRy} est alors obtenu • par Yr -gr'Ifx Si gr'Ifx n'existe pas, c'est que X i contient moins de r ~Idments.
P0ur que chaque dl~ment ne soit ~num~r~ qu'une lois, il est n~cessaire que n n A pGl Yi+p ~ Yl i-I -154 ° Reconnaissance d'une figure dans une structure arborescente a) Schema de figure Soient RI, R2, ...., Rn des relations binaires (simples ou multiples).
Soient PI' "'" P des propri~t~s.
m On ddfinit un schema de figure F connne une expresslon formelle sur le vocabulaire terminal {RI, ...., Rn, PI' /~" ' Pro' C,)} construite de la mani~re suivante (I) Si R.I est une relation alors (Ri) est un schema de figure (2) si Pi est une propri~td, alors (Pi) est un schema de figure (3) si F est un schdma de figure et R.
une relation alors (RiF) est un schema de figure i (4) Si F Iet F_2 sont deux schemas de figure, alors FIF 2 est un schema de figure (5) Tousles schemas de figure sont donn~s par (I),(2),(3) et(4).
dR> <P> ~F> En utilisant le symbolisme de d~finition d'ALGOL on a : :: = R 1 I R21 ''' \]R n :: = P1 I P21 :: = (<R>) I (<P>) \[ (<R> <F>)I<F> <F> (1) (2) (3) (4) Exemple oO l~ik~n pour l~k~5 et l~j~m pour i~<2 est un schema de flgure F° 16En effet PJl) est un sch4ma de figure par la r~gle de construction (2) fRi ................. ...................................... p / R \[P h% • i q ~ .Jl ....... -' ........
(3) 5 ~, i,~:~t .... ......................
R R P ~ R R . ";,~P~i;::'~' Consid4rons maintenant une arborescence munie d'une rel~ion d'ordre restreinte ~.
Soient X l'ensemble des sommets de ~, Xo .un.
sommet quelconque (~'X) et Fun sch4ma de figure.
On dit que x admet le sch4ma de figure F (dans~) si et seulement si : O la proposition F (Xo) est vraie F (x) 4tant la proposition d4duite du O pr4dicat F (x) d~fini de la'mani~re suivante : ' -17Soient FI, F2, F 3 des schemas de figure Si F 1 est construit au moyen de la r~gle (I) F I = (Ri) alors F I (x)<-->yxRiY x, y~X Si F 1 \ est construit au moyen de la r~gle (2) F I = (Pj) alors F I (x)<--->Pj (x) est construit au moyen de la r~gle (3) .,,~ :(,,~,.,~ ..,or.,.~ (x,.--.V\[x,V.,,,,,,.,\] x~X x, y6X Enfln si F 3 est construit au moyen de la r~gle (4) F 3 = F I F 2 alors F 3 (x)<--->F I (X)AF 2 (x) x~X Ainsi le pr~dicat associ~ au schema de figure F donn~ en exemple est : F (x vrx,,,,,,1 .,.
XlL 1 ~2L -" • J x 3 .~ x 4 -I x51. ~.'.~!
Of~ x, Xl, x2, x 3, x4, x 5 ~ X ~) les sommets qui interviennent en rant que variables li~es dens les quantificateurs sont tousles $1~ments diff~rents de X.
Pour formaliser cette deuxi~me condition, on remarque que chaque relation introduit un sommet ;donc si F comporte p relations, Xl, ...., Xp Stre tous diff~rents les uns des autres.
Alors soit le pr~dicat D 2 (Ul,U2)<---+Ul ~ u 2 Par r~currence on construit : k Dk+ I (u I, Enfin on pose doivent "'" ' ~k' uldrl)~-->Dk (Ul' "'" ' Uk)AAD2 (uj'Uk+l) jll D I (u) toujours vrai.
18Ainsi, F dtant un schdma de figure ~ ~ relations, la proposition "Xo admet le schema de figure F (dans~)"~--->F (Xo)ADp+ I (Xo, Xl, ~ ..., Xp) L'extension de ce pr~dicat est l'ensemble des x E X qui rendent ce pr~dlcat vrai, b) Figures dans une arborescence munie d'une relation d'ordre restreinte / Ddsignons toujours par~ cette arborescence ; X est l'ensemble de ses sonanets et XoeX e~ Fun schema de figure comportant n relations: Au pr~dicat d'l variable F (X) on associe le pr~dlcat &n % I variables F (n+l) (x, Xl, ...., x n) d~duit de F (X) en supprimant les quantificateurs qui lient les variables Xl, ..., x n.
On appeile ~ une figure de schema F et de pivot x dans~ tout dl~ment de 0 l'ensemble des (n+l)-uples (Xo, Xl, ...., Xn) o~ Xo, Xl, ...., XnGX et F (n+l) (Xo, Xl, ...', x n) est vrai.
On peut alors d~finir un ordre total sur les figures de schema F et de pivot x de la mani~re suivante O Soient~ = (Xo, Xl, ...., Xn) et ~' = (Xo, X'l, ...
~ X'n) deux telles figures Soit k le plus petit indice tel que x k ~ x' k (k ~ o puisque x ° est pivot, et k~.n puisque ~et ~' sont diff~rentes) A x k et x' k est associ~ela relation Rik xj = x'j et xj Rik x k telle queil exlste un J< k avec dans ~ et xj Rik x' k dans ~'.
La relation Rik est dvidemment une relation multiple (sin0n x k peut alors ~crire x k et x' k sous la forme = X'k) ; on Xk = grf xj et x' k = gZ~f xj ' 7 On ordonne~: ~t ~' par la relation ~<~' si et seulement si r<r' -19Montrons que cette relation sur les figures est un ordre total : II est facile de volr que cette relation est non r~flexive (tousles x k sont ~gaux) et antisym~trique (elle est d~duite de la relation d'ordre sur r).
Montrons qu'elle est transitive : En affet, .i l'on a ~ ~' et ~'<~", alor.
soient ket ~ les plus petlts indices tels que : x k ~ X'k et x'~ 4 x"~ sl mln (k, ~) = k, alors k est le plus petit indlce telque x k ~ X"k, car x' k = X"k, et l'on, ~<~" pour la m~me raison que ~<~' .i .in (k, ~) = ~, alors x~ ~ x'~ ca r ~ = ~'~ et ~< ~" II est bien ~vldent que cet ordre est total, pulequ'il est d~finl pour ~ut couple de figures.
Exemple dans lequel Reprenons le schema de figure F propos~ au paragraphe 4 a Ril est la relation FILS Ri2 FILS Ri 3 ..............
FRERE R ..............
COUSING i 4 Ri5 ..............
CADET Pj est la propri~t~ "n'avoir pas de file" ~ (paragraphe 3 a) 1 Pj2est la propri~t~ "~tre benjamin" ~ (paragraphe 3 a) '-20x COUSING y ~tant vraie si et seulement siy est un cousin gauche de x et d~finie par : -1 Yl =o~ PEREf x ~ Yi si ~ @ Yi+l Alors le schema de figure s'~crit : Soit l'arborescence ~ suivante : i 2 > 5 > • J/\ figure 6 16 Si l'on se donne comme pivot le sormuet 5, nous obtiendrons dans l'ordre les figures suivantes : (5, 9, 13, 14, 3, 16) (5, 9, 13, 14, 4, 16) Ii peut se faire qu'un schema de figure en contienne un autre.
Soit par exemple -21Du m~me pivot, le son.net 5, on obtient, dans l'ordre, les figures (5, 9, 13, 6, 3, 16) (5, 9, 13, 6, 4., 16) (5, 9, 13, 14, 3, 16) I5, 9, 13, 14, 4,' 16) • (5, 14, 15,! 6, 3, 16) (5, 14, 15, 6, 4, 16) (5, 14, 15, 9, 3, 16) (5, 14, 15, 9, 4, 16) qui contiennent les 2 figures pr~e~dentes Rema.rque : Etant doun~ un sous-ensemble de n.
+ 1 point 6 quelconque dttme arborescence, (o~n~<card (X)~ ce sous-ensemble est une .figure, car-on peut toujours trouver un schema de figure correspondant.
c) Figures dans une.
structure arborescente ....
Soit S une structure arborescente ; S est donn~e par une ar; borescence munie d'une relation d'ordre restreinte et par-tm voca; bulaire Vet une application Z~ de X dans V.
S= (J~, V, ~).
" R de-F on assocte un F ~tant un schema de figure, ~ chaque relation ik symb01e,ikE ~r ~j {.} :.
On assocle ~galement un symbole ao£VU~ } ~ la place du p!vot: Soit' xoE X unpi~ot,, on appelle figure de schema, F et de •pivot x ° S, toute figure de s¢li4ma F et de pivot X O k o~k~n A = ou Xl k al k dans dans J~ telle que-pour tout aik -22I a figure 7 Le vocabulaire V = {a, b, c, d} et l'application ~ est repr~sent~e sur la figure.
Consid~rons le schema de figure F' (paragraphe 4 b) qui donnait 8 figures de pivot x 5 dans Alors l'expresslon : * .~FILS c~FILS "(e))) (FILS d(COUSING c)) ~ADET a C~)) appfiqu~e au pivot x 5 fournit dans S les deux figures (5, 9, 13, 6, 4, 16) (5, 9, 13, 14, 4, 16) 5 ° -Transformations a) Families d'arborescences Soit un ensemble X et.deux sous ensemble X', X" .tels que X'C X, X"CX et X'~ X" = ~ . Soient deux arborescenees " ~= (X', r'l, r'2) et ~'~ (X", ~, v~) •,23Nous appe\]lerons famille d'arborescences l'ensemble {~ ;~ que nous.pouvons noter: (X'OX", rl, I" 2 avec ~l x =~\], x' six~X' et r I x =~l.~ x si xeX" b) iDgcomposition d'une arborescence Soient une arborescence (X, ~1' ~2 ) et un sommet x, on se proposede d~finir les deux applications suivantes : Si y4 x r' 1 y = rly y = x r,y = ¢ y ~ ~21 x \["2 y ='~2 :y y=x r' -2Y=¢ 1 y = x ~2y -U2 x sly 1 alors (X, F'I,Y'2) est une famille de deux arbores.cences ~', ~", telles que X'UX" = X ; F' Iet r' 2 rdpondent aux axiomes de d~finltion des X = ¢ •(racine) arborescences, le sommet x ~tant tel que ~l'X = r' • 2 Nous appellerons d~tachement de l!arborescence de racine x(DETA(x~ une telle operation.
Elle a pour effet de d~composer une arborescenCe en deux arborescences~ En utilisant les fonctions~,~et~,DET~)peut se d~crire ainsi : si ~(y) ~ x, o<'(y) =~(y) si ~(y) = x, si ~(y) = x et si si si ~ (y) ~ x o<'(y) = ~(x) ~(x) ~ ~, ~'(y) = ~(x) (x) = ¢, ~'(y) ffi ¢ y ~ x ~'(y) =~(y) ~' (y) --(x) si y = x y(x) -¢ = -' (x) ¢ si y ~ x, vr' (y) =~ (y) ; siy x," = -24DETA (3) 2 8 7 ~8 c) •InSertion d'arborescence so.
une .~m.~e ~e ~ a~o..ceno~-~'.
~'~ .e .a~ne.
x' et x".
On Se propose de construire une arborescence unique en ins~rant :~.
le so~et x", racine de ~'~ co~e so~et de Pour cela, on d~finit l'insertion par une fonction f et un somet z de X'.
L'arborescence r~sultante sera telle qu e ~' = f (z), et que routes les relations d'ordre partiel assocides ~ r i etr 2 soient conserv~es.
La fonction f doit permettre de placer x" dans ~i x" ~tant tel que ~(x") =~ (x") =, f permet de d4finir ~(x") ou w (x"), sans alt~rer ~ (x").
On se resteindra donc ~ des insertions de x" comme sommet terminal de ~ce quf exclut, en particulier, la fonction PERE ; le positionnement de x'!
=PEREf (z) implique de d~finir, en outre, la relation d'ordre entre z et les FILS de x".
Exemple : 1 /\ 7 = CADET(.4) ~ 7, ~I' ~ I' WI figure 9 ~'2(z) = x" ~'2(x") = ~l(Z) si ~'l(z),~ ¢ ~2(x") = ~rl(Z) si ~l(Z) = ¢ -25d) Transformations synth~tlques • 't Aux transformations ~l~mentaires de ddtachement etd'insertlon sent adj~intes des transformations synth4tlques ne concernant-qu'une seule arborescence.
Les transformations syhth~tiques d~finies .actuellement'sont au nombre de deux : L'~change de deux sommets, ou de deux sous arborescences, not~ x I ECH x2.
correspohd aux fonctions ~t, ~/,~' d~duites alnsl de ~, ~, Sio<(x) ~ Xl, x 2, =<'(x) =c<(x) Si ~.(x) : x I =<'(x) : x 2 Si'.o<(x) = x 2 :<"(x) ~= x I si ~'(x) ~ x r x 2 ~'(x) :, ~-(x) • ~'(x) = x l.
~'(x) = x 2 ~(x) = x 2 . ~'(x) = x I "~ si x # x I, x 2 '-~x> :-(x) ~'(x) : x) si x :x l, .r(xl) ~ ¢, ~'(X2) ffi r(xl),~'(X2 ~) : .¢ ; ~(xl) : ¢, "'(X2.
) : ~(xl) Si X = x 2, ~'(x 2) =~ ~.~ .~(x I) ~= ~\[(x2), ~'(Xl! : ¢..
~'(X2 ) = ¢, rr'(x I) .= r;'(x 2),-: L'~change n'est d~fini que si les sommets x Iet X2 ne sent pas compazables selon ~I" E.xemples : Z) 'i 2 6 2 ECIi 6 • / figure iO i -262) Dans le cas oO il existe une relation de hi~rarchie (r I de' l'arboreseenee) entre x Iet x2, itop~rati,0nd'~change donnera un r~sultat aberrant, eomme le montre l'exemplesuivant I 3 ECH 8 2~II I 29~111 • . O figure II On voit que l'arboreseence n'est plus Connexe.
La partle correspondant au sonm~et de hi~rarchie sup~rieure est s~par~e de l'arbOrescence prlncipale.
Ce n'est~pas une arborescence, car il p'ex~ste~-pas de racine (sommet tel que ~ ffi ~ = ~).
Le r~sultat n'est done ni unearboresCenCe ni une familled'arboreseenees.
Remarquons n~anmoins qu'une operation de d~tachement~ur le sommet 3 aura pour ef~fet d'en faire la racine d'une arboreseence normale, DETA 3 f~.ure12 3 -•27L'autre transforma~ion~bso.rPti0n ABSestune suppreasion/desemmet sans suppression~e l'arborescenceasseci~e,~Lesreiat~nsd~ordresur 1 .et ~2sent pr~serv~es de Is mani~re suivante : soient ~,~,~ et ~.,~I,:~ ~ les retations"tr~nsgorm~es : ABS (x) ~..'(x) = ~"(x) =="(x) = ¢ si ~.(y).= x, ~(x) -.<(x) ~,(x),-4 (y),~ x, ~'(y) Sl ~(y) = x, <(x) <(x) # ¢,,=,<'(y).
=~(x) = ¢i ~ (x) = ¢,od(y),='~ =o<(y) • =-¢, ~(x) ~ ¢, ~'(y)~= ~(x) ~(x) '=¢, ~(x) =¢,v'(y) = V.(x) ~'.(x) 1 ABS 5 :~ • f!~Ur e 13 e) Transfarmat~ons Nous appellerons transformation une Composition diop~ratlons de transformations ~l~mentaires sur une arborescence donn~e~Ler~sultat de la transformatiOq sera une famil!e d'arborescences, L'arborescence prlncipale sera cello qui aura pour racine le m~me so~et que l'arborescence de d~part.
• Pour conserver la notion, d'arborescence principale, on consld~re syst~mat'lquement que celle-cl est munie d'un son,net raclneO sur lequel toute transformation est interdite.
Pour cola ne restreigne en rien les transformations possibles, on ne lul fair jouer aucun r81e dana la structureet on lul donne un fils unique qui est" la racine v~rltable de -28l'arborescence.
Les transformations d'insertion seront noises sans y adjoindre le d~tachement n4cessaire, impiicitement ~fini u On notera ehaque~transfor~ation de la m~me mani~re que des relations : Exemple : " x AINE y " signifie suppression de y' et insurer y comme AINE de x ° Par abus du langage, on notera de m~me l'~change " " xECH y " Et les transformations ne portant que sur un soul sommet : " ¢ DETA y :" " ¢ABS y " La composition de transformations ~l~mentairespourra se noter par une liste (programme) ~ ex~cuter.
En consid~rant qu'~ une arborescence donn~e~= (X, ~I,'~2 ) on Peut assoeier une famille d'arborescences (Y, ~i' ~ 2 ) en prenant l'ensemble Y infini tel que XCY et que AxeY -X,~,(x) = ~(x) =~(x) = ¢ il sera toujours possible d'adjoindre un nouveau sommet dans l'arberescenee principa~e par insertion~ II suffira depouvoir d~flnir u~ identificateur pour chaque sommet (on peurra par exemple, leur assoeler un entier : si CARD (X) = n, on notera (n+l),(n+2) .... ere les sommets de Y-X~.
Exemple 6 ¢ ¢ "'4 II I ii II de transformation ECH 3 1 DETA 3 ABS 6 SUBST 2 SUBST 3 SUBST II AINE 6 AINE 4 not~ aussi 3 SUB ST 6 substitution de z,par 6 Structure de ddpart : 3 3\] .V 7 8,' 4W tl.
" 12,.
13 7' t~ o fl 2 / ~ 9 . ~,io 7 8 5 11 12 13 3 o 41 2~5 6 ECH 3 0 DETA 3 ¢ ABS 6 -30"1 " " : 10 11 12 13 3,/?-..., ;.
O • . . 'I 7 8 5 4 SUBST2 Ii SUBST 3 qui conduit & : W figure 14 7o~__._~.._.__~1SUBST Ii ii AINE 6 i!
AINE 4 -316 ° Grammaires transformationnelles / a) R~gle de transformation sur une structure : Soit une structure S = (~, V,~), une r~gle de transformation est d~finie par une partie gauche (identification) et une partie droite (transformation) ~) Partie gauche : La partie gauche a pour but de rep4rer une figure de pivot donn~ dans S (4-C) o Elle est constitute par un sch4ma de figure F muni de symboles du vocabulaire comme il est indiqu4 en 4-c.
A un pivot donn~, un sch4ma de figure peut faire correspondre plusieurs figures de la structure.
Par convention, ~ une partie gauche de r~gle on associe la figure minimale conform~ment ~ l'ordre total d~fini en 4-bo Soit (Xo, Xl, ooo, Xn) eette figure, chacun des sommets est rep4r4 par son indice i (o~i~n) o ~) Partie droite : Elle comprend une transformation (5-e) et une application~.
Les op4randes des transformations 41~mentaires sont d4sign4s par des entiers j positifs ou nulso Pour tout j, o~j ~n, les sommets sont ceux de la figure Pour tout j>n, il s'agit de sommets n'appartenant pas ~ X (5-e) L'application ~ d4finit une nouvelle affectation des symboles du vocabulaire sur les so~mets sp4cifi4s en partie droite.
~) Application d'une r~gle de transformation : Soient : une structure S = (4, V,~), de racine W, un~ r~gle de transformation et un pivot x o.
Le r4sultat de l'application de la r~gle est ainsi d4fini : i) Si S n'admet aueune figure de pivot x conforme ~ la o partie gauche, lastrueture est inchang~e.
2) Si il existe une figure, on ne consid~re que celle qui est minimale, e~ le r4sultat de l'application de la r~gle sera une -32structure S' (~, V,~ I) de racine ~ . L'arborescence ~ est obtenue par application de la transformation indiqu4e en partie droite.
L'application/~est telle que A~ = A x si Ix n'est pas d~finie, et ~x = ~-x si ~x est d~finie en partie droite.
S) Ecriture et exemple : La partie gauche est notre selon les conventions d~finies au paragraphe 4-c.
La partie dr0ite comporte la transformation et les affectations de symboles, not6es par l'op4rateur := ; il est possible de recopier le symbole affect~ ~ un sommet sans en pr4ciser la valeur, en notant le num~ro de sommet en guise de symbole.
Reprenons l'exemple donn~ en 4-c Partie gauche : i (FIL8 c(FILS -~)~)CFILS d C~USING c))<CADET a<.\[))) I " "°I I a b I/\ b d b figure 15 Pattie ~roite O E CH 6 6 AINE 3 3 BENJ O ABS O 3 CADET 1 6 :=0 3 := d 4 :=: a L'arborescence 4tant donn4e, la partie gauche, avec la r~g!e du minimam, nous s41ection~e les 6 sommets marqu4s.
La transformation aura pour effet de recopier en FILS de 3 tous ses fr~res non rep4r@s, et ~ lui conserver les fr~res rep4r4s.
O ECH 6 : on ~change le sommet pivot et un sommet isol4 : d'o6 deux arborescences . ~o Y\~.@ i,, i ~X.
i / . k, (s,: -346 AINE 3 : on ram~ne 3 dans l"arborescence principale W I ~.
~d @ a /\, 3 BENJ 0 : W I a -35ABS O : w I yX ~ d'--'b b @" 3 CADET 1 6:=0 3 := d 4 :=a W I b~a /\ ./\o b @ figure 16.
-36b) Grarmuaire transformationnelle : Nous appellerons grammaire transformationnelle une liste de r~gles de transformation.
Une arborescence ~tant donn~e, il peut exister plusieurs d~rivations -finies pour une grammaire donn~e, selon le choix des pivots et l'ordre d'application des r~gles ; chaque d~rivation finie correspond ~ l'obtention d'une arborescence finale stable, (sur laquelle aucune r~gle ne peut s'appliquer).
II est cependant possible, moyennant un certain nombre de restrictions, de d~finir une d~rivation unique & partir d'une • arborescence donn~e ; nous en verrons un exemple dans l'~tude des probl~mes de mise enoeuvre.
-37II P ROGRAMMATI ON Neus dennerons ici une description sommaire d'un programme permettant d'expioiter une gra~naire transformationnelle.
I ° -Repr~sentatien d'une structure Un sounnet est repr~sent~ par un ensemble de peinteurs (adresses cerrespondarrt aux diverses fonctions.
En-pratique, compte tenu de propri~t~s li~es au calculateur utllis~ (70/+4 IBM), les fonctlons ~ et sent repr~sent~s par un m~me pointeur ; en effet, ~ (x) ~ @--~17(x) = @, (x) ~ @--~@ (x) = ~.
Ace peinteur est ass0ci~ un indicateur beol~en qui d~finit sa nature, correspondant en fair ~-la propri~t~ Benjamin.
• Sym~triquement ~ il a paru co---ededed~finir un troisi~me peinteur contenant ~-lOu"~'l et un indicateur caract~risant la propri~t~ Ain~ Un sommet peut alors se d~finir par un Symbole S, un peinteuro~, un indicateur B, un p.ointeur ( ~,~), unindicateur Aet un peinteur ', (~-!, oC l) .:-" avec ~ (x)--~ ~.(x) ~ ¢, o~(x) = ¢ et i (x).---~-l(x) ~ ¢, ~'l(x) = ¢ La racine de l'arborescence (~) aura alors les proprf~t~s A,B, ~(x) = ¢, ~'l-(-X) = ¢ ~(x) = ¢,~-l(x) = ¢ Neus repr~s.enterens sch~natiquement un,Semmet de la .fa~on suivante : -38La structure arborescente suivante, " ~A" " sera notre : " II I 0 A I ¢ lliIj Cette representation n'exclut pas, ~videmment, l'adJonetion d'autres informations sur un son.Jet donn~, et, en partlculier, de3 poin' teurs caract~risant son appartenance ~ une autre arborescence.
2 ° Description de la reconnaissance a) Balayage g~n~ral : La grammaire constitue en fait un programn~e form~ par la suite s~quentielle des programmes que sont les r~gles.
Sch~matiquement, le programme associ~ ~ une r~gle R i recherche, pour un sommet pivot x donn~, si la r~gle Ri est applicable.
-39Si la r~gle n'est pas applicable, le m6me essai sera renouvel~ avec Ri+ I jusqu'~ ~pulsement des r~gles de la grarmmaire.
Si une r~gle R iest applicable, la transformation associ~e est r~alis~e et le processus complet est repris, pour le m6me pivot, ~ partir de la premiere r~gle.
On volt que l'ordre s~quentiel entre les r~gles d~finit un ordre de prlorit~ d'applicatlon entre celles-ci.
Si aucune r~gle ne s'applique ~ un pivot donn~, ce pivot est compl~tement analys~ et le contrSle est donn~ ~ l'algorithme de choix des pivots, pour en d~terminer un autre.
Cet algorithme parcourt successivement tousles sommets de l'arborescence dana un ordre flx~ (en g~n~ral, l'ordre habituel de description pr~fix~e d'une arborescence).
Plusleurs modifications peuvent acc~l~rer et rendre plus souple le proc~d~, enpartlculler : I) assocler ~ chaque r~gle R i le numdro de la prochaine r~gle ~ appliquer si elle est accept~e.
2)'D~finlr des r~gles de changement de pivot permettant de contrSler le balayage par la grammaire.
-40Choix des pivots Parcours de la grammaire x = pivot initial 1 \] ¢ successeur(x)-X I i -7-i n°n/~ R i applicable ?~ i-k: J--C "-j i L ..........
J (modification i) b) Recherche d'une figure correspondant ~ une par*tie gauche de r~gle donn~e Le sch4ma de figure est d~fini par une expression parenth~s~e contenant des noms de relations et les noms de symboles qu i leurs sont associ~s (6-a-O().
Soit l'exemple suivant : (FILS a CFRERE b) (FILS c~ (FILS d) A chaque relation correspond l'appel ~ un sous programme dont les param~tres sont le s>~r~bole associ~ et le nombre de parentheses (n) ferm~es qui s~parent Is relation de la relation pr~c~dente~ -41Ainsi, l'exemple precedent se traduira par : FILS (a,o) FRERE (b, o) FILS (c,1) FILS (d,2) Le sous prograrmne relation a pour rSle de d~termtnerle sommet x ~ parttr duquel on dolt appliquer la relation, et de d~terminer le premier y tel que xRy et que le symbole associ~ soit ~gal au symbole demandS.
En pratique, le d~roulement du programme utilise une zone de m~molre, dire Pi.le de contrSle, dans laquelle sont stock~es des informations relatives la r~gle en cours d'application.
A chaque son, met y s~lectionn~ par la r~gle correspond une adresse dans la pile et un groupe de trois pointeurs : un pointeur vers le sommet x ~ Partlr duquel y a ~t~ obtenu (Antecedent), un pointeur vers l'adresse exacte de y dans la structure, et un pointeur contenant l'adresse d'appel du sous programme qui alocalis~ y.
Si PI' P2' P3' P4 sont ces adresses dans l'exemple donn~, nous aurons : Pile de contr61e ~E.
STRUCT. APPEL 0 S C sommet 0 (pivot) 0 PI FILS (a,o) . ~ ~ SI PI sommet I P2 F~ (b,o) $2 P2 s~et 2 ( P3 FILS (c,I) $3 P3 sommet 3 P4 FILS (d,2) ~ t $4 P4 sommet 4 ( I • ~ 0 0 • ",,J 00 So, S1, $2, $3, S 4 sont les adresses des sommets dans la structure.
-42\ / La r4f4rence ANTE est mise ~ jour ~ chaque nouvelle relation en utilisant le nembre n de parentheses ferm4es.
Elle est syst4matiquement initialis4e, en admettant n = O, ~ la valeur correspondant au sommet precedent dans l'ordre s~quentiel° Ainsi, un ~ventuel somet S 5 aurait d4j~ S 4 pour ant~c4dent sin = O, et sin = i° La r~f~rence APPEL est n~cessaire pour la recherche syst~matique.
Ainsi, si l'on avait obtenu S Iet S 2 ~ partir de So, et si l'on ne trouvait pas de sommet S3, il'faudrait reprendre la recherche ~ partir d'un autre sommet S' I" De $3, ANTE permet de retrouver Sl, et de r4appliquer la relation PI au-del~ de S I.
On salt que chaque relation est ddfinie par deux fonctions fet g.
Un organigramme approximatlf serait le suivant : I SORTIE ANORMALE\] T l oui non,,, ~ oui non .\]~ g(y) = ¢ ?---L_____ L'entr~e 1 correspond au premier appel de la relation° L'entr~e 2 correspond au cas o0 l'on revient sur la relation donn~e pour d4terminer un autre chemin.
L'entr~e 2 fait suite ~ une sortie anorma\]e dane une aut~ce relation dont -43le son,met a pour antecedent le sonnet dont on repart en 2.
Dans l'exemple, PI sera appel~e par l'entr~e I au d~part, ainsi que P2 et P3" Si P3 donne une sortie anormale, on reprendra PI Pa r lWentr~e 2, puis ~ nouveau P2 et P3 par l'entr~e I.
3 ° Application des transformations Cette partie ne pr~sente pas de difficult~s majeures.
A chaque transformation ~l~mentaire correspond un sous programme, d~pendant de 3 param~tres en g~n~=al : Le num~ro d'ordre du sommet y concern~ par la transformation Le num~ro d'ordre du sommet permettant d'affecter une position ~ y (ce num~ro est vide pour un d~tachement ou une absorption).
Le nouveau symbole S' ~ affecter ~ y.
Les num~ros d'ordre sont utilis~s comme des r~f~rences dana la pile utilis~e en partie gauche.
La d~finition d'un nouveau sommet se fair en lui attribuant un num~ro d'ordre sup~rieur ~ ceux pr~vus dans le schema de figure.
On obtient ainsi une r~f~rence dans la pile ~ laquelle il ne correspond aucun sommet, ce que l'on interpr6te en adjoignant un nouveau son,net ~ la structure.
-44III APPLICATION AU X P R 0 B LE ME S ...........................................
DE TRADU C T I ON AU T OMAT I QUE B 1 ° Le rSle des grammaires transformationnelles dans le systame de T.A.
L'objectif du modale de reconnaissance syntaxique (M2), ainsi que la grammaire et los algorithmes qui le r~alisent ont felt l'objet d'une publication ant~rieure \[~\] \[~\] Rappelons cependant que ~ chaque phrase du texte initial, le modale M2 fournit une ou plusieurs structures qui se caract4risent de la maniare suivante : c'est une structure arborescente dans laquelle ~ chaque occurrence correspond un sommet ; chaque symbole du vocabulaire V com ~ prend le nom d'une ragle de construction syntaxique r (telle que BC>-.A) et un ensemble d'informations caract4risant l'unit4 lexicale (variables grammaticale% codes de r~f4rence au lexique, etc)...
Entre deux So~m~ets x et y la relation x FILS y a lieu si et seulement si los occurrences associ~es sont li~es par une.ragle syntaxique r dont x est le gouverneur.
Alors r fait pattie du symbole de y° En outre, m~me si l'algorithme de r~duction des eonstituants discontinus a d~ @tre employ4 dans la phase M2, l'ordre entre les fils d'un m@me pare reste d~fini par l'ordre sur los occurrences.
Nous traiterons complatement la phrase suivante : ~TA ~0P~Y~A 05B~CH~ ~ACTOE B03H~KHOBEH~IE ~E~TP0!~0~ (~ cette formule expllque fr~quente apparition ~e\] deuterons dans \[le~ nucl~aires r~actions).
-45I { (0HB~fCHEE~ HI80 V I V570 H021 (44) (~0PMY~A) i '..
NO61 (~TA) ~08HMKMOBEHHE) (KKEPHEX) ().
NO61 NI21 M272 N062 (~ACTOE) (~E~TPOMOB) (B) (PEA/{\[~\]~ ~\[X) figure 17 En r4alit4, la structure indiqu4e repr4sente deux structures compatibles avec la grammaire de M2 : elle-m@me celle dans laquelle le greupe pr4posit~onnel est gouvern4 par BO3HMKHOBEH~E (apparition), qui est la structure correcte.
A chaque structure ainsi d&finie on superpo§e une autre structure arborescente : la structure de chafne des occurrences.
II sera alors possible d'~crire des schemas de figure comportant des relations sur l'une quelconque de ces deux structures ; De plus, le chemin entre deux sommets exprim4 par une relation peut ~tre une composition des fonctions~, ~ et ~ sur des structures diff4renteso -46Le passage ~ la construction syntaxique fran@aise se fait au moyen d'une structure intermddiaire (dans le langage pivot) ce qui implique l'emplof de deux modules transformationnels successifs.
2 ° A_p.plication au module M3 L'objectif du module d'~tiquetage (biB) consiste ~ : Ddterminer la Structure syntaxique correcte ~ partir de la famille de structures implicitement proposdes au moyen de transformations sur la structure arborescente initiale.
Substltuer aux noms de r~gles syntaxiques une ~tlquette carac~risant la signification de la liaison entre deux mots de mani~re ~liminer les propri~t~s formelles de la langue source.
Supprlmer les-sommets (occurrences) qui sont relatives ~ des mots consid~r~s con~ae outils syntaxiques dans ia langue source (par exemple : certalnes ponctuations, pr~positions fortement r~gles, etc)... Dupliquer certains sommets lorsque lesoccurrences assocides poss~dent plus d'une fonction syntaxique.
Crier de nouveaux sommets lorsque la langue emploie une tournure synthdtique.
La phrase de l'exemple precedent va ~tre repr~sent~e dans M3 par la structure donnde en figure.
/ I ~"~s~ ) (EXPLIQUER) AGENT I I OBJET -47(FORMULE) (APPARAITRE) ().
(CE) (FREQUENT) (DEUTERON) (REACTION) fj~e ~_~s IEPITHETE \] (NUCLEAIRE) Comme chaque symbole du vocabulaire port~ par la structure initiale comprend un nom de r~g\]e synt~axiqueet une quantit~ appreciable d'informations, il est pr4f4rable de ne consid~rer d'aberd que le nom de r~gle pour la recherche d'une figure ob~issant ~ un schema donn4.
Les informations composant le reste du symbole seront trait~es en tant que valeurs de variables associ4es ~ la classe de symboles repr~sent~s par le m~me nom de r~gleo -48Ainsi la partie gauche d'une r~gle de transformation se divise en deux sections : Un sch4ma de figure Des valeurs de variables sur les sommets de la figure identifi4e, et, 4ventuellemen% de nouvelles relations faisant apparaltre de nouveaux sommets.
Exemple : (FILS NI21) est un sch4ma de figure sur la structure arborescente qui constitue la premiere section a : NON-REFLECHI~%INTRANSITIF b : REFLECHI~ INTRANSITIF c : TRANSITIF-CONSTANT d : NON,REFLECHI~TRANSITIF-VARIABLE e : REFLECHI~TRANSITIF-VARIABLE f : QUALITE g : UNITE h : ANIMEvPERSONNIFIE i : INANIME/%NON-DENOMBRABLE / qui constituent la deuxi~me section Selon diff~rents assemblages de conditions sur les sommets de la figure on peut imaginer que des transformations diff~rentes doivent ~tre effectufies.
Aussi, la r~gle de transformation peut elle comporter plusieurs parties droites "conditionnelles".
• La continuaticn du m~me exemple fournit les parties droites suivantes -f\[o\] (g\[o\]nl \[I\] i (a\[o\]) (d\[o\]~h \[1\] ==>1 := AGENT (b\[o\])u(e\[o\]f~h \[1\] =:~1 := AGENT 2 := OBJET (PRONOMINAL-REFLECHI) O AINE 2 (c \[o\]) u (d \[o\],~i \[l\])u(d\[o\])uCe\[o\]) ==> 1 :: OBJET i := SUBJECT i := MATIERE I := DETERMINATIF -49Dans une telle ragle la figure comporte 2 points : le premier point not~ O, le deuxi~me point not4 1 doit ~tre f~Is du point Oet porter le num~ro de r~gle NI21o On trouve une telle figure dans l'exemple trait~ en partant du point correspondant au mot BOSHMKHOBEHHE Le point o est donc BO~HMKHOBEHHE Le point i est alors ~E~TPOHOB On obtient alors l'~tiquette "AGENT" pour ~E~TPOHOB qui est en offer l'agent de l'action "appara~tre".
Dans lecas 05 le deuxi~me groupe de propri~t~s est r~alis~, on construit un point suppl4mentaire not~ 2 auquel on affecte l'4tiquette "OBJET (PRONOMINAL-REFLECHI) '' et on le place dans la structure en rant que "fils ain4" du point O.
L'algorithme d'exploitatlon de la grammaire cherche ~ traiter los figures issues de la racine de la structure initiale, puis progresse par "noyaux" successifs° Los r~gles de la grammaire sont ordonn~es.
Une d~rogation l'ordre de progression dans les noyaux successifs a lieu dans deux cas : On rencontre un mot falsant partie d'une tournure idiomatique (priorit4 absolue) On rencontre une coordination (priorit4 relative) Lorsqu'il ne reste plus des points "~tiquet~s" l'algorithme de transformation s'arr@te.
-50References I\] N.
CHOMSKY Aspects of the theory of syntax (1965) The M.I.T.
Press 2\] Z.
HARRIS String analysis of sentence structure (1962) MOUTON & C ° 3\] E.
S. KLIMA Relatedness between grammatical systems Language (1964) volume 40 n ° I 4\] -S.
KUNO A system for transformational analysis (C0ngr~s NEW-YORK mai 1965) 5\] PETRICK A recognition procedure for transformational grammars \[6\] B.
VAUQUOIS G, VEiLLON J.
VEYRUNE S Syntaxe et Interpretation (Congr~s NEW-YORK mai 1965) HOLT A mathematical and applied investigation of tree structures for computer syntactic analysis Th~se Univ.
of Pennsylvania \[8\] G.
VEILLON J.
VEYRUNES Etude de la r~alisatlon pratique d'une grammaire "Context-Free" et de l'algorithme associ~ Document G-2OOI-I -,avril 1964

