Querying Temporal Databases Using Controlled Natural Language* Rani Nelken Nissiln Francez Computer Science Department The Technion Haifa 32000, Israel Abstract Recent years have shown a surge in interest in temporal database systems, which allow users to store time-dependent intbrmation.
We present a novel controlled natural language interface to temporal databases, based on translating natural language questions into SQL/Telnporal, a temporal database query language.
The syntactic analysis is done using the Type-Logical Grammar framework, highlighting its utility not; only as a theoretical fralnework but also as a practical tool.
The semantic analysis is done using a novel theory of the semantics of temporal questions, focusing on the role of temporal preposition phrases rather than the more traditional focus on tense and aspect.
Our translation method is considerably simpler than previous attempts in this direction.
We present a prototype software implementation.
1 Introduction
Traditionally, database management systems were designed to store snapshot information, valid at a particular moment of time (state).
Itowever, many applications require handling dynamic time-dependent information, pertaining not only to the present, but also to the past and future.
Adding temporal support to databases has proved to be a surprisingly * This work was carried out as part of the research project "Semantics of Natural Language Temporal Questions and Interfaces to Temporal Database Systems" sponsored by the Fund for interdisciplinary researdl, administered by the Israeli Academy of Science.
We thank Michael BShlen, Bob Carpenter and Andreas Steiner for each allowing us to incorporate their software within our own.
We also thank Yoad Winter and the anonymous referees for helpful comments on a previous version of this paper.
The work of the second author was partially supported by the fund for the promotion of l'eseardl in the Tcchniou.
thorny issue (Tansel et el., 1993).
A recent drive to consolidate research efforts has led to the design of a consensus temporal data model and associated temporal database query language, SQL/Temporal, an extension of the popular Structured Query Language (SQL) (Snodgrass, 2000).
1 SQL/¢J)enlpora\] represents a significant improvement over standard SQL in allowing programmers to express temporal queries (Snodgrass, 2000).
Since temporal database (TI)B) implementations are still in their infancy (Boehlen, 1995), there is little practical experience with SQL/Temporal; let alone experience of non-expert users.
However, it; is our belief that such users are bound to find the expression of complex temporal queries in SQL/Temporal to be extremely difficult.
In an attempt to counter this problem, we present a translation method from controlled natural language (NL) to SQL/Temporal.
Following the standard pipeline architecture of such methods, translation is done via an intermediate meaning representation language illustrated in Figure 1.
NL questions are first parsed using a grammar in the Type Logical Grammar (TLG) framework (Carpenter, 1998; Morrill, 1.998).
Simultaneously with parsing, the NL question is translated into a formula of a formal language called Lane, (Toman, 11.996), based on the interval operators of (Allen, 1983).
The translation is based on an independently motivated novel semantics of sentences modified by temporal Preposition Ph, rases (PPs) (Pratt and Francez 1997; 2000, Nelken and Francez 1999).
The constructed LAno.
formula is then transtThrough continued design, SQL/Temporal has evolved from predecessor versions named TSQL2 (Snodgrass, 1.995) and ATSQL2 (Boehlen et el., 1996).
It is expected to be incorporated within the new version of SQL named SQL3.
1076 la,ted into an SQl,/Teml)oral query, which is subsequently submitted to a.
l)rototyl)e TI)B implementation for eva.luation.
Finally, the TI)B's answer is 1)resented to the user.
Figure 1: The tr~nslation pipeline We have implemented this method as a prototype software tool, called Q IYEI~TY, (allnost) an acronym lbr "Querying with 15'nglish, of l~clario'hal Temporal Databases".
Parsing and transla.tion to I,Alle,, is done using the TLG Theorem Prover (C~u:penter, 1999).
The trmlslation from \['allen to SQL/Temporal is done using an adaptation of a tempera.1 logic (Ti,) to Aq'SQL2 translator of (Boehlen et al., 1996).
The resultlag query is submitted to a prototype TI)B implementation, calle(l Timel)\]} (Steiner, 1)97).
T'he different modules are COul)led into an integrated system iml)lemented in Sicstus 1)rolog on a.
UNIX platform with a WW\¥-l)ased gral)hi-caJ fi'ont-end.
We discuss some of the directions required in order to turn the system fi:om a.
research prototype to a working tool.
2 Related
work There is voluminous litera.ture on the design of Nil, interfaces to general (non-tenq)oral) databa.ses (see (lYrrault and Grosz, \]988; Col)estake and Jones, 1990; Androutsopoulos et al, 1995) for surveys) and by now their main a,:lva.ntages and disadvantages are well understood.
Much less work has been devoted to the design of Nil, interfa.ces to TDBs (C'lifford, 1990; Hinrichs, 1988) or other computer syst(.'nls involving a temporal dimension (Crouch and l)ulnm.n, 71993).
()f lYa, rticular relevance is (Androutsopoulos, 1996), who presents a linguistically motivated translation method fi'om NL queries into TSQL2 using a.n ltl)SG (Polla, rd and Sag, 1.994) grammar and a TL as an intermediate representation language.
Our al)1)l:oach shares many characte.ristics with (And routsopoulos, 1996), but there also important difl'erences, which we point out throughout the paper.
\¥e I)egin our presentation of the.
translation method with a brief overview of the T\])I}, as its structure determines many of the deign choices ta.lw.n in devising the translation method.
3 The
TDB A TDB is a two-sorted tirst-oMer structure.
The domain consists of a Data Do'main, D, and a Temporal Domain of intervals, 7'/, detined as follows.
Let Tp 1)e a.
set (of time points) with a discrete linear order without endl)oints, <._.7'1 is defined as the set of pairs : 7) = Z,)la _< b c Tu-oo, oo}}.
a rdational database schema is a set, of single-sorted predicate symbols (H,1,..., l~k).
Given a relational database schelna p, a Tl)l} schema p' is the sol; 3/ of two-sorted predicate sylnbols (l£11,..., \]~), where the sort of /¢~ is D aritv(l~i) x TI.
A TI)13 instance of schema f is a set of relations R\[ C l) arity(li) X 7), where each R~ is finite.
For instance, assume a database schema p consisting era single binary predicate symbol 'work, storing lbr each elnployee the department ill which she is employed.
The Tl)l} schema p' consists of the relation wo'rk', called a validti'mc state table, which adds a.
temporal argunlent 1;o the original relation, caJled the validtime of the table.
'\['he temporal argument can be used to store the history (and 1)erhaps even future plans) of departments in which eml)loyees are employed.
Following a.
suggestion of (Androutsopoulos, 1996), we also include relations mal)l)ing names of ca.lendricat items to temporal intervals in p'.
For instance, we store a.
relation year / ma.l)l)ing the year 2000 to the interval \[71.
\].2(100-3 J.
12.2000\] (which in turn is n lappe(t to an element of 7)).
We now describe the translation process.
4 The
translation process The translation 1)recess a.ccepts input NL questions in a controlled subset of Nil,.
Restricting inl)ut language in this way enables e\[l'ective processing of a sufficiently rich fragment while avoiding many of the well-know problems of unrestricted NI,.
We use a formal grammar in the TLG framework.
Our grammar is specially designed for use with ~ particular TDB schema.
Future work will allow easier configuration of the grammar with respect to the schema.
Our grammar is based on work on all independently motivated theory of the semantics of telnt)orality.
Most of the research in this tield (see (Steedman, 1997) for a survey) has rocllsed on the issues of tense a.nd aspect.
\~e ha.ndle tense, but purposefully not aspect, which plays 1077 an import,~nt role in (Androutsol)oulos, 1996).
Aspect, which is used to retlect speal~ers' temporal viewpoint with respect to reported situations is an imi)ortant facet of NL temporality.
However, its relevance to TDBs is questionable, as it is unlikely that a realistic TDI3 would actually encode such subjective viewpoints.
Moreover, handling aspect requires postulating a more complex data model.
For instance, (Androutsopoulos, 1996) augments tile TDB model with event-like "occurrence klentifiers", and adds a.n additional argument to temt)oral relations indicating whether a given event has cuhninated or not.
While such devices may perhaps be linguistically justified, it is unclear whether the TDI3 community would adopt such augmentations of the model.
Instead, following (Pratt and Vrancez, 2000; Nelken and Francez, 1999) our focus is on sentences modified by temporal PPs.
These PPs are analyzed as variants of standard generalized quantifiers (Barwise and Cooper, 1981), in which qnantification is over: time.
Using this framework, we handle questions that refer explicitly to the temporal (timension (e.g.
When/during which year )... as well as questions in which temporality is hnplied by the TI)B context (e.g.
Did Mary work in marketing?, Which employees worked in marketing?).
We ban(lie both clausal a.nd phrasal teml)ora\] Pl)s (e.g.
after John worked in R&D, during every year).
J\n important strength of this semantic theory is that it; allows for arbitrary iteration of PPs (e.g.
one month during every year until 1992).
In addition, our grammar also handles qua.ntific~tion over individuals (e.g.
some employee), coordination and negation.
input questions are parsed using a lexicalized type-logical grammar.
Lexical items are ass(> elated with a syntactic category and a higherorder lambda-term representing its semantics.
Taking advantage of 'I'LG's elegantly tight coupling of syntax and semantics, parsing and construction of a semantic representation in the form of an LAlle n Ibrmula proceed silnultaneonsly, in a bottom-up fashion.
\¥e have found using TLG to be advantageous over a featurestructure based formalism (such as IIPSG as in (A ndroutsopoulos, 1996)), since formula construction is an integral part of the l)arslng and does not require complex ad-hoc manipulations of feature structures.
Using a particular grammar helps reduce some of the ambiguity inherent in unrestricted NL.
For instance, whereas in general a preposition such as at is ambiguous between a temporal and a locative interpretation, the choice of the coml)lement NP relative to a given schemainduced grammar deterministically fixes the interpretation.
As another example, whereas iterating several temporal PPs (e.g.
during some month every year) opens up exponential seeping possibilities, some choices are eliminated by world knowledge, which is encoded in the grammar (e.g.
every year must have higher scope than some month since months are included in years and not vice-versa).
In cases of remaining ambiguity, Cite user is presented with all Cite distinct possibilities.
Future work will allow the user: to lnalce informed choices between different possible readings, e.g. by presenting him with NL l)ara.phrases of the alternatives.
\¥e translate NI, questions into \],All(',,,if'ire main reason for: not translating directly to SQl,/Temporal is that the \]atter is not closed \['or sub-formulae, i.e. a sub-formula of a wellformed query is not necessarily well-formed.
Since LAne, "is closed for" sub-formulae, compositionally constructing formulae while parsing in a bottom-u 1) fashion becomes much easier.
I, An~, is defined as follows (Toman, 1996).
I,et p be the database schema (1~,..., I~t,.).
l,et: L ::=/~,~(x, I)ILA LI~LI~x.LI~I.LIx = yllc~J where x,y are variables over D, x is a vector of such variables, l, J are varlet)los or constants over T\], and (r is one of the operators: precedes, meets, overlaps, equals, contains.
LAlien is defined as tile set of' \[brmulae p E L that conLain at most one free variable over TI.
The answer to a formula 90 relative to a TDB D is {x, ll> ~ :(x, :)}.
To illustrate, consider the NL question: During which years did Mary work in marketing?
'File I,Alle n representation for" it is constructed in a bottom-up nla, nnel'.
The meaning representation of the main clause Mary worked in marketing is constructed as: AJ _ /) In this formula, I denotes a Reichenbachianlike reference time, J denotes a time interval 1078 (I,ring which Mary worked in nia,rl(eA:\]nlg, which is loca,l;od in the l)a,sl; (l;he conl;ribution ol7 the t, onse) a, nd is hicluded wil;hin 1.
The me~miug o\[" the \['ull (lll(~,~lJon \]8 COilstructed 1)y a,l)t)lying th(; Inca, sing o\[' the \]lll;orrclga,1;ive ton~l)oi:a,1 1)1 ) during which year i;o the lllea,ning o\[' Lho c.\[a, uso.
\¥il;\]io.t going \]lifO (lcta, ils, l;ho r('~s, lt is: A./ Cpa,,~tAJ C\]) The effect of applying the 1)1 ~ is that 1;lie wu'iable / is now 1)ol;h free ~ul(l rest;rioted to 1)e {\]lo time of a, yea, r.
The a,liswer 1;o l:li(; I'orin.la, is ~lie so o\[" ilitoi:vaJ,~ \] 1;ha,t a, re.
ye4~,i',% a,n(I (lur-\]ilg whi(:h 1;\]ioro is a,n iill;orva,l,\] COliLaiil0d ill tlle~ l)asl;~ (l.ring whi(:h ~l/\]il.rry work(,(l ill llla,rl,:ol,ing.
VVo allow \]l;ol:a,1;od I)l)s 1;o a,l)l)iy ili a, siniila,r Ill a,lillor.
Not (;vory I~Allc n 1'O1'I111111"/, (:orrosl)Oi~(l~ 1;o ;/,11 eva hlal)lo,qQl~/'thiilpora\] query, in 1)arlJc, ula,r~ fornuila,e niigJll; \]ia,vo a,li hl:finil;e a lis\vor.
\]"orinula,e tha,t a,r(; safe \[rOlll this a, nd \]'dato(l l)rol) loins a, re t(;ruied domai'n,-i~zd<lJ<'~M¢'n,~ ((Ml(lur a,n(l Tol)or ~ \]99\]; AI)it(q)o,t (;t a l., 19!)5).
I)onla,in in(let)en(lonce is a,n un(l(wida,1)lu sonlanl;i(: l ) I:O\[)Ol:i;y.
11 ow(;v(;r; w(; i ln pose cerl,ai li ~yllta(:l,ic r('M,l:ict;iOliS on g(;nera,lx;d l'ornlulao l,ha,t oitSlli'O it,.
'\]'heso l:(~slw\]c!,\]OllS :-tISO nim l)lil 7, l\[IO l,i:ansla,1;ion task l'roin I,A,,~I, to,gQl;/Toml)or~d.
This tra, nslalsioli is I)ased Oil a nlo(lili('a,tion of the Lra, llshl,l;or \[1"()111 \[irM;-or(l(H" TI, over t\]lll(~-I)O\]\]ll,,~ 1;o A'I'SQI,? of (l/oehlen el; a l., 71996).
Tho syiita,ctica,l\]y restrh:te(l version o1' l,Alle.
we use has l;ho uni(luO a,(Iva, nl;a,ge o1" I)ohig very clos(; both 1;o the langllag(; IlSO(I \]11 (N(2lkCll a, nd IPra,ncez, 1999) Oil tli(~ on(; hand a li(\] i;o SQl,/'tbml)orM 011 tho, oLh('r.
The S(HlllqJll;\](:g o\[' NI, Lonlpora\] exl)rossions is o\['ten expressed using (;xl)licit i:el'(;r(;llCO Lo intorwds.
IAk(;wis(;, SQL/'lhml)ol:a,1 has Alhm-sl,ylo Ol)orators over inl;erva,ls.
Androul;sot)oulos (\]996) uses a, CtlStomized 'FI, :.t,s a,ll hilx;rniodia,1;e~ \].q, ll~lla,g0, in whi¢\]i t(;ntl)ora,1 i:(;la,tions a,t:e encod(;(l USillg L(;nil)ol:a,l opora£ors ra,t;hor 1;ii++i~ oxplicii~ ro\['oronce Lo hiterva,\]s.
We \]ia,v(; \['ound using a, syl'il;actica,lly i:osl, ri(:l;ed vel:8iOli of' I,All<;n 1;o t)e a,(iv,anl;ageous, a.s il; a cl;ua,lly sire plifie;~ the tra n,~lation.
(\]oni;in,ing oil r i)reviou,~ oxa,lllt)le> 1;lie rostlltillg I~Alle.
rOl:lllllla, iS StllJS0.(tllonl;iy IA'P.,llSla,l,(,(l into tile \['ollowing S(~\]JTcnli)oral (lu(;ry: NONSEQUENCED VALIDTINE SELECT DISTINCT aO.cl AS cl FRON work t AS al,year I AS aO WHERE VALIDTIME(aO) con%ains VALIDTINE(al) AND al.cl = ~mary' AND al.c2 = ~marketing' AND PERIOD(TIMESTANP'beginning', TIMESTAMP'now') contains VALIDTIME(al) The (ltl(;ry :a,sks for the first a,rglunon of tlio rela, tion \]nsi41,1lCO yeal J such tiia, t the refection \]IIM,a,IlCO work # in(:lu(los a, 1;ul)lo consisting of 'Mary'~ 'marketing' a, nd a, va,lid time.
which is l;oml)orally iucl.dc'(l in the wind l;ime of" the yea, r, as well as in the \]nl;ol:va,l sl;:4,1:l;ing a,1; the ~\])Ogillllilig ~ O\[' (;\]1110 i/,ll(\] (ql(l\]n~ :llOW :V\]Z.
l, he~ past.
The 'l'l)l~ rt;,~polMs 1)y returning a table conl,aini,<e; exactly 1;ho re(ltleslx;d year names.
5 Conclusion
rl~\]lO, a,ddith)n of the.
tOtal)oral (limonsion to (la, ta,1)asc,~ysl,cnl,<-; i,crca,ses lJie\]r power 1)ul, also thoir COml)lexity.
'lb increa,se the usability of T1)171.% we, pi'esout a, prollotyl)e coutrolled NI~ \]llterl'a,ce, to a, TI)l:f.
Our soma~nl;ic focus is ou t,h(~ .su of l,(;ntpora,1 gun(;ra, lized qua,lH;ificrs, based ou (I)ra,IL a,u(I l"ra,ncez~ 20()())~ ra,ther tha, n t(ms(; a,m.l aSl)e(:l,.
As a, rB:.ed 1)y ((.k)l)(~sl:a,l,:(~ a, ud Joiles, 1990), \]la,lMlin~ <lUa,utificath)ll i~ one o1" the areas in wli\]ch Nil, interfaces ha,vo a, pot(mtia,l a,(Iva, ni,a,ge over l)otll \['orma\] la, ilgtia,ge.s mid ~ra, l)hica,1 llsor iuterf'aces.
In (-onq)a,rison with previous work, w(; ~-we able 1,o co\]lsidera, bly silnl)li\[3, tim tra,usla, Cion melJlo(l, l,'irst,,sing 'FLG~ ra, thor t;lia.u a, f'o.~-l,|AlrO-s|;l'llC(,lll'(~ ibrma,lisin provides ~ much s\]nll)le.r method for ('oi).,sl;rucl;ilig s(mla, nl,i(: rol)resonl;a,,tion~.,g(~(:on(1, using LAIlcl, :+'4 a,ll iul;(;rnl(;dia,te m(;a,,in<e; r(q)r(;s(mta, tion la,nB;ua,B;e yields a, lu,(:h lnor(; stra,iglH;\['orwazd trnllsla,tion tha, n usin<e; a restricted TI.
0.o re.st, l)e:~r in mi.d~ tha,t our iml)IOmo.t~tion in at IJm prototypo stago.
Turuing it into ;~ l)ractica,l tool would roq.iro considora, blo work, as i8 true o1:' most COml)a, ra, ble systems.
Futuro work includos increa,sod NI, cov(;ra,ge, adding a, (lisa, nd)il4,a, tion mod.lo, ha,ndling nonlimd a, ud tonipol:a,I a na, i)hora,, allowing uiull,il)l(;-senl;once~ (lu(;rlo~, a, nd ~onora,l;\]on of" N\]~ a.ii,~\voi;s \['i'onl the resull;s i)resont;(;d I)y tli(; T\])I}.

