From Controlled Document Authoring to Interactive Document Normalization Aur¶elien Max Groupe d’¶Etude pour la Traduction Automatique GETA-CLIPS Grenoble, France aurelien.max@imag.fr Abstract This paper presents an approach to normalize documents in constrained domains.
This approach reuses resources developed for controlled document authoring and is decomposed into three phases.
First, candidate content representations for an input document are automatically built.
Then, the content representation that best corresponds to the document according to an expert of the class of documents is identifled.
This content representation is flnally used to generate the normalized version of the document.
The current version of our prototype system is presented, and its limitations are discussed.
1 Document
normalization The authoring of documents in constrained domains and their translation into other languages is a very important activity in industrial settings.
In some cases, the distinction between technical writers and technical translators has started to blur, so as to minimize the time and efiorts needed to obtain multilingual documents.
The paradigm of translation for monolinguals introduced by Kay in 1973 (Kay, 1997)1 led the way to a new conception of the authoring task, which flrst materialized with systems involving human disambiguation (e.g.
(Boitet, 1989; Somers et al., 1990)).
A related paradigm emerged in the 90s (Hartley and Paris, 1997), whereby a technical author is responsible for providing the content of a document and a generation system produces multilingual versions of it.
Updating documents is then done by updating the document content, and only some postediting may take place instead of full translation by a human translator.
Systems implementing this paradigm range from template-based multilingual document 1This is a reedition of the original article.
Figure 1: Architecture of a MDA system creation to systems presenting the user with the evolving text of the document (often called the feedback or control text) in her language, following from the WYSIWYM (What You See Is What You Meant) approach (Power and Scott, 1998).2 Anchors (or active zones) in the text of the evolving document allow the user to specify further its semantics by making choices presented to her in her language.
The underlying content representation is then used to generate the text of the document in as many languages as the system supports.
The MDA (Multilingual Document Authoring) system (Dymetman et al., 2000; Brun et al., 2000) follows the WYSIWYM approach, but puts a strong emphasis on the well-formedness of document semantic content.
More particularly, document content can be specifled in terms of communicative goals, allowing the selection of messages which are contrastive within the modelled class of documents in no more steps than is needed to identify a predeflned communicative goal.
Figure 1 illustrates the architecture of a MDA system.
A MDA grammar specifles the possible content representations of a document in terms of trees of typed semantic objects in a formalism inspired from Deflnite Clause Grammars (Pereira and Warren, 1980).
2We have done a review of these systems in (Max, 2003a) in which we have identifled and compared flve families of approaches.
Figure 2: Document normalization in a given class of documents Considering all the possibilities ofiered by having the semantic description of a document, for example the exploitation within the Semantic Web, it seemed very interesting to reuse resources developed for controlled document authoring to analyze existing documents.
Also, a corpus study of drug lea ets that we conducted (Max, 2003a) showed that documents from the same class of documents could contain a lot of variation, which can hamper the reader’s understanding.
We deflned document normalization as the process of the identiflcation of the content representation produced by an existing document model corresponding best to an input document, followed by the automatic generation of the text of the normalized document from that content representation.
This is illustrated in flgure 2.
In the next section, we brie y describe our paradigm for document content analysis, which exploits the MDA formalism in a reverse way.
Candidate content representations expressed in the MDA formalism are flrst produced and ranked automatically, and a human expert then identifles the one that best accounts for the communicative content of the original document.
The core of this paper is devoted to our implementation of interactive negotiation for document normalization.
Finally, we discuss our results and propose ways of improving the system.
2 Document
normalization system A MDA grammar can enumerate the wellformed content representations for documents of a given class and associate textual realizations to them (Dymetman et al., 2000).
Content representations are typed abstract semantic trees in which dependencies can be established through uniflcation of variables.
Generation of text is done in a compositional manner from the semantic representation.
Figure 3 shows an excerpt of a MDA grammar describing well-formed commands for the Unix shell.
Such a grammar describes both the abstract semantic syntax and the concrete syntax for a particular language, English in this case.
The flrst rule reads as follows: lsCommand is a semantic object of type shellCommand type, which is composed of an object of type flleSelection type, an object of type sortCriteria type, and an object of type displayOptions type.
Text strings appearing in the right-hand side of the rules are used together with the strings associated with the present semantic objects to compose the normalized text associated with the described abstract semantic trees.
Our approach to normalize documents has been described in (Max, 2003b).
A heuristic search procedure in the space of content representations deflned by a MDA grammar is flrst performed.
Its evaluation function measures a similarity score between the document to be normalized and the normalized documents that can be produced from a partial content representation.
The similarity score is inspired from information retrieval, and takes into account common descriptors and their relative informativity in the class of documents.
The admissibility property of the search procedure guarantees that the flrst complete content representation found is the one with the best global similarity score.
This process uses text generation to measure some kind of similarity, and has been called fuzzy inverted generation.
In order to better cover the space of texts conveying the same communicative content, the MDA formalism has been extended to support non-deterministic generation, allowing the production of competing texts from the same content representation, as is illustrated in flgure 4.
For each considered content representation, texts are produced and compared to the document to be normalized, thus allowing the ranking of candidate content representations % semantic object of type ’shellCommand_type’ describing the ’ls’ command lsCommand(FileSelection, SortCriteria, DisplayOptions)::shellCommand_type-e-[] --> [’List ’], FileSelection::fileSelection_type-e-[], SortCriteria::sortCriteria_type-e-[], DisplayOptions::displayOptions_type-e-[].

