1:136	Book Reviews NETL: A System for Representing and Using Real-World Knowledge Scott E. Fahlman The MIT Press, Cambridge, Mass. , 1979, 285 pp.
2:136	, $17.50, ISBN 0-262-0609-8.
3:136	This is a "slightly edited version" of Fahlman's 1977 Ph.D. dissertation.
4:136	Fahlman presents a knowledge representation organized as "a pattern of interconnections of very simple parallel processing elements: node units which can store a dozen or so distinct marker-bits, and link units which can propagate these markers from node to node, in parallel through the network" \[p. 1\].
5:136	Fahlman considers it to be important that "using these marker-bit movements, the parallel network system can perform searches and many common deductions very quickly: the time required is essentially constant, regardless of the size of the knowledge-base" \[p. 1\].
6:136	However, this timing result depends on the existence of parallel network hardware.
7:136	An appendix unconvincingly presents a design of such hardware, but the body of the book presents a knowledge representation structure which can be considered on its own merits, independently of such timing considerations.
8:136	NETL is a paradigm example of what I have called path-based reasoning \[Shapiro, S.C. Path-based and node-based inference in semantic networks.
9:136	In D. Waltz, ed.
10:136	, TINLAP-2, ACM, New York, 1978, 219225.
11:136	Also in AJCL, Microfiche 80 (1978), 38-44.\], but it is worth noting that what Fahlman calls "links" would more properly, I feel, be called "nodes", and his true links are.what he calls "wires".
12:136	Fahlman says, "I have spoken of the node and link units as separate entities, and will continue to do so, but the difference is largely one of emphasis every link has an associated handle-node that represents the statement that the link implements  The nodes, in turn, sometimes need a few link-type wires for special-purpose connections to other nodes  Since every true link has a handle-node and every normal node has a few special link-wires, it seems only natural to use the same piece of hardware to represent them both.
13:136	I call this piece of hardware an element when I want to refer to it without indicating whether it represents a node or a link.
14:136	An element has the marker-bit storage and the single terminal of a node (the handle-node if it is representing a link) and a set of connecting wires that it uses in the manner of a link" \[p. 35-36, italics in the original\].
15:136	The central organizing principle of NETL is a property inheritance hierarchy using nodes representing typical members of sets.
16:136	For over ten years, I have thought that the "typical-member" technique of representing information was very attractive, but that it couldn't be made to work in general.
17:136	Fahlman's is the best attempt I have seen to use this technique, and he discusses all the problems.
18:136	Finally, however, he uncovers problems which convince him that the technique is inadequate.
19:136	Considering the attractiveness of the idea, and Fahlman's valiant attempt to get it to work, it is worthwhile to devote a substantial part of this review to analyzing the technique, Fahlman's approach, and the problems he discusses, in the hope that any future researchers tempted to try the technique will do so with a full knowledge of where the problems lie.
20:136	The first problem, inadequately handled by many researchers who discuss inheritance hierarchies, is that sets and individuals (equivalently, the set membership relation and the subset relation) must be distinguished.
21:136	As Fahlman points out, "The set of elephants has a certain size, expressed as the number of elephants in the world; the typical elephant has a certain size expressed in meters or kilograms" \[p. 16\].
22:136	Note, also, that one set can be both an element of a second set and a subset of a third set.
23:136	Fahlman handles this problem by having two types of nodes: *INDV-nodes for individuals and *TYPE-nodes.
24:136	A set is represented by a *INDV-node with an associated *TYPE-node representing the typical member of the set.
25:136	An actual member of the set is represented by a *INDV-node with a *VC (for virtual-copy) link to the *TYPE-node.
26:136	Fahlman uses *VC rather than ISA, or the like, because he likes to think of the implicit information about an individual as being virtual copies of the information stored about all *TYPE-nodes of those sets the individual is a member of.
27:136	To summarize, using Fahlman's well known example, CLYDE is a *INDVnode representing the elephant Clyde; CLYDE has a *VC relation to TYPICAL-ELEPHANT, a *TYPEnode representing the typical elephant; TYPICALELEPHANT is associated with (by having a set-wire to) ELEPHANT-SET, a *INDV-node representing the set of all elephants.
28:136	The set of elephants may be made an element of the set of sets by placing a *VC link from ELEPHANT-SET to TYPICAL-SET, and the set of elephants may be made a subset of the set of mammals by placing a *VC link from TYPICALELEPHANT to TYPICAL-MAMMAL.
29:136	The next problem arises from the simplistic slogan that nodes inherit properties from higher nodes in the hierarchy.
30:136	The problem is that if TYPICALELEPHANT has the relation R to node N, does CLYDE inherit the relation R to N, or to some modiAmerican Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 183 Book Reviews NETL: A System for Representing and Using Real-World Knowledge fled copy of N?
31:136	Consider "all elephants hate all aardvarks".
32:136	This can be stored as the HATES relation between TYPICAL-ELEPHANT and TYPICALAARDVARK.
33:136	If each elephant inherits the HATES relation to TYPICAL-AARDVARK, it works correctly, as does inheriting the RESPECTS relation to DARWIN if we represent "all elephants respect Charles Darwin" by a RESPECTS relation from TYPICALELEPHANT to DARWIN.
34:136	However, we would not want to handle "every elephant has a trunk" or "every elephant has a mother" this way.
35:136	This problem involves both the representation and the way inheritance is done.
36:136	One would not want to give TYPICALELEPHANT either TYPICAL-TRUNK or a specific individual trunk.
37:136	Fahlman solves this problem by having another kind of node, a role-node, which has an EXISTENCE-link to a type-node.
38:136	"A description, then, consists of a base-node representing the thing itself (TYPICAL-ELEPHANT is the base-node for its description) and a set of role-nodes, connected to the base-node by EXISTENCE-links and representing the various things that every copy of the base-node has one of.
39:136	Most role-nodes specify individual entities, but there are also set-roles (with attached type-nodes) for representing such things as the typical elephant's set of teeth and the typical member of this set" \[p. 26-27, italics in the original\].
40:136	The typical-member technique may be thought to allow a more economical representation than some variant of predicate calculus.
41:136	Note, however, that a *TYPE-node is a universally quantified node ranging over the set represented by its associated set-node, and a role node is an existentially quantified node whose EXISTENCE-link is a Skolem arc pointing to the universally quantified node it depends on.
42:136	So now consider the role-node TYPICALELEPHANT'S-LEG-SET, and its associated *TYPEnode TYPICAL-ELEPHANT'S-TYPICAL-LEG.
43:136	If we want to know something about Clyde's left front leg that is inherited from TYPICAL-ELEPHANT and TYPICAL-ELEPHANT'S-TYPICAL-LEG, no additional structure need be built.
44:136	Fahlman's virtual copy technique allows us to view TYPICAL-ELEPHANT'STYPICAL-LEG virtually as Clyde's left front leg.
45:136	However, if exceptional information is to be stored about Clyde's left front leg, a node is needed to represent it.
46:136	There are now two choices: actually copy all the non-exceptional information about TYPICALELEPHANT'S-TYPICAL-LEG down to CLYDE'SLEFT-FRONT-LEG, or let CLYDE'S-LEFT-FRONTLEG continue to inherit non-exceptional information.
47:136	Fahlman goes with the latter approach, which is more economical -information needn't be copied -and allows new non-exceptional information to be stored and inherited with no extra work.
48:136	The problem now is what is the relation between CLYDE'S-LEFTFRONT-LEG and TYPICAL-ELEPHANT'STYPICAL-LEG?
49:136	It cannot be *VC, because that would make CLYDE'S-LEFT-FRONT-LEG one of the legs of the typical elephant, not one of Clyde's legs.
50:136	In fact, if general information is to be stored about elephants' left front legs, we need TYPICALELEPHANT'S-LEFT-FRONT-LEG, an *INDV rolenode with *VC to TYPICAL-ELEPHANT'STYPICAL-LEG, and we cannot confuse this with Clyde's left front leg.
51:136	Fahlman's solution is to make CLYDE'S-LEFT-FRONT-LEG another kind of node, a *MAP-node, with a map-wire to TYPICALELEPHANT'S-LEFT-FRONT-LEG.
52:136	Meanwhile, CLYDE'S-TYPICAL-LEG is a *TMAP-node with map-wire to TYPICAL-ELEPHANT'S-TYPICALLEG.
53:136	All *MAP and *TMAP nodes also have an owner-wire to the individual which owns them, paralleling the EXISTENCE-link of their parents.
54:136	Because of Fahlman's marking inheritance scheme, it is not necessary to connect CLYDE'S-LEFT-FRONT-LEG to CLYDE'S-TYPICAL-LEG as well.
55:136	I leave it to the reader to examine the following alternative proposal.
56:136	Give CLYDE'S-LEFT-FRONT-LEG a *VC link to TYPICAL-ELEPHANT'S-LEFT-FRONT-LEG.
57:136	This requires TYPICAL-ELEPHANT'S-LEFT-FRONTLEG to be a *TYPE-node, which is not the case in NETL.
58:136	The associated set-node would then be ELEPHANT'S-LEFT-FRONT-LEG-SET, a node representing the set of all left front legs of elephants, and quite distinct from the set of left front legs of the typical elephant, for which a node would not exist since it is a singleton set.
59:136	ELEPHANT'S-LEFT-FRONTLEG-SET is not a subset of TYPICALELEPHANT'S-LEG-SET, because the latter represents the set of legs of the typical elephant, whereas the former represents the set of left front legs of all elephants.
60:136	They both must be subsets of the set of legs of all elephants, represented by ELEPHANTLEG-SET, a set-node with associated type-node TYPICAL-ELEPHANT-LEG.
61:136	Certainly, one rolenode of the description based on TYPICALELEPHANT-LEG is TYPICAL-ELEPHANT-LEG'SELEPHANT.
62:136	It would be nice if this were just our old friend TYPICAL-ELEPHANT but this does not seem to be the case since TYPICAL-ELEPHANT is a base-node and TYPICAL-ELEPHANT-LEG'SELEPHANT is a role-node.
63:136	From a predicate calculus point of view, what we have done is construct formulas for "For every elephant there is a leg " and "For every elephant leg there is an elephant " If one of the advantages of the typical-member technique seems to be the ability to collapse *VC chains, and thus see an individual as a virtual copy of its hierarchical ancestors, consider what Fahlman calls the "copy-confusion" problem.
64:136	This problem appears in several guises.
65:136	In one, we try to find the weight of 184 American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 Book Reviews NETL: A System for Representing and Using Real-World Knowledge Clyde's trunk.
66:136	CLYDE and CLYDE'S-TRUNK are both *VCs of TYPICAL-PHYSICAL-OBJECT, which has a weight as one of its role-nodes.
67:136	In the process of collapsing *VC chains we lose the distinction between Clyde's trunk's weight and Clyde's weight.
68:136	In another version of the problem, the typical family has both a father and a child.
69:136	Since Clyde is the father in one family and a child in another, copy-confusion causes Clyde to be seen as his own father.
70:136	Fahlman considers four solutions to this problem.
71:136	For the first solution "I am not yet sure whether it is impossible to do this, or just very difficult.
72:136	A second possibility is to abandon the virtual-copy semantics  I feel that this approach should be taken only as a last resort  A third approach  seems a needlessly complex and economically unattractive solution  the fourth solution is the one that seems to me the most promising, and is the one that I am using in the current version of NETL  A few possible relevant nodes will be missed by this approach  The parallel portions of the system are not complete, in the logician's sense, but they were never intended to be; we wanted to be able to do the most important deductions very fast, and I believe that NETL still does that" \[p. 148-53\].
73:136	Even the fourth solution seems to compromise on some features earlier considered beneficial, and even on the virtual-copy idea itself, "In some cases, it is useful to create pseudo-individuals to fill roles in the middle of long role-chains; this tends to break up the chains into more manageable sections" \[p. 152\].
74:136	Fahlman feels that "The copy-confusion problem, in its various guises, is principally a problem of properly implementing an essentially correct semantic notation in a parallel manner; the binding-ambiguity problem, on the other hand, results from a shortcoming of the semantic notation itself" \[p. 153\].
75:136	This problem arises when, in a predicate calculus approach there would be a statement with two or more universally quantified variables ranging over the same set.
76:136	Consider the HATES relation between TYPICALELEPHANT and TYPICAL-ELEPHANT.
77:136	Does this mean that every elephant hates himself, or that every elephant hates every elephant including himself?
78:136	What about "every elephant hates every elephant other than himself"?
79:136	Fahlman decides by fiat (there is no other way) that it means the first.
80:136	To get the third, he introduces *OTHER-nodes.
81:136	Every *OTHER-node has a type-wire to a *TYPE-node and represents every other element of the associated set.
82:136	"Every elephant hates himself" is represented by TYPICAL-ELEPHANT HATES TYPICAL-ELEPHANT.
83:136	"Every elephant hates every other elephant" is represented by TYPICAL-ELEPHANT HATES OTHER-TYPICALELEPHANT.
84:136	The second, "every elephant hates every elephant including himself," is represented by the conjunction of the two.
85:136	If more than two are needed, "We might, for instance, want to say that for any three distinct elephants, X, Y, and Z, the combination of X and Y can defeat Z at tug-of-war" \[p. 158, italics in original\], there is a chain of *OTHER-nodes, each one representing every member of the set except for any earlier one.
86:136	"The scans responsible for all of this can become extremely complex as they try to consider all possible bindings, but that seems reasonable: beyond two or maybe three variables, people -especially children -have trouble as well.
87:136	The notation, at least, seems clear and unambiguous, even if the associated processes are difficult to construct and use" \[p. 158\].
88:136	From my point of view, it seems as though the typical-member technique was pushed so far that it simply broke down.
89:136	It is thought to be elegant and economical, but it needs patch upon patch.
90:136	Perhaps the alternatives are indeed better.
91:136	Fahlman, himself, goes on to introduce another representational technique, the defined class.
92:136	Consider asserting "Every purple mushroom is poisonous".
93:136	Using a predicate calculus-like representation, there would be no problem, but Fahlman, of course, wants a more object oriented representation.
94:136	One could create a new subset of the set of mushrooms, and have its typical member purple and poisonous.
95:136	However, this does not distinguish this set from the representation of "every poisonous mushroom is purple" or even from "a set of purple, poisonous mushrooms".
96:136	The defined set uses a new node type, the *EFERY-node, a special kind of *TYPE-node.
97:136	A *EVERY-node has two kinds of information stored about it, a specification and some incidental information.
98:136	Clauses in the specification are tied to their *EVERY-node by a spec-wire.
99:136	There can also be *INDV-nodes in the specification tied to the *EVERY-node by a spec-wire.
100:136	These nodes "serve as additional variables to use during the matching process" \[p. 161\] when a new individual node is being tested to determine if it is in the defined class.
101:136	We can recognize this kind of spec-wire as another Skolem arc, and analyze Fahlman's defined class as a representation of the statement schema (Ax) { (Ey)S(x,y) -> I(x)}, where S(x,y) is the specification, I(x) is the incidental information, x is the *EVERY-node, and y is a *INDV-node tied to x by a spec-wire.
102:136	The relation of this object oriented representation to proposition oriented representations can now be seen by considering statements (deduction rules, production rules) of the form (Ax){S(x) -> I(x)}.
103:136	A proposition oriented representation would use a node to represent the statement, with arc types to differentiate the antecedent(s) from the consequent(s), and to indicate the universally quantified variable.
104:136	An object oriented representation such as Fahlman's has no node representing the statement as a whole, has a specially typed node representing the universally quantified variable, an arc type between the variable and the American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 185 Book Reviews Understanding Spoken Language antecedent(s), and no special arc between the variable and the consequent(s).
105:136	Both representations have nodes representing the propositions of the antecedent(s) and the consequent(s).
106:136	Looked at in this way, Fahlman's restriction that "No clause may be part of the specification of more than one *EVERYnode" \[p. 161\] can be seen as eliminating the possibility of representing statements of the form (Ax)(Ay) {S(x,y) -> I(x,y)}.
107:136	Before concluding, I must make one comment on a passage which I fear illustrates a common attitude among AI researchers.
108:136	Fahlman points out that, "If an object is said to exist within an area, that means that it exists somewhere within the area; if a statement is said to be valid within an area, it means that it is valid everywhere within the area" \[p. 114, italics in the original\].
109:136	He then comments that "This difference in the behavior of existence and statement-scoping came as something of a surprise to me -I am told that the logicians have known something of this sort all along, but they tend not to express it in these terms.
110:136	This difference caused a lot of trouble until I understood what was happening" \[p. 115\].
111:136	The first point is that this is a nice statement of the reason AI researchers should study logic.
112:136	Perhaps, if he had, Fahlman would have been saved a lot of trouble.
113:136	The other point is that if a researcher discovers that he has rediscovered a distinction or issue already discussed by others in different terms, he should rewrite his own discussion in the existing terms, giving the appropriate credit and providing the connections to his readers, not dismiss the older work in a couple of sentences and contribute to the proliferation of jargon.
114:136	The issue is no less than the respectability of AI.
115:136	What makes these complaints more serious is that this book represents a good piece of work, already having an impact on the "knowledge representation" community.
116:136	It is certainly must reading for anyone also involved in the inheritance hierarchy brand of representation.
117:136	Stuart C. Shapiro, SUNY-Buffalo Understanding Spoken Language Donald E. Walker, Editor Elsevier North-Holland, New York, 1978, 420 pp.
118:136	, Paperback, $9.95, ISBN 0-444-00287-1.
119:136	In 1970 the Advanced Research Projects Agency decided to fund six research projects aimed at developing systems that were capable of understanding connected speech.
120:136	From 1971 to 1975, this research was carried out.
121:136	This book is a collection of articles (most of which have been published separately) which grew out of the final report of the speech understanding group at SRI International.
122:136	Despite its title, its stated purpose is to describe SRI's speech understanding system rather than speech understanding in general, and it contains much material pertinent to understanding written language as well as speech.
123:136	Although the introductory and concluding material attempts to unify the book, it remains a collection of very separate articles rather than a unified whole.
124:136	As a consequence it suffers from the common problems of books of this type: inadequate cross referencing, poor transitions between chapters, and no index.
125:136	The absence of an index is a serious problem that is compounded by the fact that the table of contents contains only three levels of structure; more detailed outlines of the contents are found at the beginning of each chapter.
126:136	Fortunately the references have been merged into a single list.
127:136	The reference list is very good, in part because it is not too long to scan easily.
128:136	The signal processing part of speech understanding is given the barest mention because SRI did not do work in that area; the book concentrates on the higher level aspects of the understanding process.
129:136	The first chapter is a nicely written introduction and overview by Donald Walker.
130:136	It describes the organization of the ARPA speech understanding effort and outlines the SRI system.
131:136	The second chapter, by William Paxton, quickly plunges the reader into a rather detailed description of the language definition system which was used to define the language that the system would understand.
132:136	These definitions were then compiled into a form that the executive system, which controlled the other components of the system, would understand.
133:136	The language definition consisted of a lexicon (words and "multiwords" with grammatical categories, grammatical features, and associated semantic information) and composition rules (phrase structure rules augmented by procedures to be executed whenever the rule constructs a phrase).
134:136	The procedures gave values to attributes of the phrase as a function of the attributes of its constituents and judged the acceptability of the phrase on a number of grounds such as acoustic properties, syntactic properties (such as mood and number), semantic properties (using the semantic network representation discussed further on), and discourse information to handle anaphora and ellipsis.
135:136	Much of the complexity of the language definition derives from the fact that it must screen out bad input rather than just recognize good input as many grammars do.
136:136	In discussing the executive system itself, much space is devoted to historical background, comparisons with other speech understanding systems, and the experimentation (using analysis of variance) that was 186 American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980

