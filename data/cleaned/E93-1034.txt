Tuples, Discontinuity, and Gapping in Categorial Grammar* Glyn Morrill t & Teresa Solias t tDepartament de Llenguatges i Sistemes Informgtics Universitat Polit~cnica de Catalunya Edifici F I B, Pau Gargallo, 5 08028 Barcelona e-maih morrill@lsi.upc.es tDepartamento de Filologfa Espafiola (Lingfiistica) Universidad de Valladolid Facultad de Filosoffa y Letras, Plaza de la Universidad, s/n 47001 Valladolid e-mail: solias@cpd.uva.es Abstract This paper solves some puzzles in the formalisation of logic for discontinuity in categorial grammar.
A 'tuple' operation introduced in \[Solias, 1992\] is defined as a mode of prosodic combination which has associated projection functions, and consequently can support a property of unique prosodic decomposability.
Discontinuity operators are defined model-theoretically by a residuation scheme which is particularly arnmenable proof-theoretically.
This enables a formulation which both improves on the logic for wrapping and infixing of \[Moortgat, 1988\] which is only partial, and resolves some problems of determinacy of insertion point in the application of these proposals to in-sits binding phenomena.
A discontinuons product is also defined by the residuation scheme, enabling formulation of rules of both use and proof for a 'substring' product that would have been similarly doomed to partial logic.
We show how the apparatus enables characterisation of discontinous functors such as particle verbs and phrasal idioms, and binding phenomena such as quantifier raising and pied piping.
We conclude by showing how the apparatus enables a simple categorial analysis of (SVO) gapping using the discontinuity product and the wrapping operator.
*The work by Glyn Morrill was for the most part carried out under the support of the Ministerio de Edu.
caciJn V Ciencia, Madrid, in the form of visting scholarship grant SB90 P413308C.
1 Introduction
In \[Lambek, 1958\] the suggestive recursive fractional categorial notations of \[Ajdukiewicz, 1935\] and \[BarHillel, 1953\] were provided with a foundational setting in mathematical logic.
This takes the form of a model theory interpreting category formulas in algebraic structures.
A Gentzen style sequent proof theory for which there is a Cut-elimination result means that a decision procedure is provided on the basis of sequent calculus.
The category formulas are freely generated from atomic category formulas (e.g.
N for referring nominals, S for sentences, CN for common nouns, )... by binary operators \ ('under'), / ('over') and • ('product').
The interpretation is in semigroups, i.e. algebras (L, +) where + is a binary operation satisfying the associativity axiom sl + (s~ + s3) = (sl + s2) + s3.
(In the non-associative formulation of \[Lambek, 1961\], this condition is withdrawn).
We may in particular consider the algebra obtained by taking the set V* of strings over a vocabulary V; then L is V* {t} where t is the empty string.
Each category formula A is interpreted as a subset D(A) of L.
Given such a mapping for atomic category formulas it is extended to the compound category formulas thus: D(A\B) = {sirs' ~ D(A),s' + s E D(B)} (1) D(B/A) -{slVd E D(A),s + s' E D(B)} D(A*B) = {sl + s213Sl e D(A),s2 e D(B)} In general we may define L in terms of a semigroup algebra (L*, +, t) where f E L is an identity element, i.e. an element such that s + t = t + s -s; then L is L* {t}.
In the sequent calculus of \[Lambek, 1958\] a sequent is of the form A1,..., An =~ A where n > 0,1 and is read as asserting that for any elements 1The requirement n > 0 blocks the inference from 287 sl,..., Sn in A1,.
• •, An respectively, sl +...
+ Sn is in A.
Thus the relevant prosodic operations are encoded by the linear ordering of antecedents in the sequent, and structural rules of permutation, contraction, and weakening are not valid.
The calculus is as follows.
The notation P(A) represents an antecedent containing a subpart A.
a. ~.id r =~ A A(A) =~ B (2) A =~ A Cut a(r) B b.
r =~ A A(B) =~ C A, r ==~ B \L ~R aft, A\B) :=~ C r ::~ A\B C.
r =~ A A(B) ==~ C r, A =~ B • /L B/A/R A(B/A, r) =~ C r d.
F(A,B) ~ C r ~ A A =~ B • L .R r(A.B) ~ C r, A =t~ A.B As is normal in sequent calculus, each operator has a L(eft) rule of use and a R(ight) rule of proof.
Cutfree backward chaining proof search is terminating since in every proof step going from conclusion to premises, the total number of operator occurrences is reduced by one.
The original development of categorial grammar grew from semantic concerns, and as is well known, the formalism embraces compositional type-logical semantics.
In particular, division categories A\B and B/A can be seen as Fregean functors: incomplete Bs the meanings of which are abstracted over A argument meanings.
Complete (or: saturated) expressions bearing primary meanings belong to atomic categories.
Given some basic semantic domains (e.g.
truth values {0, 1}, a set of entities E, )... a hierarchy of spaces for a type-logicai semantics may be generated by such operations as function formation (r\[2: the set of all functions from r2 into rl) and pair formation (rl x r~: the set of all ordered pairs comprising a rl followed by a r2).
Each category formula A is associated with a semantic domain T(A).
Such a type map T for atomic category formulas (e.g.
T(N) = E,T(S) = {0, 1},T(CN) = {0, 1} E) is extended to compound category formulas by T(A\B) = T(B/A) = T(B) T(A) and T(A*B) = T(A) x T(B).
Each category formula A is now interpreted as a set of two dimensional 'signs': a subset D(A) of L x T(A).
Such an interpretation for atomic category formulas is extended to one for compound A =~ A to =~ A/A which as a theorem would assert that the identity element t is a member of each category of the form A/A (similarly for A\A).
Since we have defined categories to be interpreted as subsets of a set L which does not necessarily contain an identity element, such a theorem would not be valid, and it is prevented by defining sequents as having at least one antecedent formula.
category formulas by: 2 D(A\B) D(B/A) D(A.B) = {(s,m)IV(s',m') e D(A), (3) (s' + m(m')) e D(B)} -{(s,m)lV(s',m') e D(A), (, + e, m(m')) e O(B)} = (st, ml) • D(A), (s2, ms) • D(B)} Proofs can be annotated to associate typed semantic lambda terms with each theorem \[Moortgat, 1988\].
A sequent has the form zi:A1,...,xn:An ::~ ¢:A where n > 0, no semantic variable is associated with more than one category formula, and ¢ is a typed lambda term over (free) variables {xl,..., x,}.
It is to be read as stating that the result of applying the prosodic operation implicit in the ordering, and the semantic operation represented explicitly by ¢, to the prosodic and semantic components of any signs in At,..., An yields a sign in A.
This system is understood as observing the type map in the obvious way, and is an instance of the Curry-Howard correspondence between (intuitionistic) proofs and typed lambda terms.
It was first employed in relation to categorial grammar in \[van Benthem~ 1983\]; for generalisation to other connectives see \[Morrill, 1990b; Morrill, 1992a\] 2 Prosodic Labelling As we shall see, the implicit coding of prosodic operations in the ordering of a sequent is not expressive enough to represent the logic of discontinuity connectives.
In this connection, \[Moortgat, 1991b\] employs \[Gabbay, 1991\] notion of labelled deductive system (LDS).
When we label for prosodics as well as semantics, a sequent has the form al zi: At, ..., am x, :Am ::~ a ¢: A where n >_ 0, no prosodic or semantic variable is associated with more than one category formula, c~ i s a prosodic term over variables {al,..., an} and ¢ is a typed lambda term over (free) variables {zl,..., Zn}.
The prosodically and seman2A general preparation for such multidimensional characterisation is provided by \[Oehrle, 1988\] which effectively refines Montague's program in order to provide a more even-handed treatment of linguistic dimensions.
But note that Oehrle anticipates only functions as prosodic and semantic objects.
Here the prosodic algebra is not marie up of functions, and nor are functions the only kind of semantic object.
The symmetric treatment of prosodies and semantics concurs with the contemporary trend for 'sign-based' grammatical formalisms such as HPSG \[Pollard and Sag, 1902\], though this latter only goes so fax as recursively defining a relation between prosodic and semantic forms, i.e. representations.
By interpreting categories in the way set out in \[Morrill, 1992a\] as pairings of prosodic and semantic objects we make direct reference to their properties as defined in terms of mathematical models, and use forms only in the metatheory.
288 tically labelled calculus is as follows.
3 to the prosodic dimension.
a. id az:A =~ ax:A (4) 3 Residuation b.
r ~.
¢:A a ~:A, a ~ ~(a) ¢(~): Bent r, a ~ t~(~) ¢(¢): B F =t.
a ¢: A b y: B, A ~ 7(0 X(Y): C \L F, d w: A\B, A =V 3'(a + d) X(w ¢): C C.
d. F,a-x:A =*, a+3"-¢:B "\R r :0 3' Axe: A\B e.
r =~ a-¢:A b-v:B,A=v3"(b)-¢(v):C ~, d"w'.'~/A, -A ~-~d ~k-~ ---~(-w ¢-~'.
C .\]L f.
r,a-x:A~3"+a-¢:B ./a F =V 7 Axe: B/A g.
a-z:A,b-y:B,A=t, 3"(a+b)-x(x,y):C oL c z:A..B, A ~ :'r(e) x(lrlz, Ir2z):C h.
r~a-¢:A A =t,/~ ¢:B .,,It F,A =:*.
a+/~(¢,¢):A..B The pattern of prosodic interpretation and prosodic labelling given above is entirely general.
The interpretation scheme is called residuation.
Under the scheme we define in terms of any binary operation +n complementary (or: dual) division operators \n and/n and product operator ..n by the clauses given in (5).
D(A\.B) D(B/nA) D(A.nB) = (,IVs' e D(A),s' +n s • D(B)} (5) = {sirs' • D(A),s +, s'• D(B)} -{81 -~n 821381 • D(A), s2 • D(B)} As a consequence the following laws hold (see \[Lambek, 1958; Lambek, 1988; Dunn, 1991; Moortgat, 1991a; Moortgat and Morrill, 1991\]: 4 A ::t, C/riB HFA.nB =~ C Hk B ::V A\nC (6) The LDS logic directly reflects this interpretation.
It always has the following format, together with label equations in accordance with the axioms of the algebra of interpretation.
a. (7) "id a:A :=~ a:A b.
We are free to manipulate labels according to the equations they satisfy.
In the case of associative Lambek calculus there is the assoeiativity c.
law; in the case of non-associative Lambek calculus there would be no equations on labels.
Observe that with prosodic labelling, the structural rules permutation, contraction, and weakening are d.
valid. In our labelling, we maintain the convention that antecedent formulas are labelled with prosodic and semantic variables.
As a result each theorem al -xvA1,...,an -xn:An =:" a-¢:A can be read as a Montagovian rule of formation with input categories AI,...,An and output category A and prosodic and semantic operations a and ¢.
Other f.
versions of labelling allow labelling antecedent formulas with prosodic and semantic terms in general.
However such labelling constrains the value of the elements to which the theorems apply by reference to g.
the terms that represent them.
In relation to grammar, this would mean conditioning rules on the semantic and/or prosodic form of the input.
For instance, with respect to semantics, this would constih.
tute essential reference to semantic form in the way which Montague grammar deliberately avoids.
We advocate exactly the same transparency in relation 3In prosodic and semantic terms we allow omission of parenthesis under associativity, and under a convention that unary operators bind tighter than binary operators.
F =~ a:A a:A,A ::t,/5(a): B Cut r, ~ ~ ~(a): B F::~a:A b:B,A:o7(b):C r,d:A\nB, a =~ 3"(a +.
d):C \"L r,a:A ::*.
a+n 3':B .\,It r =¢, 3": A\,B e.
r~a:A b:B,A=,.3"(b):C r, d: B/hA, A :0 3'(d +n a): C/nL" r,a:A ::~ 3"+.
a:B ~.It P ::~ 3': B\],A a:A,b:B,A =*.
7(a +n b):C an L c:A..nB, A ::~ 7(c):C F =V a:A A ::V B:B an R r, A :,.
a +.
~: A*.B 4In fact the residuation scheme is even more general than that which we need here: is applies to ternary 'accessibility' relations in general, not just to binary functions, i.e. deterministic ternaxy relations.
289 The semantic interpretation with respect to function and Cartesian product formation can also be applied uniformly, with systematic labelling as in the previous section.
4 Discontinuity
Elegant as such categorial grammar is, it is more suggestive of an approach to computational linguistic grammar formalism, than actually representative of such.
Amongst the various enrichments that have been proposed (see e.g.
\[van Benthem, 1989; Morrill et al., 1990; Barry et al., 1991; Morrill, 1990a; Morrill, 1990b; Moortgat and Morrill, 1991; Morrill, 1992a; Morrill, 1992b\]), \[Moortgat, 1988\] advanced earlier discussion of discontinuity in e.g.
\[Bach, 1981; Bach, 1984\] with a proposal for infixing and wrapping operators.
The operators not only provide scope over these particular phenomena but also, as indicated in e.g.
\[Moortgat, 1990\], seem to provide an underlying basis in terms of which operators for binding phenomena such as quantification and reflexivisation should be definable.
The coverage of pied piping in \[Morrill, 1992b\] would also be definable in terms of these primitives, but all this depends on the resolution of certain technical issues which have been to date outstanding.
Amongst the examples we shall be able to treat by means of our present proposals are the following.
a. Mary rang John up.
(8) b.
Mary gave John the cold shoulder.
c. John likes everything.
d. for whom John works.
e. John studies logic, and Charles, phonetics.
In the particle-verb construction (8a) and discontinuous idiom (8b), the object 'John' infixes in discontinuous expressions with unitary meanings.
In (8c) the quantifier must receive sentential semantic scope, and in (Sd) the pied piping must be generated, with the semantics of 'whom John works for'.
In (Be), the semantics of the verb gapped in the second conjunct must be recovered from the first conjunct.
Binary operators T and ~ are proposed in \[Moortgat, 1988\] such that BTA signifies functors that wrap around their A arguments to form Bs, and BIA signifies functors that infix themselves in their A arguments to form Bs.
Assuming the semigroup algebra of associative Lambek calculus, there are two possibilities in each case, depending on whether we are free to insert anywhere (universal), or whether the relevant insertion points are fixed (existential).
We leave semantics aside for the moment.
Existential (9) D(BT~A) = {s\]3sl, s2\[s = Sl + s2 A Vs' • D(A), sl + d + s2 • D(B)\]} Universal D(BTvA) = {s\]Vsl, s2\[s = sl + s2 --* Vs' • D(A), Sl + s' + s2 • D(B)\]} Existential (10) D(BIjA) = {s\]Vd e D(A), qSl, s: Is' = sl +s2 Asl +s' + s2 e D(B)\]} Universal D(SivA) = {sIVs' • D(A), Vsl, s2 \[s' = sl + s2 ---* Sl + s' + s2 • D(S)\]} Inspecting the possibilities of ordered sequent presentation, of the eight possible rules of inference (use and proof for each of four operators), only TjR and IvL are expressible: a.
rl,A,r~ =~ B (11) rl, F2 =~ BT~A TJFt b.
El,F2 =¢, A A1,B, A2 ::~ C IvL A1, El, BIvA, F2, A2 =¢, C This is the partiM logic of \[Moortgat, 1988\].
Note that the absence of a rule of use for existential wrapping means that we could not generate from discontinuous elements such as ring up and give the cold shoulder which we should like to assign lexical category (N\S)TsN.
(Evidently Tv would permit incorrect word order such as *'Mary gave the John cold shoulder').
The problem with ordered sequents is that the implicit encoding of prosodic operations is of limited expressivity.
Accordingly, \[Moortgat, 1991b\] seeks to improve the situation by means of explicit prosodic labelling.
This does enable both rules for e.g.
~v but still does not enable the useful TjL: the remaining problem is, as noted by \[Versmissen, 1991\], that we need to have an insertion point somehow determinate from the prosodic label for an existential wrapper in order to perform a left inference.
In \[Moortgat, 1991a\] a discontinuity product is proposed, again implicitly assuming just a semigroup algebra: 5 D(A ® B) = {sl + s2 +dl \]Sl + st e D(A), (12) s2 E D(B)} As for the discontinuity divisions, ordered sequent presentation cannot express rules of both use and proof: only ®R can be represented: rl, F2 ::~ A A =~ B (13) '®R F1,A,F2 =~ A®B Even using labelling, the problem for ®L remains and is the same as that above: there is no proper management of separation points.
In \[Moortgat, 1991a\] it is observed how the quantifying-in of infix binders such as quantifier SThe version given is actually just the existential case of two possibilities, existential and universal, as before.
No rules for the universal version can be expressed in ordered sequent calculus, or labelled sequent calculus.
290 F,ax:A =:~ 71 +a+72 -¢:B TR F =:~ (71,72) (Xz¢): BTA P,az:A ==~ la+x+2a¢:B IR r x (axe): BIA F ::~ (hi, a2) ¢: A A ::~ fl ¢: B ®L r,A ~,~1 +~+a2 (¢,¢):A @ B A=~a-C:A F, A, c z: BTA r, b v: s,(b) D TL =~ 6(lc + a + 2c) w((z ¢)): O F ==~ (as,a2) ~b:A A,bv:B ::~ 6(b) w(y):D IL F, A, c z: B~A =*, 6(hi + c + ~2) w((z ¢)): D F, a z: A, b y: B :=~ 6(la + b + 2a) X(z, Y): C @R r,c z:A ® B =t, 6(c) x(~rlz,~r2z):D Figure h Labelled rules for discontinuity operators phrases seems almost definable as SI(STN): they infix themselves at N positions in Ss (and take semantic scope at the S level that is why they must be quantified in).
And if this definability could be maintained, it would enable these operators to simulate the account of pied piping in \[Morrill, 1992b\].
None of the interpretations above however enable the expression of the requirement that the positions referred to by the two operator occurrences are the same.
Our proposals will facilitate this definability, and also admit of a full (labelled) logic.
5 Tuple
Control of Insertion Points The present innovation rests on extending the prosodic algebra (L*,+,t) as above to an algebra (L*, +, t, (., .), 1, 2) where (., ).
is a binary operation of tuple formation (introduced in \[Solias, 1992\]), with respect to which 1 and 2 behave as projection functions.
Thus the algebra satisfies the conditions: l(sl, s2) = sx 2(sl, 82) = 82 (14) (Is, 2s) -" s We may in particular think of the algebra of elements V* obtained from disjoint sets V and {\[, ;, \]} by closing V under two binary operations: concatenation +, and pairing \[.
.\] where pairing can be defined as concatenation with delimitation and marking of insertion point.
The proposal can be related to \[Moortgat and Morrill, 1991\] which also considers algebras with more than one adjunction operation (each either associative or non-associative), and defines divisions and products with respect to each by residuation.
Note however that firstly, our tuple prosodic operation is not simply that of non-associative Lambek calculus which is characterised by the absence of any axiom (associative or otherwise), since the projection axioms entail specific conditions not imposed in the non-associative case: we might describe the tuple system as unassociative.
Tupling is bijective and a prosodic object s formed by tupling records a separation point between two objects ls and 2s whereas a prosodic object formed by non-associative adjunction has no such recoverable separation point.
Secondly, we are not primarily interested here in divisions and products based on tupling but in the combined use of the associative and unassociative operations to define discontinuity operators.
(Note however that residuation with respect to tupling, as proposed in \[Solias, 1992\], would define operators suitable for verbs regarded as head-wrappers such as 'persuade').
This brings us to the essence of the present proposals with respect to wrapping and infixing.
The prosodic interpretation for the discontinuity operators is to be as follows: D(BTA) ={s\[Vs' e D(A), ls + s' + 2s e D(B)} (15) D(BIA) = {siVa' e D(A), ls' + s + 28' G D(B)} D(A ® B) = {181 + 82 + 282\[81 • D(A),82 • D(B)} It can be seen that the operators are the residuation divisions with respect to a binary prosodic operation I defined by szIs2 = 181 + s2 + 281 just as the Lambek operators are the residuation divisions with respect to +.
Use of the tuple operation collapses the former distinction between existential and universal in (9) and (10).
Because pairing is bijective and tuples express a unique insertion point, there is a unique decomposition of tupled elements.
Existential and universal wrappers collapse into a single wrapper and existential and universal infixers collapse into a single infixer.
Turning to include the semantics, the type map is as is to be expected for functors and for product: T(BTA) = T(BIA) = T(B) T(A) and T(A @ B) = T(A) x T(B), and as usual a category formula A is interpreted as a subset of L x T(A).
D(BTA) = {(s,m)\[V(s',m') • D(A), (16) (ls + 8' + 2s, m(m')) • D(S)} D(B~A) = {(s, rn)\]V(s',rn') • D(A), (Is' + s + 28', m(m')) • D(B)} D(A®B) = {(lSl+S2+2sl,(ml,m2))\[ (sl, rnl) • D(A), (s2, m2) • D(B)} The full prosodically and semantically labelled logic is given in Figure 1.
In TL lc and 2c pick out the first and second projections of the prosodic object c in the same way that projections pick out the components of a semantic object in the eL rule of (4g); 291 likewise in ~l~ for the projections la and 2a.
The resulting prosodic forms are only simplifiable when the relevant objects are tuples.
6 6 Discontinuity Examples 6.1 Phrasal Verbs As a first example of discontinuity consider the particle verb case 'Mary rang John up' and the discontinuous idiom case 'Mary gave John the cold shoulder'.
The meaning of the particle verb and the phrasal idiom resides with its elements together, which wrap around their object.
The lexical assignments required are: (rang, up) ring-up (17) := (N\S)TN (gave, the + cold + shoulder) give-tes := (N\S)TN A derivation is given in Figure 2.
The lexical prosodies and semantics of the proper names may be assumed to be atoms.
For 'Mary rang John up', substitution of the lexical prosodies thus yields (18) which simplifies as shown.
Mary + 1(rang, up) + John + 2(rang, up) Mary -trang + John + up (18) Similarly, substitution of the lexical semantics gives (19).
((ring-up john) mary) (19) For 'Mary gave John the cold shoulder', substitution of the lexical prosodies yields: Mary + l(gave, the + cold + shoulder) qJohn + 2(gave, the + cold + shoulder) .,z Mary + gave + John + the + cold + shoulder (20) The semantics is: ((gave-tcs john) mary) (21) °Having the projection functions defined for all prosodic objects rather then just tuple objects allows us to consider the prosodic algebra to be untyped (or: unsorted).
Consequently, there is no need to check for the data type of prosodic objects such as by patternmatching on antecedent terms (see comment above on transparency of rules).
It may be possible to develop the present proposals by adding sort structure to the prosodic algebra in a manner analogous to the typing of the semantic algebra.
Such sorting could be essential to defining a model theory with respect to which the calculus can be shown to be complete.
Recursive nesting of infixation points does not appear to be motivated linguistically, and the present calculus does not support it.
A sorted model theory which excludes the recursion might provide an interpretation with respect to which the present calculus is both sound and complete.
6.2 Quantifier
Raising In Montague grammar quantifying-in is motivated by the necessity to achieve sentential scope for all quantifiers and quantifier-scope ambiguities.
Quantifying-in allows a quantifier phrase to apply as a semantic functor to its sentential context.
Quantifying-in at different sentence levels enables a quantifier to take scope accordingly, and alternative orderings of quantifying-in enable quantifiers to take different scopings relative to one another.
In \[Moortgat, 1990\] a binary operator ~ is defined for which the rule of use is essentially quantifying-in, so that a Montagovian treatment of quantifier-scoping is achieved by assignment of a quantifier phrase like 'something' to N~S, and assignment of determiners like 'every' to (N~S)/CN.
In \[Moortgat, 1991a\] he suggests that a category such as A ~ B might be definable as B~(BTA), but notes that this definability does not hold for his definitions, for which, furthermore, the logic is problematic.
On the present formulation however, these intuitions are realised.
The category S~(STN) is a suitable category for a quantifier phrase such as 'everything' or 'some man', achieving sentential quantifier scope, and quantificational ambiguity.
Assume the lexical entry (22).
everything XzVy(x y) := SI(SI"N) (22) For 'John likes everything' there is the derivation in Figure 3.
In this derivation, and in general, lines are included showing explicit label manipulations under equality in the prosodic algebra, in such a way that all rule instances match the rule presentations.
Substitution of the lexical prosodies and semantics associates John + likes + everything with (23) which simplifies as shown.
(AzVy(x y) Ac((like c) john)) --* (23) Vy((like y) john) In this example the' quantifier is peripheral in the sentence and a category (S/N)\S could have been used in associative Lambek calculus.
However, another category S/(N\S) would be needed to allow the quantifier phrase to appear in subject position, and further assignments still would be required for postverbal position in a ditransitive verb phrase, and so on.
Some generality can be achieved by assuming second-order polymorphie categories (see \[Emms, 1990\]), but note that the single assignment we have given allows appearance in all N positions without further ado, and allows all the relative quantifier scopings at S nodes.
6.3 Pied
Piping In \[Moortgat, 1991a\] and and \[Morrill, 19925\] a three-place operator is considered which is like A B, except that quantifying-in changes the category of the context expression..
\[Morrill, 1992b\] shows that this enables capture of pied piping.
It follows from 292 m-m:N :~m-m:N b-b:S ::~b-b:S \L j-j:N =~j-j:N m-m:N,a-a:N\S =~m+a-(am):S tL m m: N, r r: (N\S)TN, j j: N =~ m+lr+j+2r ((r j) m): S Figure 2: Derivation for 'Mary rang John up' and 'Mary gave John the cold shoulder' c-c:N =~ cc:N j-j:N =~j-j:N f-f:S =~f-f.'S \L j-j:N,d-d:N\S :~j+d-(dj):S /i j j: N, l h (N\S)/N, c c: N =~ j+l+c ((1 c) j): S j -j:N, l-I:(N\S)/N =~ j+l+c+t ((l c)j):S j -j:N, 1-h (N\S)/N =~ (j+l, t) Ac((1 c)j):StN TR b-b:S =*.
b b:S 4L j -j: N, 1 l: (N\S)/N, e -e: SI(STN) ::~ j+l+e+t (e Ac((l c) j)): S j j: N, 1 h (N\S)/N, e e: S~(STN) =~ j+l+e (e Ac((l c) j)): S Figure 3: Derivation for 'John likes everything' the nature of the present proposals that A~(BTC) presents the desired complicity between the operators.
As a result, the treatment of \[Morrill, 1992b\] can be presented in these terms.
Consider the example 'for whom John works'.
The relative pronoun is lexically assigned as follows where R is the common noun modifier category CN\CN.
whom w) ^ (u (x (24) :-(R/(STPP))~(PPTN) There is the derivation in Figure 4.
The result of prosodic substitution is for + whom + 0'ohn + works, t) (25) The result of semantic substitution is ((A~AYAzAwC(z w) ^ (Y (x w))\] (26) As(for a)) Ah((work h) john)) -,~ AzAw\[(z w) A ((work (for w)) john)\] As for the quantification, this example is potentially manageable in just Lambek calculus.
But an example where the relative pronoun is not peripheral in the pied piped material, such as 'a man a brother of whom from Brazil appeared on television' would be problematic for the same reasons as quantification.
The solution, in terms of infixing and wrapping, is the same in the two cases, but pied piping has been a more conspicuous problem for categorial grammar because while the scoping of quantifiers can be played down, the syntactic realisation of pied piping is only too evident.
In the phrase structure tradition, pied piping has been taken as strong motivation for feature percolation (see \[Pollard, 1988\]).
We have seen here how discontinuity operators challenge this construal.
Categorial grammar is well-known to provide OSSibilities for 'non-constituent' coordination (see teedman, 1985; Dowty, 1988J) less accessible in the phrase structure/feature percolation approach.
We turn now to another example which is glaringly problematic for all approaches, gapping.
It is entirely unclear how feature percolation could engage such a construction; but as we shall see the discontinuity apparatus succeeds in doing so.
7 Gapping
The kind of examples we want to consider are: John studies logic, and Charles, phonetics.
(27) The construction is characterised by the absence in the right hand conjunct of a verbal element, the understood semantics of which is provided by a corresponding verbal element in the left hand conjunct.
Clearly, instanciations of a coordinator category schema (X\X)/X will not generate such cases of gapping.
The phenomenon has attracted a fair amount of attention in categorial grammar (e.g.
\[Steedman, 1990; Raaijmakers, 1991\]).
The approach of \[Steedman, 1990\] aims to reduce gapping to constituent coordination; furthermore it aims to do this using just the standard division operators of categorial grammar.
This involves special treatment of both the right and the left conjunct.
We present our discussion in the context of the present minimal example of gapping a transitive verb TV.
With respect to the right hand conjunct, the initial problem is to give a categorisation at all.
Steedman does this by reference to a constituent formed by the subject and object with the coordinator.
This constituent is essentially TV\S but with a feature 293 a-a:N =~a-a:N c-c:PP =~c-c:PP /L f-f:PP/N, a-a:N ~f+a-(fa):PP f-f:PP/N, a-a:N =~f+a+t-(fa):PPTrt f-f:PP/N =~(f,t)-~a(fa):PPTN j-j:N =~j-j:N k-k:S =~k-k:S \L h-h:PP =~h-h:PP j-j:N, i-i:N\S =~j+i-(ij):S j-j:N, w-w:(N\S)/PP, h-h:PP =~j+w+h-((wh)j):S/L j-j:N, w-w:(N\S)/PP, h-h: PP =~j+w+h+t-((wh)j):STR j-j:N, w-w:(N\S)/PP =¢,(j+w, t)-),h((wh)j):STPP g-g:R =~g-g:R/L d-d:R/(STPP), j-j:N, w-w:(N\S)/PP =~d+(j+w,t)-(d),h((wh)j)):R IL f-f:PP/N, o-o:(R/(SI"PP))I(PPTN), j-j:N, w-w:(N\S)/PP =~f+o+t+(j+w,t)-((o~a(fa))~h((wh)j)):R m f-f:PP/N, o-o:(R/(STPP))I(PPTN), j-j:N, w-w:(N\S)/PP =~f+o+(j+w,t)-((o),a(fa)))~h((wh)j)):R Figure 4: Derivation for 'for whom John works' both blocking ordinary application, and licensing coordination with a left hand conjunct of the same category.
The blocking is necessary because 'and Charles, phonetics' is clearly not of category TV\S: 'Studies and Charles, phonetics' is not a sentence.
Now, with respect to the left hand conjunct, Steedman invokes a special decomposition of 'John studies logic' analysed as S, into TV and TV\S.
There is then constituent coordination between TV\S and TV\S.
Finally the coordinate structure of category TV\S combines with TV on the left to give S.
Although this treatment addresses the two problems that any account of gapping must solve, categorisation of the right hand conjunct and access of the verbal semantics in the left hand conjunct, it attempts to do so within a narrow conception of categorial grammar (only division operators) that necessiates invocation of distinctly contrived mechanisms.
We believe that the radical reconstruals of grammar implicated by this analysis are not necessary given the general framework including discontinuity operators we have set out.
We address for the moment just our minimal example.
Within the context of categorial grammar we have established, the right hand conjunct is characterisable as STTV.
It remains to access the understood verbal semantics from the sentence that is the left hand conjunct.
In order to recover from the left hand side the information we miss on the right hand side, we would like to say that this information, the category and semantics of the verb, is made available to the coordinator when it combines with the left conjunct.
In accordance with the spirit of Steedman, we can observe that the left hand conjunct contains a part with the category SI"TV of the right hand constituent, but it is discontinuous, being interpolated by TV.
But this is precisely what is expressed by the discontinuous product category (STTV)®TV.
Furthermore, an element of such a category has as its semantics a pair the second projection of which is the semantics of the TV.
Consequently gapping is generated by assignment of 'and' to the category (((STTV)®TV)\S)/(STTV) with semantics ~x~y\[(rly lr2y) A (x 7r2y)\].
The complete derivation for (27) is as in Figure 5, where TV abbreviates (N\S)/N.
When we substitute the lexical prosodics (here each just a prosodic constant) for the prosodic variables in the conclusion, we obtain the prosodic form (28).
John + studies + logic + and (28) + ( Charles, phonetics) Similarly substituting the lexical semantics (all semantic constants except for the coordinator semantics as above), we obtain the associated semantics (29) which evaluates as shown.
^ (29) Aw((w phonetics) charles)) (As((s logic) john), studies)) -,~ \[((studies logic) john)A ((studies phonetics) charles)\] Some generalisation to cover different categories of gapped element and different categories of coordination is given by straightforward schematisation.
In general, gapping coordinator categories have the form ((Z ® Y)\X)/Z where Z is XTY.
In this scheme, X is the category of the resulting coordinate structure and Y is the category of the gapped materiM.
This allows interaction with other coordination phenomena such as node raising.
For example, a referee pointed out that gapping can occur within incomplete sentences thus: 'John gave a book and Peter, a paper, to Mary'.
Such a case would be covered by the instanciation where Y is the ditransitive verb category and X is S/PP.
For generalisation including multiple gapping (several discontinuous segments elided) see \[Solids, 1992\], which employs in addition operators formed by residuation with respect to tupling.
That approach has certain affinities with \[Oehrle, 1987\], and makes it possible to begin to address examples of Oehrle's relating to scope and Boolean particles.
The purpose of the present paper has been to lay the groundwork for empiricM inquiry into gapping and other notorious nonconcatenative phenomena, made possible in 294 j-j:N,s-s:TV,I-I: N=}j+s+l( (sl)j):S.1.R s-s:TV=}s-s:TV j-j:N,I-hN=~(j,I)-As((sl)j):SI"TV ®R j-j:N=}-j-j:N n-n:S=~n-n:S I-hN=M-I:N j-j:N,g-g:N\S =~j+g-(gj):S.fL L j-j:N,H:TV,l-hN=>j+s+l-(As((sl)j),s): (S}TV)®TV f-f:S=~f-f:S '\L j-j:N,s-s:TV,l-h N,e-e:((STTV)®TV)\S=~j+s+l+e-(e(As((sl)j),s)):S j-j:N,s-s:TV,l-h N,e-e:((STTV)(DTV)\S=>j+s+I+e-(e(As((sl)j),s)):S p--p:N=:>p-p:N c-c:N=~c-..c:N n-n:S=~n-n:S \L c-c:N,y-y:N\S=~c+y-(yc):S /L c-c:N,p-p:N,w-w:TV=~c+w+p-((wp)c):S TR c-c:N,p-p:N=>(c,p)-Aw((wp)c):STTV '/L j-j:N,s-s:TV, l-hN,a-a:((Sq)TV)\S)/(STTV),c-c:N,p-p:N=~j+s+l+a+(c,p)-((aAw((wp)c)) (As((sl)j),s)):S Figure 5: Derivation for 'John studies logic; and Charles, phonetics' categorial grammar by a proper treatment of discon• tinuity.
8 Conclusion
When \[Moortgat, 1988\] introduced discontinuity operators for categorial grammar, he noted that ordered sequent calculus was an inadequate medium for the representation of a full logic.
In \[Moortgat, 1991b\] the LDS formalism was invoked, but as we have seen, the LDS format alone is not enough.
The present paper has argued that a different view is required on the model theory of discontinuity than that suggested by interpretation in just a semigroup algebra.
This view is provided by adding to the algebra of interpretation the tuple operation of \[Solias, 1992\].
Not only does this clear up some vagueness with respect to existential and universal formulations, it also admits of a full labelled logic.
This has brought us to a stage where it is appropriate to address such issues as completeness and Cut-elimination.
Acknowledgements We thank the following for comment on an earlier abstract: Juan Barba, Alain Lecomte, Michael Moortgut, Koen Versmissen, and three anonymous EACL reviewers.
Particular thanks go to Mark ttepple who happens to have been thinking along similar lines.
References \[Ajdukiewicz, 1935\] Kazimierz Ajdukiewicz.
Die syntaktische Konnexit~it.
Studia Philosophica, 1, 1-27.
Translated in S.
McCall (ed).
Polish Logic: 1920-1939, Oxford University Press, Oxford, 207231.
\[Bach, 1981\] Emmon Bach.
Discontinuous Constituents in Generalized Categorial Grammars.
NELS, 11, 1-12.
\[Bach, 1984\] Emmon Bach.
Some Generalizations of Categorial Grammars.
In Fred Landman and Frank Veltman (eds.), Varieties of Formal Semantics, Foris, Dordrecht, pp.
1-23. \[Bar-Hillel, 1953\] Yehoshua Bar-Hillel.
A quasiarithmetical notation for syntactic description', Language, 29, 47-58.
\[Barry et al., 1991\] Guy Barry, Mark Hepple, Nell Leslie, Glyn Morrill.
Proof Figures and Structural Operators for Categorial Grammar.
In Proceedings of the Fifth Conference of the European Chapter of the Association for Computational Linguistics.
\[van Benthem, 1983\] Johan van Benthem.
The semantics of Variety in Categorial Grammar.
port 83-29, Department of Mathematics, Simon Fraser University.
Also in W.
Buskowski et al.(eds.), Categorial Grammar, Volume 25, Linguistic & Literary Studies in Eastern Europe, John Benjamins, Amsterdam/Philadelphia.
pp. 37-55.
\[van Benthem, 1989\] Johan van Benthem.
Categorial Grammar Meets Unification.
Ms. Institute for Language, Logic and Information, University of Amsterdam.
\[Dowty, 1988\] David Dowty Type Raising, Functional Composition, and Non-Constituent Conjunction.
In It.
Oehrle, E.
Bach and D.
Wheeler (eds).
Calegorial Grammars and Natural Language Structures, D.
Reidel, Dordrecht, pp.
153-197. \[Dunn, 1991\] J.M.
Dunn. Gaggle theory: an abstraction of Galois connections and residuation, with applications to negation, implication, and various logical operators.
In van Eijck (ed).
Logics in AL JELIA Proceedings.
Springer, Berlin.
\[Emms, 1990\] Martin Emms.
Polymorphic Quantitiers.
In Guy Barry and Glyn Morrill (eds).
Studies in Categorial Grammar, Edinburgh Working Papers in Cognitive Science Volume 5.
Also in Proceedings of the Seventh Amsterdam Colloquium.
\[Gabbay, 1991\] D.
Gabbay. Labelled Deductive Systems.
To appear, Oxford University Press.
295 \[Lambek, 1958\] J.
Lambek. The mathematics of sentence structure.
American Mathematical Monthly, 65, 154-170.
\[Lambek, 1961\] J.
Lambek. On the calculus of syntactic types.
In R.
Jakobson (ed).
Structure of Language and its Mathematical Aspects, Proceedings of the Symposia in Applied Mathematics XII, American Mathematical Society, 166-178.
\[Lambek, 1988\] J.
Lambek. Categorial and Categorical Grammars.
In R.
Oehrle, E.
Bach and D.
Wheeler (eds).
Categoriai Grammars and Natural Language Structures, D.
Reidel, Dordrecht, pp.
297-317. \[Moortgat, 1988\] Michael Moortgat.
Categorial Investigations: Logical and Linguistic Aspects of the Lambek Calculus.
Forts, Dordrecht.
\[Moortgat, 1990\] Michael Moortgat.
The Quantification Calculus: Questions of Axiomatisation.
In Deliverable R1.2.A of DYANA Dynamic Interpretation of Natural Language, ESPRIT Basic Research Action BR3175.
\[Moortgat, 1991a\] Michael Moortgat.
Generalized Quantification and Discontinuous type constructors.
To appear in Sijtsma & van Horck (eds).
Proceedings Tilburg Symposium on Discontinuous Constituency.
De Gruyter, Berlin.
\[Moortgat, 1991b\] Michael Moortgat.
Labelled Deductive Systems for categorial theorem proving.
In Proceedings of the Eighth Amsterdam Colloquium.
\[Moortgat and Morrill, 1991\] Michael Moortgat and Glyn Morrill.
Heads and Phrases: Type calculus for dependency and constituent structure..
Ms. Onderzoeksinstituut voor Taal en Spraak, Universiteit Utrecht.
To appear in Journal of Logic, Language and Information.
\[Morrill, 1990a\] Glyn Morrill.
Intensionality and Boundedness.
Linguistics and Philosophy, 13, 699-726.
\[Morrill, 1990b\] Glyn Morrill.
Grammar and Logical Types.
In Guy Barry and Glyn Morrill (eds).
Studies in Categorial Grammar, Edinburgh Working Papers in Cognitive Science Volume 5.
Also in Proceedings of the Seventh Amsterdam Colloquium.
\[Morrill, 1992a\] Glyn Morrill.
Type-Logical Grammar.
Research Report, Departament de Llenguatges i Sistemes Informhtics, Universitat Polit~cnica de Catalunya, and Onderzoeksinstituut voor Taal en Spraak, Universiteit Utrecht.
Monograph to appear in Studies in Logic Language and Information, Kluwer, Dordrecht.
\[Morrill, 1992b\] Glyn Morrill.
Categorial Formalisation of Relativisation: Pied Piping, Islands and Extraction Cites.
Research Report, Departament de Llenguatges i Sistemes Informhtics, Universitat Polit~cnica de Catalunya.
\[Morrill et al., 1990\] Glyn Morrill, Neil Leslie, Mark Hepple and Guy Barry.
In Guy Barry and Glyn Morrill (eds).
Studies in Categorial Grammar, Edinburgh Working Papers in Cognitive Science Volume 5.
\[Oehrle, 1987\] Richard T.
Oehrle. Boolean Properties in the Analysis of Gapping.
In G.
Huck and A.
Ojeda (eds).
Discontinuous Constituency, Syntax and Semantics XX.
Academic Press, New York, pp.
201-240. \[Oehrle, 1988\] Richard T.
Oehrle. Multi-Dimensional Compositional Functions as a Basis for Grammatical Analysis.
In R.
Oehrle, E.
Bach and D.
Wheeler (eds).
Categoriai Grammars and Natural Language Structures, D.
Reidel, Dordrecht, pp.
349-389. \[Pollard, 1988\] Carl J.
Pollard. Categorial Grammar and Phrase Structure Grammar: an excursion on the syntax-semantics frontier.
In R.
Oehrle, E.
Bach and D.
Wheeler (eds).
Categorial Grammars and Natural Language Structures, D.
Reidel, Dordrecht, pp.
391-415. \[Pollard and Sag, 1992\] Carl Pollard and Ivan A.
Sag. An Information.
Based Approach to Syntax and Semantics, part 2.
To appear, Chicago University Press.
\[Raaijmakers, 1991\] S.
Raaijmakers. Lexicalism and Gapping.
Ms. Institute for Language Technology and AI, Tilburg.
\[Solias, 1992\] M.
Teresa Solias.
Gramdticas Categoriales, Coordinaci6n Generalizada y Elisidn.
Doctorate thesis, Departamento de Lingiiistica, LSgica, Lenguas Modernas y Filosofla de la Cieneta, Universidad AutSnoma de Madrid.
\[Steedman, 1985\] Mark Steedman.
Dependency and Coordination in the Grammar of Dutch and English.
Language, 61,523-568.
\[Steedman, 1990\] Mark Steedman.
Gapping as Constituent Coordination.
Linguistics and Philosophy 13, pp.
207-236. \[Versmissen, 1991\] K.
Versmissen. Discontinuous Type Constructors in Categorial Grammar.
Ms. Onderzoeksinstituut voor Taal en Spraak, Universiteit Utrecht. 296

