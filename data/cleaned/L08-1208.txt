<algorithm name="ParsCit" version="080917">
<citationList>
<citation valid="true">
<authors>
<author>Sun Cai</author>
</authors>
<title>Research on lexical error detection and correction of chinese text</title>
<date>1997</date>
<tech>Master’s thesis</tech>
<institution>Tsinghua University</institution>
<location>Beijing, China</location>
<contexts>
<context>ce, and a ”correct” result with highest evaluation score is searched from all paths. The obvious disadvantage of this method is that only errors caused by character substitution can be detected. Cai (Cai, 1997) found that most Chinese word errors cause segmentation abnormality, for example segmentation of ”�??”, which is a character deletion error of the correct word ”��??” (be devoted), is likely to be th</context>
</contexts>
<marker>Cai, 1997</marker>
<rawString>Sun Cai. 1997. Research on lexical error detection and correction of chinese text. Master’s thesis, Tsinghua University, Beijing, China.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chao huang Chang</author>
</authors>
<title>A pilot study on automatic chinese spelling error correction</title>
<date>1994</date>
<journal>Communication of CPLIPS</journal>
<volume>4</volume>
<contexts>
<context> Chinese characters, then we will find virtually no “non-word” errors because each character may well be a word. One representation method for automatic Chinese word correction was developed by(huang Chang, 1994) which uses confusing character substitution. In the method, confusing characters are used to replace every character in a given input sentence, and a ”correct” result with highest evaluation score i</context>
</contexts>
<marker>Chang, 1994</marker>
<rawString>Chao huang Chang. 1994. A pilot study on automatic chinese spelling error correction. Communication of CPLIPS, 4(2):143–149.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kin Hong Lee</author>
<author>Mau Kit Michael Ng</author>
<author>Qin Lu</author>
</authors>
<title>Text segmentation for chinese spell checking</title>
<date>1999</date>
<journal>Journal of the American Society for Information Science</journal>
<volume>50</volume>
<contexts>
<context>ation Schemes Figure 1: Typical Chinese input system (by Google), character selection Figure 2: Typical Chinese input system (by Google), word selection is easy for a user to make an incorrect choice(Lee et al., 1999), or to deliberately choose characters that sound close to the intended word, but have very different meaning. It is this kind of anomalous usage that we would like to detect automatically. 2. Word A</context>
</contexts>
<marker>Lee, Ng, Lu, 1999</marker>
<rawString>Kin Hong Lee, Mau Kit Michael Ng, and Qin Lu. 1999. Text segmentation for chinese spell checking. Journal of the American Society for Information Science, 50(9):751–759.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yiping Li</author>
<author>Gregory Grefenstette</author>
</authors>
<title>Translating chinese romanized name into chinese idiographic characters via corpus and web validation</title>
<date>2005</date>
<booktitle>In Proceedings of CORIA 2005</booktitle>
<location>Grenoble, France</location>
<contexts>
<context>bered that as well as a single Pinyin corresponding to many characters, it is also true that a single character can have multiple Pinyins, depending upon context and thus semantics(Qiao et al., 1990)(Li and Grefenstette, 2005). The simplest way of entering Pinyin and producing characters is sequential: a user types Pinyin syllables and selects the appropriate character after the completion of each syllable. For example, i</context>
</contexts>
<marker>Li, Grefenstette, 2005</marker>
<rawString>Yiping Li and Gregory Grefenstette. 2005. Translating chinese romanized name into chinese idiographic characters via corpus and web validation. In Proceedings of CORIA 2005, Grenoble, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jinan Qiao</author>
<author>Yizheng Qiao</author>
<author>Sanzheng Qiao</author>
</authors>
<title>Sixdigit coding method</title>
<date>1990</date>
<journal>Commun. ACM</journal>
<volume>33</volume>
<contexts>
<context> it should be remembered that as well as a single Pinyin corresponding to many characters, it is also true that a single character can have multiple Pinyins, depending upon context and thus semantics(Qiao et al., 1990)(Li and Grefenstette, 2005). The simplest way of entering Pinyin and producing characters is sequential: a user types Pinyin syllables and selects the appropriate character after the completion of ea</context>
</contexts>
<marker>Qiao, Qiao, Qiao, 1990</marker>
<rawString>Jinan Qiao, Yizheng Qiao, and Sanzheng Qiao. 1990. Sixdigit coding method. Commun. ACM, 33(5):491–494.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chen Yuan</author>
</authors>
<title>Chinese Language Processing. Shang Hai education publishing company</title>
<date>1997</date>
<contexts>
<context> considered) characters long. To type Chinese into a computer, one needs to ”translate” each character or word to a Romanised representation. The most popular method to do this is by using the Pinyin(Yuan, 1997). Every Chinese character has an associated Pinyin sequence: however, it should be remembered that as well as a single Pinyin corresponding to many characters, it is also true that a single character</context>
</contexts>
<marker>Yuan, 1997</marker>
<rawString>Chen Yuan. 1997. Chinese Language Processing. Shang Hai education publishing company.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lei Zhang</author>
<author>Changning Huang</author>
<author>Ming Zhou</author>
<author>Haihua Pan</author>
</authors>
<title>Automatic detecting/correcting errors in chinese text by an approximate word-matching algorithm</title>
<date>2000</date>
<booktitle>In ACL’00: Proceedings of the 38th Annual Meeting on Association for Computational Linguistics</booktitle>
<pages>248--254</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics</institution>
<location>Morristown, NJ, USA</location>
<contexts>
<context>kers can identify that ”�??” is a non-word with little effort, but it is not possible for a computer to determine that it is a non-word error (rather than three single-character words). Zhang et al. (Zhang et al., 2000a) proposed an approximate word matching algorithm and complex word substitution method to detect and correct Chinese word errors. They suggest that Chinese text errors should be categorised as non-wo</context>
<context> position in the target sentence, and find all the sub-strings with varying length. the position with different length 1,2,3,. . . from a specific position in the target sentence. Another attempt by (Zhang et al., 2000b) claimed that most Chinese word correction techniques performed poorly because they adopted a rather na¨ıve language model that only considered character or word n-grams, they claimed that these mod</context>
</contexts>
<marker>Zhang, Huang, Zhou, Pan, 2000</marker>
<rawString>Lei Zhang, Changning Huang, Ming Zhou, and Haihua Pan. 2000a. Automatic detecting/correcting errors in chinese text by an approximate word-matching algorithm. In ACL’00: Proceedings of the 38th Annual Meeting on Association for Computational Linguistics, pages 248–254, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lei Zhang</author>
<author>Ming Zhou</author>
<author>Changning Huang</author>
</authors>
<title>Approach in automatic detection and correction of errors in chinese text based on feature and learning. In The ThirdChineseWorldCongressonIntelligentControland Intelligent Automation (In Chinese</title>
<date>2000</date>
<pages>2744--2748</pages>
<contexts>
<context>kers can identify that ”�??” is a non-word with little effort, but it is not possible for a computer to determine that it is a non-word error (rather than three single-character words). Zhang et al. (Zhang et al., 2000a) proposed an approximate word matching algorithm and complex word substitution method to detect and correct Chinese word errors. They suggest that Chinese text errors should be categorised as non-wo</context>
<context> position in the target sentence, and find all the sub-strings with varying length. the position with different length 1,2,3,. . . from a specific position in the target sentence. Another attempt by (Zhang et al., 2000b) claimed that most Chinese word correction techniques performed poorly because they adopted a rather na¨ıve language model that only considered character or word n-grams, they claimed that these mod</context>
</contexts>
<marker>Zhang, Zhou, Huang, 2000</marker>
<rawString>Lei Zhang, Ming Zhou, and Changning Huang. 2000b. Approach in automatic detection and correction of errors in chinese text based on feature and learning. In The ThirdChineseWorldCongressonIntelligentControland Intelligent Automation (In Chinese), pages 2744–2748.</rawString>
</citation>
</citationList>
</algorithm>

