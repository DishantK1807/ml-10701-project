Preprtnt No.
6 Classification: TG 2.1 Some formal properties of phonological redundancy rules.
Stephan Braun* i.
Introduction. Redundancy is a well-known phenomenon of phonemes or phonological matrices within the framework of the distinctive-feature theory of JAKOBSON and HALLE Ill Q Redundancy in this theory means that the specification (either + or -) of certain features of a phoneme is predictable given the specifications of certain other features of the same phoneme and/or of neighbouring phonemes of a phoneme sequence.
These restrictions on feature specifications are usually expressed by "redundancy rules".
E.g. in English all nasal phonemes voiced which is expressed by a rule ~+nasal\] --~ are ~voice~, to be read as "each phoneme which is specified ~nasaq must also be specified E+voice~ ".
Among the redundancy rules usually two main types are distinguishech Those like the one just mentioned which express a restriction valid for each phoneme of a language, independent of possible neighbouring phonemes, will be called "phoneme-structure rules" (P-rules) in this paper.
Besides them, there are rules expressing restrictions on the admissible phoneme sequences of the language, e.g.
English no ~+consonanta~ segment can follow a in morpheme-initial nasal; they will be called (as usual) "morpheme-structure rules" (M-rules).
In the paper of STANLEY ~2\] the former are called segment structure rules and the latter sequence structure rules.
The aim of the present paper is to investigate the properties of phonoiogical redundancy rules on a mathe8 MUnchen 2 Arcisstrasse 21 Technische Hochschule West-Germany matical basis.
Some of the problems arising in connection with redundancy rules in phonology have been mentioned already in the work of HALLE ~3\] where they are treated essentially on a linguistically intuitive basis.
The paper of UNGEHEUER r#\] on the mathematical properties of the distinctive feature system (using Boolean algebra by virtue of the fact that every feature can have exactly two specifications) mentions redundancy without going, however, into details.
A very thorough and comprehensive treatment of the subject is given in the already mentioned paper of STANLEY where a formal way of arguing is used though no mathematical proofs are given.
At any rate, STA~EY's results show that a formalized treatment of phonological redundancy is sensible.
Most recently, redundancy rules have been discussed in the work of CHOMSKY and HALLE ~5\] The results of the present paper essentially confirm as far as the questions are the same the results of STANLEY being, however, somewhat more precise than his.
The main result is that the complete set of P-rules for a set of fully specified phonemes can be derived from the prime implicants of a certain Boolean function and thus computed without recurrence to linguistic intuition, given only the set of phonemes.
Algorithms for this task can be found in the mathematical literature (e.g.
MoCLUSKEY ~6\] )).,This formulation then also allows in a simple way to test intuitively found P-rules for compatibility with a given set of phonemes.
No hierarchy of the features need be assumed for this.
Moreover, it is shown that phoneme sequences can be treated formally like single phonemes (with a higher number of features); thus all results for single phonemes hold for phoneme sequences as well, and Mrules are not essentially different from P-rules.
Furthermoret some ideas are given how to compute from a set of P-rules another set of rules which generate just the non-redundantly specified matrices, i.e. the lexicon; these rules are called "lexicon rules" (Lrules).
Finally, two questions connected with the introduction into phonological matrices of blanks for redundant specifications are discussed, viz.
"When do different matrices remain distinct in the technical sense of \[2\], p.#08 after introduction of blanks"? and the position of blanks in matrices uniquely determined by the redundancy rules alone or has an order of application of the rules to be taken into account?".
It is shown that both distinctness and uniqueness are guaranteed if a hierarchy (a total ordering) is introduce~ among the features and if the feature on the right hand side of a rule is required to have higher rank with respect to this hierarchy e.g. usually \[voicedJ is given higher rank than EvocalicJ than any feature on the left hand side of the rule.
Counterexamples show that neither distinctness nor uniqueness necessarily hold if this requirement is not met.
Phoneme-structure rules are discussed in Sec.
2, morpheme-structure rules in Seco3, lexicon rules in Sec.4 and matrices with blanks in Sec.5. 2.
Phoneme-structure rules.
As mentioned in the Introduction a phoneme-structure rule (P-rule) is a statement predicting certain feature specifications of a single phoneme given other feature specifications of this phoneme.
In order to formalize this concept some notational conventions will = B,,.,B a set p be introduced.
Let m ~ 1 "" pJ of fully specified phonemes and ~ = {fl....
'fnl the set of n features and ~ = {+,-J the set of the two possible s~ecifications.
Any phoneme B~ can then be written set of n ordered pairs: B = {~lfl,.O.~Bnfn~ with as a ~iE~ for i=1,...,n.
Every set of m~nordered pairs ~ifi containing each feature only once will be called "phonemic set"; the phonemes of~ are thus special phonemic sets.
This set-theoretic notation for phonemes is almost identical to the usual linguistic n~ation and will be mainly used throughout this paper; the only difference is that no ordering of the features is considered so far.
It turns out that ordering of the features need be introduced only much later; for the time being it would only unnecessarily complicate the proofs.
Another notation for phonemes stems from the observation that there are exactly two specifications for each feature.
The features can, therefore, be conceived of as Boolean variables taking the values true and false and a phoneme B can be written as a conjunction of these variables.
E.g. B = -~~+fl'-f2'+f3~ in set-theoretic notation is replaced by the conjunction B(fl,fy,fs) = flAf--2^f3 (~ is the complement of f taking the value tru_~e if f takes the value false and vice versa) which takes the value tru__~e if and only if fl takes the value tru___~e, f2 takes the value false and f5 takes the value true.
Thus true corresponds to the specification +,false to the specification and B is formed from B by writing instead of +fi and ~ instead of -fi" This corresponfi A dence of B and B evidently is biunique.
The whole set of phonemes is in this notation described by the Boolean function (I) g(fl' 'fn ) V A .Â°o = B(fl,...,fn) (Vdenotes disjunction the logical or) which takes the value tru____~e if and only if at least one of the B(fl,...,f n) takes the value true, i.e. if the B corA responding to B is a phoneme of~ . For the following the complement function ~ of g given by V ^ (2) g(fl,...,fn) = C(fl,...,f n) will be of some importance, g describes the set of those phonemic sets with n features which are not phonemes of ~.
This set which will be denoted by~ is in practice much larger than the set~ since there are 2 n phonemic sets with n features while the number p of phonemes of a natural language is much smaller than 2 n for usual values of n (e.g.
n=12). A prediction for a feature specification of a single phonem e (a P-rule) is, in the set-theoretic notation, a statement of the form (3) {~irl,.O.,~krk~ --~ ~r with,r F, r@r i for i:l,..,k, 0~k~n-l, which is to be read as "if the phonemic set a =~irl,...,~krk ~.J on the left hand side of (5) is a part (a subset) of some phoneme B of~ then the feature *) r is in B necessarily specified as~" . Note that the condition at'B corresponds to STA~EY's "submatrix interpretation of rule application" (cp, E2J,p.413).
Now, in order for (3) to be called a prediction in a sensible sense of this word two obvious requirements must be fulfilled: (i) a must occur in at least one phoneme of (ii) ~ must be uniquely determined by a and r ~or simplicity we add a further requirement (iii) a must be minimal, i.e. there is no phonemic set b~a such that b and r already suffice to uniquely determine the specification of r in B.
Since by (ii) a uniquely predicts~ as specification of r there is no phoneme P~ such that the phoneh = au~r~ (i.e.
a plus the feature r specified mic set as~, written ~ "as set-theoretlc union) **) is a subset of P.
Any phonemic set with n features containing h is, therefore, an element of ~.
A phonemic set h with this property is called im~licant of~ . ~ore specifically, we define the notion of prime implicant of ~ : Definition l A phonemic set h = {~irl, ....
~mrm~ (l~m~n) is called prime implicant of ~ if and only if h ' (a) there is no BE~ such that ~B.
~) The case k:O means "r is specified as ~in each phoneme of~".
**)~= + for ~= and ~ = for ~ = +.
(b) for every proper subset b~h there exists a B~ such that b C B.
Condition (b) of Def.1 expresses a minimality requirement on h which will turn out to be closely related to requirement (iii) above.
The name "prime implicant" for h was chosen because in the Boolean notation of eqs.(1) and (2) the conjunction h corresponding to h is a prime implicant (in the technical sense of the theory of Boolean functions) of the function ~, eq.(2): An implicant of a Boolean function v of n variables is a conjunction q of m~n of these variables such that v is tru____~e whenever q is true; equivalently, if t is any conjunction of the n variables which contains q then t = true implies v = true.
q is a prime implicant of v if it is an implicant of v and if every proper part s of q is not an implicant of v; equivalently, if there is at least one conjunction w of the n variables containing s such that w = tru___~e implies v = false (or V = tru___~e).
By condition (a) of Def.1 P~I~ for every phonemic set P with n features with h~P; in Boolean notation ~ is any n_place conjunction containing h and P~ ~ means P = tru__~e implies ~ = tru___~e.
Thus h is an implicant of ~.
Condition (b) of Def.1 in Boolean notation reads "if ~ then there is a B with bOB such A that B = true implies g = tru___~e (or ~ = fals__~e)".
Thus is a prime implicant of ~.
The remarks following conditions (i) through (iii) together with Def.1 suggest a connection between prime implicants of l~ and P-rules.
This is expressed by Theorem 1 1.
From each prime implicant h = ~lrl,...,~mrm~ of~ 2.
Proof: I.
2. m P-rules Pj = aj --~ ~jrj (j=l,...,m) with aj = h\~jrj~ (iÂ°e.
~j is formed from h by omitting ~r~) can be derived which comply with con itione lil through (iii If P = a--~r (a =~lrl,...,~krk~,kS0) is a P-rule complying with (i) through (iii) then h = au~ = ~lrl'''''~krk '~r~ is a prime implicant of~ . P is derived from h by 1., and h is uniquely determined by P.
Pj evidently has the --fÂ°rm of eq.(3).
Since h is a prime implicant of ~ and ajch there is, by Def.l(b), a Bi~such that aj C B.
Thus, Pj complies with (i)Â° The feature rj omitted in aj is in B necessarily specified as ~j since it must be specified somehow and cannot be specified as OCj because then h~B contrary to Def.l(a).
Thus aj and rj uniquely determine ~j and (ii) is met.
Suppo$6 there is a bcaj such that b and rj already uniquely determine ~j.
Then there is, by Def.l(a), no B~containing c = bU~jrj~ . But this contradicts Def.l(b) since c is a proper part of h.
Thus there is no such b and P complies with (iii), too.
There is no BG~such that h~B.
Pot, otherwise, r is specified as ~ instead of ~ in some phoneme of~ containing a which contradicts (ii).
Thus h is, by Def.l(a), an implicant of ~ . Each proper subset of h is part of a B~: By (i) and (ii) there exists a BE~ such that c = a~r~ is a part of B.
Each proper subset of c is, therefore, also a part of this B.
Each proper subset of h which does not container is a subset of a, thus a proper subset of c, thus a part of B.
Let d = b U ~r~ with boa be a proper subset of h containing ~r.
Suppose there is no B~such that d is a part of B.
Then r is never specified as~ in all those phonemes of~ which contain b (since bCa and (i) there are such phonemes) but always as~.
Thus b~a and r suffice to uniquely determine ~which contradicts (iii) for P.
Therefore, also d is a part of some B~.
Thus h is, by Def.l(b), a prime implicant of~ and, by 1., P is derived from h.
Let h' = ~lSl,...,~s~ a prime implicant of~.
Every P-rule derived from h' has the form P' = aj'-@~js .~ For P to be one of these P' a comparison shows that necessarily a\] = a, y~ = ~ and sj = r.
Then h' = a\]u~jsj~ = au~r} = h; thus h is uniquely determined by P.
According to Theorem 1 every P-rule for~ complying with requirements (i) through (iii) it seems rather obvious that a P-rule should meet these requirements is derived from a corresponding prime implicant of~ o The task of finding all the P-rules for~ is, therefore, equivalent to the task of finding all the prime implicants for ~ or, equivalently, the prime implicants of the Boolean function ~.
This is a wellknown mathematical problem which can be more or less efficiently solved on a computer using e.g. the McCLUSKEY algorithm E6S . (The efficiency of this algorithm depends rather strongly on the number n of features; n must not be too large).
Moreover, this result means that, given only the set ~ of fully specified phonemes, the discovery of P-rules for this set need not depend on linguistic intuition; the complete set of Prules can be computed via the prime implicants of which is, in turn, directly determined bye.
By their connection to the prime implicants of~ the P-rules are divided into equivalence classes: two P-rules will be called equivalent if and only if they are derived from the same prime implicant of~ . By Theorem 1.2 the connection between P-rule and corresponding prime implicant is extremely simple; thus equivalence of P-rules is easily tested by comparing the prime implicants.
Moreover, the compatibility of an intuitively found P-rule with a given set of phonemes can also easily be tested: if a-@Mr is the P-rule then au(~r 3 must be a prime implicant of~ ; in particular, no phoneme of the set may contain au~r) â¢ Conditions (i) through (iii) for P-rules or, equivalently, the requirement that P-rules are to be derived from prime implicants of~ are essentially identical to the "true generalization condition" of STANLEY ( K2S, p.421).
In our set-theoretic notation this condition for a rule a-~r reads ( ~ means logical implication).
By the rules of Boolean algebra this is equivalent to --I(acBA~r~cB) for every B ~ (-I means negation, A means conjunction), i.e. there is no B such that h = a U(~r) CB which by Def.l(a) means I0 that h is implicant of l~ . Note that the true generalization condition is thus not equivalent to h being a prime implicant of ~ ; it does, in other words, not meet the minimality condition (iii).
Because this condition has turned out in the proof of Theorem 1 to be rather convenient it is proposed that (iii) is added to the true generalization condition.
As an example consider the five labial consonants IPl,lbl,/m/,/f/,/v/ of English as given in HA~LE \[7\], see tab.l.
For simplicity only the four features Strid + + has â¢ + â¢ tab.l cont ~ _ ._ _ + + Voiced + + + \[strident\], \[nasal\], \[continuant\] and \[voiced\] are considered and the specifications \[-vocalic 3, \[+consonantal 3, ~grave 3 and \[+diffuse\] common to the five consonants are omitted.
~or this small example the prime implicants of ~ can be computed directly by means of Def.l: Assuming for convenience a fixed order of the features (e.g.
that of tab.l) one has ordered sequences of the specifications + and instead of the sets used so far.
Then for each k in l~k~n=4 all (~1.2 k possible specification sequences of length k are formed and matched with tab.1.
If such a specification sequence does not occur in tab.1 it is an implicant of ~, and it is a prime implicant of~ if it does not contain any shorter implicant already found.
Thus one gets five prime implicants of ~ 11 4) \[+strid, +nasa, {-strid, +cont', {+strid,-cont~, {+nas, +cont I, {+nas,-voic edJ and from them ten P-rules (two for each of the prime implieants) +strid--@ -nas -strid--+ -cont (5) +strid---~ +cont +nas ---@ -cont +nas ~ +voiced +nas ~ -strid +cont ~ +strid -cont ~ -strid +cont ~ -nas -voiced--@ -nas This is the complete set of P-rules for tab.l; any other redundancy rule is not a P-rule for this set.
3. Morpheme-structure rules According to the Introduction morpheme-structure rules (M-rules) are predictions for feature specifications of single phonemes within phoneme sequences.
The only difference between P-rules and M-rules then is that M-rules may (but not must) contain features of more than one phoneme of the sequence (see the example in the Introduction).
It will be shown that M-rules can like P-rules be derived from the prime implicants of a suitable Boolean function.
This is done by formally reducing the case of phoneme sequences to the case of single phonemes.
For sake of simplicity at first only sequences consisting of two phonemes of~ are considered, i.e. sequences BIB 2 with B l~and B 2~1~ . The n features of B 1 are denoted by fl,...,fn as before and the n features f' Of course, fi and f~ denote the of B 2 as f~,..., n " same phonological feature; they are distinguished merely formally to indicate their position in the phonemes of the sequence.
For formal purposes, however, fi and f~ 12 may be considered to be different features, and thus we have two sets ~= (fl''''' I,, fn~ and ~ = {fl'''''fn~ of features.
Uniting ~ and ~l to form the set F(*)= ~l we can conceive of the sequence BIB 2 as a "phoneme of 2 nd degree" B Â¢2)= B 1UB~ with the 2n features of ~cz) where B~ is formed from B 2 by replacing in it fi by fl.
E.g. if ~ ={+fl,+f2~ and B 2 = ~-fl,+f2~ then B~) = {+fl'+f2'-f~ '+f2~ Let~)be the set of all phonemes of 2 nd degree (i.el the set of all admissible phoneme sequences of length two) then 1~ca)is a subset of ~X~ s ( X denotes the set-theoretic product) with~ the original set of phonemes and~ I identical to~ except that fi is replaced everywhere by fl.
If every sequence of two phonemes is admissible (this probably is an only theoretical limiting case) then~)=~Ml~ t.
After this formal reduction of phoneme sequences to phonemes of higher degree it appears natural to assume that the M-rules will be nothing but the P-rules for the higher-order phoneme set, i.e. they are derivable from the prime implioants of~.
This assumption is supported by the following: A natural requirement for M-rules is that they reflect the restrictions on possible phoneme sequences of a language.
In other words, if every sequence of phonemes is admissible then the M-rules should coincide with the P-rules for the set~ . The following theorem shows that this is indeed the case: Theorem 2 Let ~(~)=~X~ Then any implicant of ~) which contains features of both ~ and ~l is not a prime implicant of ~z).
13 Proof: Let T~*)= T UT'.with T = \[~irl,...,~krk \] and T' =\[ ~lS .....,~mSm ~ a phonemic set containing the features ri~ ~ (i=l,...,k) and s\] 6 ~' (j=l,...,m); ~i~,~jE~.
T and T' contain features only from ~ and from ~', respectively.
If neither T nor T' is an implicant of ~c.)then there are elements BC2)and COn)of ~(2J such that T is a subset of Ben)and T' is a subset of C ~).
B Cz) and COn)can be written a5 BCm= BUB', C~Z)= CUC' with B and C from ~, B' and C' from'~ a . Since the features of T are all from ~ and the features of T' are all from ~ T is a subset not only of B Cz) but even of B; likewise, T' is a subset of C'.
Therefore, To2)= TUT' is a subset of the set D c~)= BUC'.
Since B~ and C'~' we have DÂ¢~)E~x~ l, i.e.
Dc~)EI~) by assumption, and thus T L2) is not an implicant of~ Â¢~).
That is, if T cz) is an implicant of~ c~) then necessarily one of its proper subsets T and T' is an imp\]icant of ~(~)which shows that T c,) is not a prime implicant of~C~).
Thus, if every sequence of phonemes is admissible then the prime implicants of ~Â¢*) contain features only from \[ or only from ~i, i.e. they are prime implicants of ~ ; because any prime impliÂ£ant of ~ evidently is a prime implicant of ~Â¢~) the sets of prime implicants of ~ and ~cz) are identical which means that the Mrules for~x~ l coincide with the P'rules of ~ . Prime implicants of ~c*) other than those of ~, in particular such with features from both phonemes of a two-phoneme 14 sequence, consequently occur only if ~c2) is a proper subset ofS~ I, i.e. if not every sequence of phonemes is admissible.
Thus the concept of M-rules as P-rules of a set of phonemes of higher degree is sensible, and Mrules are to be derived from the prime implicants of ~ cz) in exactly the same manner as P-rules are derived from the prime implicants of ~ . Without proof we mention two special cases~ if oH the first or second position of the sequence the whole set ~ (or ~ l,resp).
is possible then all the prime implicants of ~ occur among those of ~c~)~ if on the first or second position only a single phoneme is possible then M-rules with more than one feature contain features only from ~i or ~,respectively.
As an example for M-rules assume that from the five phonemes of tab.~ the three sequences /pf/,/bv/ and /mb/ can be formed.
Denote the features by strid 1,...,voiced~, strid 2,...,voiced 2 for the first and second phoneme of the sequence, resp.
In this set of phoneme pairs the specifications of the features strid l, cont 1 and nas 2 are all fixed as -, and the remaining M-rules are +nas i--~ {+voiced l,-strid 2,-cont 2,+voiced 2~ -nas 1---~ ~+strid 2,+cont 2~ +voiced 1-~ +voiced 2 (6) -voiced l~+strid 2,+cont 2~-voiced 2\] +strid 2 --~ +cont 2 -strid 2 --~ ~-cont 2,+voiced 2~ -cont 2 ~ +voiced 2 where for each of the prime implicants only one rule has been given and for rules with the same left hand side the 15 right hand sides have been combined for abbreviation.
From the preceding it is clear how to extend the definitions given to the case of sequences of more than two phonemes; in order to get the M-rules one has to find the prime implicants of ~Â¢~) with k~3 (k is the length of the sequence), i.e. the prime implicants of a BoJlean function of kn variables.
The practical diffi ~ culty of this task for larger values of k and n should not be underestimated and here probably further research is necessary.
In principle, however, all the M-rules of a language can be computed given only the set of all admissible phoneme sequences of this language (each phoneme being fully specified); furthermore, the M-rules in the literature, e.g. in HALLE E3~, can be thus given tested for compatibility with each other and for conformity with the occurring phoneme sequences.
4. LexicOn rules.
Having computed a set of P-rules (or M-rules) predicting the specifications of certain features the rules can be used to remove these "redundant" specifications from the phonemes.
It is common in linguistic practice to replace redundant specifications by blanks.
In the set-theoretic notation used here complete removal of redundant elements ~r from the phonemes seems to be more adequate.
In this section some ideas will be given t how to generate the remaining "non-redundant" subsets of phonemes, i.e. the lexicon, by a set of new rules called lexicon rules (L-rules).
According to Sec.3 it suffices to consider the case of P-rules.
Let r ~F be a feature and let i6 (7) a 1--@ ~lr,Â°.., a k'~k r be k P-rules specifying r in different environments; no a contains feature r.
Using Boolean notation each ~ (j=l,...,k) corresponding to the set aj is a conjunction of some of the Boolean variables fl,...,fn and each of the P-rules is a logical implication saying that the value of the variable r on the right hand side of the rule has a certain unique value if the left hand side has the value true .The value of r is, therefore, predictable if at least one of the conjunctions aj has the value tru_._~e, i.e. if the Boolean expression (8) a~v~ 2 V ...
V ~k has the value true.
The value of r is, therefore, not predictable (i.e.
the specification of r can be either + or -) if the Boolean expression A (9) ~r = -'~1 A "-' ~2 A ...A -~a~ which is the negation of (8) has the value true.
This makes possible the formulation of a rule (using again set-theoretic notation) (10) a --~ +r r called lexicon rule (L-rule) for ~, to be read as "if a is a subset of some phoneme of ~ then both r a r U {+r~ and a r U ~-r} are subsets of phonemes of~ "~ These L-rules can then be used to generate the nonredundant phonemic sets of~ 9 starting with the empty set ~, by the following prescription: if a phonemic set b occurring in this process of generation contains a r then it is replaced by the two new phonemic sets b u b U -rJ.
I? In order to make this process straightforward some additional conventions are introduced: I.
By the usual submatrix interpretation of rule application L-rule (10) is applicable to b if and only if a r is a subset of b.
To test b for applicability of (l~) it is, therefore, useful to have b already nonredundantly specified in all the features occurring in a in order to avoid having (10) not applicable to b r only because the specification of b in one of these features has not yet been filled in.
The simplest way of th~s ensuring applicability, whenever possible at all, is to introduce an ordering relation ( among the features of ~ such that for f,g ~ either f~g or g4f holds.
Ordering of the features is quite common in phonology though it is usually introduced at an earlier stage than here.
In every prime implicant h of I~ there is, then, one feature f with the highest rank according to this ordering and we can require that from all the P-rules derivable from h only the single rule having f on the right hand side shall be chosen.
Since by Theorem 1.2 h is uniquely determined by each of its 2-rules no generality is lost by this special selection.
In every P-rule aj --~ ~jr of (7) the left hand side then contain~ only features of a rank less than r, and thus also a r in (10) contains only features of a rank less than r.
All the L-rules are then ordered in a nathral way: they are applied in the order of their right hand sides, and the non-redundant specifications are thus filled in "from top to bottom" starting with the lowest-order feature and ending with the highest-order feature.
2. Since any b occurring in the process of generation t8 contains only non-redundant specifications all specifications in a r predictable via the P-rules from other specifications of a r must be removed from a r.
If a r consists of a single specified feature occurring in a P-rule c--~a r then c --~Â±r is also an L-rule.
3. If ~r for some r is always false then the specification of r is always predictable and no L-rule concernA ing r exists; if, on the other hand, a r is always tru___~e or if which is the case e.g. with the lowest-order feature no P-rule concerning r exists then the specification of r is never predictable which is expressed by the L-rule ~--~r â¢ With these additional conventions a set of L-rules is computed by (9) from the iP-rules such that for each L-rule there is at least one phonemic set to which it is applicable.
As an example consider the P-rules for tab.1.
For the order of features as in tab.1 they are given by the first column in eq.(5).
~or the lowest-order feature strid there is the L-rule ~@Â±strid since for this order no P-rule concerning strid exists.
For has there is only the P-rule +strid --~-nas, thus -strid--~Â±nas is an L-rule.
The feature cont is predictable from -strid or from +strid (or from +nas), i.e. it is always predictable and no L-rule concerning oont exists.
The feature voiced occurs only in the P-rL~le +nas-~+voiced, thus --~as--~ +voiced is an L-rule, and since +strid --~-nas is a P-rule we get the additional L-rule +strid--~voiced.
Since all a r consist of only one specified feature no further redundancies have to be 19 removed.
Starting from ~, application of these rules gives tab.2 containing the lexicon forms of the five phonemes (with respect to the four features).
It can be directly verified that tab.2 is filled up by the rules of eq.(5), first column, to give the complete phonemes of tab.1.
For another order of the features one has a different set of P-rules and, consequently, of L-rules.
For the n! different orders of the n features there are n! different sets of L-rules each of which gives a different set of lexicon segments (or lexicon matrices).
Each of these sets is then filled up by the corresponding set of P-rules to give the complete set of fully specified phonemes (or matrices).
strid + nas eont voiced + + + + -tab.2 5.
Matrices with blanks.
5.1. Distinctness.
As noted in Seo.4 P-rules can be used to remove redundant specifications from phonemes: if a --~ ~r is a P-rule and a is a subset of a phoneme B~ then the element ~r is removed from B.
Instead of removing the element ~r from B, thus removing the feature r altog~he~ a common practice in linguistics is to leave the feature r in B but to change its specification into a blank (or zero).
It is stressed very much in the literature (e.g.
~23,p.410) that this blank is not a specification 20 like + or -.
This circumstance has been underlined by introduction of the notion of distinctness of phonemes (or phonemic matrices) see \[2J,p.408.
Two phonemes B and C of ~ are called distinct if and only if there is at least one feature f E~ such that B is in f specified as + and C as (or vice versa); conversely, B and C are said to be not distinct if and only if for every f~ either the specification of f in B is identical to that in C or one of both specifications is blank.
There has been some discussion about this concept of distinctness e.g.
\[2\],p.408 f).
and it has been argued that it (see is not completely sensible; for the present, however, we will accept it as existing and turn to the question "When do phonological matrices remain distinct after the introduction of blanks?".
As before, we consider only the case of single phonemes.
Fully specified phonemes are, of course, distinct but they do not necessarily remain so after the introduction of blanks.
Taking tab.1 and its P-rules, e.g.(5), as an example the three rules +has ~strid,-cont,+voiced~ the right hand sides have been combined for abbreviation applied to /m/ leave the phonemic set ~+nas~ or, using the symbol 0, the set ~strid,+nas,Ocont,Ovoiced~ whereas the two rules +cont --~ ~+strid,-nas~ applied to /f/ leave ~+cont, -voiced} or ~0strid,Onas,+cont,-voiced~ which is not distinct from the result for /m/Â° It is possible, however, to have the phonemes of~ pairwise distinct after the introduction of blanks if (as already in Sec.4) an ordering of the features is introduced and if of all the P-rules derivable from a prime implicant of ~ only the single one with the 2~ feature of highest rank on the right hand side is chosen: Theorem 3 Let the features of ~ be totally ordered by an ordering relation ~ (i.e.
for f,g ~ ~ either f~g or g~! and let rj ~r for all rj occurring within the left hand side a of a P_rule a --~r.
Then the phonemes of are pairwise distinct after introduction of blanks.
Proof: Let B and C be two (fully specified) phonemes of ~, B~0.
Then there is a certain number of features of ~ (at least one) such that B is specified contrary to C in exactly these "distinguishing" features and identical to C in the remaining features.
Let f be that of the distinguishing features with the lowest rank.
Then there is no P-rule a--~f which is applicable to both B and C: by assumption all the features in a are of lower rank than f, thus B and C coincide in all features of a.
Since the rule is assumed to be applicable to both B and C, a is a subset of both B and C, and since B and C differ in f the set a U~f3 is a subset of eith~ B or C, whatever,.
Thus this set is not an implieant of ~ and, therefore! a--~f cannot be a P-rule.
This means that no blank can occur on f in B and C, i.e.
B and C remain distinct even after the introduction of blanks.
Without ordering of the features two phonemes can become not distinct as is shown by the examples above.
Ordering of the features is, however, only sufficient 22 for pairwise distinctness, not necessary, i.e. a set of phonemes with blanks can remain pairwise distinct even without ordering of the features.
For an example take the set ~ +nas--~,strid, -strid--~-cont, +strid-~ +cont, (ll) L+cÂ°nt--~-nas' +nas-~+voiced of P-rules for tab.1.
(One P-rule has been chosen for each of the prime implicants of eq.(4)).
This set is not comDatible with any ordering of the features since it would require nas(strid, strid~ cont and cont~ nas which is impossible.
Applied to tab.1 in the order given in eq.(ll) we get tab.3 with pairwise distinct phonemes.
strid .0 + + nas + .cont 0 0 0 0 tab.3 voiced + 0 + Unfortunately, there does not seem to be a simple and general necessary condition for pairwise distinctness of phonemes with blanks.
5.2. Uniqueness.
The result of tab.3 depends on the order in (ll) of the P-rules.The same P-rules, applied in the order ~ -strid--~-cont, +nas--~-strid, +cont--~ -nas, (12) L+strid--~+cÂ°nt' +nas--~+voiced give tab.4 which is different from tab.3. 23 strid 0 + + has -.+ 0 0 (~ont 0 6 0 0 0 tab.4 voiced Ã· 0 Ã· 11~ ther words, the phonemes with blanks (or, for hlrules, the matrices containing blanks) are not uniquely determined by the P-rules alone but also by the order in which the P-rules are applied to put in blanks.
This situation can be described as follows: Let PI = a--~r with a =~irl,...,~krk~ be a P-rule which is applicable to a phoneme Bg~, i.e. a is a subset of B.
P1 can then be used to put a blank on r in B.
This is, however, impossible if there is already a blank in B on one of the features of a because then a is no longer a subset of B.
This blank on a feature r i of a (l~i@k) can be caused only by a P-rule P2 = b --~ir i which was applied before PI" Thus the position of blanks can and indeed sometimes does, as the examples show depend on the order of application of the P-rules.
This order dependence somewhat complicates the situation and one can look for ways to avoid it.
One way is to give up the submatrix criterion for rule application and to use the non-distinctness criterion instead.
Then, the blank on r i in B would lear@ a not distinct from B, and P1 would remain applicable.
A serious drawback of this solution is, however, that a blank does not tell which of the specifications + and has been removed by it.
Thus, P1 would be applicable also to a phoneme B with a blank on r i which in its full form has 24 specified as~i instead of ~i" Thus the non-d~stinctr i ness criterion alone is useless for rule applieation~ it must be amended by criteria ensuring the correct specification of B on r i.
! There is, however, uniqueness even if we use the submstrix criterion for rule application if the features are, as before, totally ordered and only the special Prules are chosen.
For this case we have~ Theorem Â¢ Let PI = a-~ ~r with a = ~irl,...,~krk~ and P2 = b-'~iri be two P-rules applicable to the same phoneme B~B . Let rj<r and s<r i for each s occurring in b.
Then there is a further P-rule P5 = z--~r applicable to B such that r i does not occur in ~zo Proof: The P-rules PI and \[?2 are derived from the prime implicants ql = a U~r\] and q2 = bulairi~ of~.
Since P1 and P2 are both applicable to B both a and b are subsets of B; this means, in particular, that a and b are identically specified in features common to both.
Thus, a Ub is a phonemic set and a subset of B.
Let c = aX\[~iri~ and let ho=C ubv~r\] ; since f<r for all features f occurring in c or in b!.
h o is a phonemic set~, i\!,.~,,,~ h e is an implieant of 7~ : the feature ~'.j.
r~,.~ .~,,,~ neither in c (by definition) nor in b (single ~ll features of b are of a rank less th;=~n r l\]) ~ t;hu~ r i does not occur in hoo If h o f~:_ C for some phoneme C of ~ -then e!tne.~ ~i~'i ~.~ or ~jr.L@C ~ t erefore, either o o irdoI = or bU~iri~ = q2_~C which is both impossib\].e sLn~e Z5 ql and q2 are implican~s of ~ . If h o is a prime implicant of ~ then we have the P-rule P3 = Zo-'~r with z o = cub ~utting a blank on r, and P3 is applicable to B since (cub)c(a~b) ~B.
If h o is not prime then there is a proper subset h I of h o such that h I is an implioant of ~ . Since each subset of z o is a subset of B necessarily ~r E h l, i.e. h I = ZlU~r I with ZlCS o.
If h I is prime then P3 = Zl--~r is the requiredMP-rule; if not then there is an implicant h 2 of ~ with h 2Ch I and, similar as before, h 2 = z 2 u~r~ with z 2 ~ z 1.
Thus we get a sequence of implicants h~ of with h i = ziU~ ~ and zi~zi_ 1 C Â°..
~z o = bvc.
If one of the h i i s prime then the sequence terminates with the i~-rule P3 = hi-*~r" Since the z i become smaller and smaller the sequence terminates in any case with h = z~and z = ~t~,~,t~, and h is prime since zcz o ~ B and ~r~ Cql and ql is prime, thus there is a C~ such that ~r~CC.
Thus, even if the blank on r in B cannot be put there by P1 because it is "blocked" by P2 there is always P3 which cannot be blocked by P2 and which puts the blank on r in B.
Thus, the position of blanks in the phonemes of ~ is uniquely determined by the P-rules alone independent of the order in which they are applied.
Z6 References ~\] R.JAKOBSON and ~.HALLE: Fundamentals of Language.
Den Haag, 1956.
~23 R.STANLEY: Redundancy Rules in Phonology.
Language 43, 393 (1967).
\[3J M.HALLE: The Sound Pattern of Russian.
's Gravenhage, 1959.
E4\] G.UNGEHEUER: Studia Linguistica XIII, 60 (1959).
\[5\] N.CHOMSKY and M.HALLE: The Sound Pattern of English.
New York, 1968.
\[6\] I.B.PYNE and E.J.McCLUSKEY,Jr.: The Reduction of Redundancy in Solving Prime Implicant Tables.
IRE Trans.
EC-II, 4 (473), Aug.
1962. \[71 M.HALLE: On the Bases of Phonology.
In: J.A.
FODOR and J.J.KATZ (eds.): The Structure of Language, Englewood Cliffs, N.J., 1964.
i: Â¸

