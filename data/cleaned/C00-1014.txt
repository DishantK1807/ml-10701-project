Reusing an ontology to generate numeral classifiers Francis Bond* NTT Communication Science Laboratories 2-4 Hikari-dai, Kyoto 619-0237, JAPAN bond@cslab.kecl.ntt.
co. jp Kyonghee Paik Center for the Study of Language and Information Stanford University, CA 94305-2150, USA kpaik@usa, net Abstract In this paper, we present a solution to the problem of generating Japanese nmneral classifiers using semantic classes from an ontology.
Most nouns must take a numeral classifier when they are quantiffed in languages such as Chinese, Japanese, Korean, Malay and Thai.
In order to select an appropriate classifier, we propose an algorithm which associates classifiers with semantic classes and uses inheritance to list only those classifiers which have to be listed.
It generates sortal classifiers with au accuracy of 81%.
We reuse the ontology provided by Goi-Taikei -a Japanese lexicon, and show that it is a reasonable choice for this task, requiring information to be entered for less than 6% of individual nouns.
1 Introduction
In this paper we consider two questions.
The th'st is: how to generate numeral classifiers such as piece in 2 pieces qfl)aper?
To do this we use a semantic hierarchy originally developed for a different task.
The second is: how far can such a hierarchy be reused?
In English, uncountable nouns cannot be directly modified by numerals, instead the noun nmst be embedded in a noun phrase headed by a classitier.
Knowing when to do this is a language Sl0ecific property.
For example, French deux renseignemerit must be translated as two pieces of information in English.
\] Iu many languages, including most South-East Asian lauguages, Chinese, Japanese and Korean, the majority of nouns are uncountable and nmst be quantified by numeral classifier combinations.
These languages typically have many different classifiers.
There has been some work on the analysis of numeral classifiers in natural language processing, particularly for Japanese (Asahioka et al., 1990; Kamei and Muraki, 1995; Bond et al., * Visiting CSLI, Stanford University (1999-2000).
I Numeral-classilier combinations are shown in bold, the noun phrases they quantify are underlined.
1996; Bond et al., 1998; Yokoyama and Ochiai, 1999), but very little on their generation.
We could only find one paper on generating classifiers in Thai (Sornlertlamvanich et al., 1994).
One immediate application fox the generation of classifiers is machine translation, and we shall take examples flom there, but it is in fact needed fox" the generation of any quantified noun phrase with an uncountable head noun.
The second question we address is: how far can an ontology be reused for a difl%rent task to the one it was originally designed fox.
There are several large ontologies now in use (WordNet (Fellb~mm, 1998); Goi-Taikei (lkehara et al., 1997); Mikrokosrues (Nirenburg, 1989)) and it is impractical to rebuild one fox" every application.
Howevel, there is no guarantee that an ontology built fox one task will be useful for another.
The paper is structured as follows.
In Section 2, we discuss tile properties of numeral classifiers in more detail and suggest an ilnproved algorithm fox" generating them.
Seclion 3 introduces the ontology we have chosen, the Goi-Taikei ontology (ikehara ct al., 1997).
Then we show how to use the ontology to generate classifiers in Section 4.
Finally, we discuss how well it performs in Section 5.
2 Generating
Numeral Classifiers In this section we introduce the properties of numeral classifiers, focusing on Japanese, then give an algorithm to generate classiliers.
Japanesc was chosen because of tile wealth of published data on Japanese classifiers and the availability of a large lexicon with semantic classes marked.
2.1 What
are Numeral Classifiers Japanese is a language where most nouns can not be directly modified by numerals, instead, nouns are modified by a numeral-classifier combinatiou as shown in (1).2 2~Vc use lhe following abbreviations: NOM : nominative; ACC = accusative; AI)N = adnominal; CI.
= classilier; ARGSTR 90 (l) 2-tsfH10 denshimC~ru 2-(:L-ADN emai\[ 2 pieces of emai\] 2 emails In Japanese, numeral classifiers arc a subclass o\[ nouns.
The main properly dislinguishillg them from t)rolotypical nouns is thai lhey cannot sland alone.
Typically they postiix to numerals, forming a quantilter l)hrase.
Japanese also allows them to combine with the quantifier st7 "some" or tile interrogative nani "what" (2).
We will call all such Colnbinations ot' a numeral/quantifier/interrogative with a numeral classifier a numeral-classitier combination.
(2) a.
2-hiki"2 animals" (Numeral) b.
sO-hiki "solne animals" (Quantilier) c.
nan-biki "how Illauy mfimals" (inlcrrogali ve) Classiliers have different l)rOl)erlies del)ending on their use.
There are live ulajor types: serial which classify the kind o1: tile noun phrase tile}, (.\]uanlily (such as -/all "piece"); evenl which arc used to quantify events (such as -kai "lilllC"); meilsllral which ~lre used to measure lhc U.IIIOtlllt Of SOllle property (such its senchi "-cm"), group which refer to a collection of melnbers (such as -inure gloup ), and taxononfic which force (he noun phrase to be inlerpreted as a generic kind (such as -.vim "kind").
We propose the l:ollowing basic struclurc for sortal classiliers (3).
The lexical slructtlre we adopt is an extension ot' Pustejovsky's (1995) generative lexicon, with tile addition of an explicit quantilication relationship (Bond and Paik, 1997).
\[ \[AR(;I x : numeral+ ARGSTR (3) / LD-ARG1 y:,,la.,.qlicrLOUANT Cluant:5f 5.es (x, y) There are two variables in the argument strutlure: the numeral, quantifier or interrogative (represented by numera2+), and the noun phrase being classilied.
Because the noun phrase being classilied can be omitted in context, it is a default argun-lent, one which participales in tile logical expressions in the qualia, but is not necessarily expressed syntactically.
= argunlelll slructurc; AR(; = argument; \[)-AR(; = default m-gumenl, QUANT = quantilication.
Serial classiliers differ from each other in tile restrictions they place on the quantilied variable 7V.
For example tile classilier -nin adds tile restriction y:human.
That is, it can only be used to classify human referents.
Japanese has two number systems: a SineJapanese one based on Chinese for example, ichi "Olle",lli "\[wo",s(lll "lhree", etc., and ~tll alternative nalive-Jal)anesc system, for example, hitotsu "one" fitlalsu "two",milsu "three", etc.
In Japanese tile llalive system only exists for the numbers from one to ten.
Most classitiers combine with the Chinese lorms, howevm; different classiliers select SineJapanese for some numerals, for example, ni-hiki "two-el", and most classifiers undergo some form of sound change (such as -hiki to -biki in (2)).
Wc will not bc concerned wilh these morllhological changes, we refer interested reMers to Backhouse (1993, I 1 g-122) for more discussion.
Numeral classiliers characteristically premodify the noun phrases they quantify, linked by an adhereinal case marker, as in (4); or appear 't\]oating' as adverbial phrases, lypically to before the verb: (5).
The choice between pre-nominal and lloming quanlifters is hu'gcly driven by discourse related considerations (1)owning, 1996).
In this paper we concenlrale on (he semantic contribution of the quantiliers, and ignore tile discourse effects.
(4) 2-isii-no tegami-o yonda 2-CI.-AI)N letter-A:c read I read two letters (5) tcgami-o 2-tsii yonda letter-ACC 2<:L read I read two letters Quantilier phrases can also function as noun l)hrascs on their own, with anaphoric or deictic reference, when what is being quantilied is recoverable from the context.
For example (7) is acceptable if the letters have already been referred to, or arc clearly visible.
(6) \[some background with letters salient\] (7) 2-tsfi-o yonda (Japanese) 2-CI,-ACC read 1 read two letters In the pre-nonlinal construction tile relation between ihe target noun phrase and quantilier is explicit.
For muneral-classilier combinations the 91 quantification can be of the object denoted by the noun phrase itself as in (8); or of a sub-part of it as in (9) (see Bond and Pail (1997) for a fuller discussion).
(8) 3-tsfi-no tegami 3-CL-ADN letter 3 letters (9) 3-mai-no tegami 3-CL-ADN letter a 3 page letter 2.2 An Algorithm to Generate Numeral Classifiers The only published algorithm to generate classifiers is that of Sornlertlamvanich et al.(1994). They propose to generate classifiers in Thai as follows: First create a lexicon with default classifiers listed for as many nouns as possible.
This was done by automatically extracting noun classifier pairs from a sense-tagged corpus, and taking the classifier that appeared most often with each sense of a noun.
3 Then, the most fiequent classifier is listed for each semantic class.
Generation is then simple: if a noun has a default classifier in the lexicon, then use it, otherwise use the default classifier associated with its semantic class.
Unfortunately, no detailed results were given as to the size of the concept hierarchy, the number of nodes in it or the number of nouns for which classifiers were found.
As the generation procedure was not ilnplemented, there was no overall accuracy given for the system.
As a default, Sornlertlamvanich et al.'s algorithm is useful.
However, it does not cover several exceptional cases, so we have refined it further.
The extended algorithm is shown in Figure 1.
Firstly, we have made explicit what to do when a noun is a member of more than one semantic class or of no semantic class.
In the lexicon we used, nouns are, on average, inembers of 2 semantic classes.
Howevm; the semantic classes are ordered so that the most typical use comes first.
For example, usagi "rabbit" is marked as both animal and meat, with animal coming first (Fignre 3).
In this case, we would take the classifier associated 3111 fact, Thai also has a great many group classiliers, much like heM, flock and pack in English.
Therefore each noun has tWO classifiers, a sortal classifier and a group classifier listed.
Japanese does not, so we will not discuss the generation of group classiliers here.
with the first semantic class.
However, in the case of usagi it is not counted with the default classifier for animals -hiki, but with that for birds -wa, this must be listed as an exception.
Secondly, we have added a method for generating classifiers that quantify coordinate noun phrases.
These commonly appear in appositive noun phrases such as ABC-to XYC-no 2-sha "the two companies, ABC and XYZ".
1. For a simple noun phrase (a) If the head noun has a default classifier in the lexicon: use the noun's default classifier (b) Else if it exists, use the defimlt classifier of the head noun's first listed semantic class (the class's default classifier) (c) Else use the residual classifier -tsu 2.
For a coordinate noun phrase generate the classifier for each noun phrase use the most frequent classifier Figure 1: Algorithm to generate numeral classifiers In addition, we investigate to what degree we could use inheritance to remove redundancy from the lexicon, ff a noun's default classifier is the same as the default classifier for its semantic class, then there is no need to list it in the lexicon.
This makes the lexicon smaller and it is easier to add new entries.
Any display of the lexical item (such as for maintenance or if the lexicon is used as a human aid), should automatically generate the classifier from the semantic class.
Alternatively (and equivalently), in a lexicon with multiple inheritance and defaults, the class's default classifier can be added as a defeasible constraint on all lnembers of the semantic class.
3 The
Goi-Taikei Ontology We used tim ontology provided by Goi-Taikei -A Japanese Lexicon (Ikehara et al., 1997).
We choose it because of its rich ontology, its extensive use in many other NLP applications, its wide coverage of Japanese, and tile fact that it is being extended to other numeral classifier languages, such as Malay.
The ontology has several hierarchies of concepts: 92 with both is-a and has-a rehttionshil)s.
2,710 semantic classes (12-level lt'ee structure) for common nouns, 200 chtsses (9-level tree structure) for proper nouns and 108 classes for predicates.
We show the top three levels of the common norm ontology in Figure 2.
Words can be assigned to semantic classes anywhere in the hierarchy.
Not all semantic classes have words assigned to them.
The semantic classes are used in the Jalmnese word semantic dictionary to classify nouns, verbs and adjectives.
The dictionary inchtdes 100,000 common nouns, 70,000 technical terms, 200,000 proper nouns and 30,000 other words: 400,000 words in all.
The semantic classes al'e also used as selectional restrictions on the arguments o1' predicates in a separate predicate dictionary, with around 17,000 entries.
Figure 3 shows an example of one record of the Japanese semantic word dictionary, with the addition of the new I)IFAU1\]I" CLASSIFIFA lield (underlined for elnphasis).
Each record has an index form, pronunciation, a canonical form, part-of-speech and semantic classes.
Each word can have up to five common iloun classes and ten proper noun chtsses, hi the case of usagi "rabbit", there are two common noun classes and no proper noun classes.
4 Maplfing
Classiliers to the Ontology In this section we investigate how l'ar the semantic classes can be used to predict default classiticrs for nouns.
Because most sortal classifiers select for some kind of semantic class, we thought that nouns grouped together under the same senmntic class should share the same classifier.
We associated classifiers with semantic classes by hand.
This took around two weeks.
We found that, while some classes were covered by a single classifier, around 20% required more than one.
For example, 1056:song is counted only by -kyoku "tune", and 989 :waker vehicZe by only by seki "ship", but the class \[961:weapon\] had menlbet's counted by -hen "long thin", -chO "knife", -.fitri "swords", -ki "machines" and more.
We show the most flequeut numeral classifiers in Table 1.
We ended up with 47 classifiers used as semantic classes' default classifiers.
This is in line with the fact that most speakers of Japanese know and use between 30 and 80 sortal classifiers (l)owning, 1996).
Of course, we expect to add more classifters at the noun level.
801 semantic classes turned out not to have classiliers.
This included chtsses with no words associated with them, and those that only contained nouns with referents so abstract we considered them to be uncountable, such as greed, lethargy, etc.
We used the default chtssifiers assigned to the semantic classes to generate defeasible del'aults for the noun entries in the common and technical term dictionaries (172,506 words in all).
We did this in order to look at the distribution of classifiers over words in the lexicon.
In the actual generation this would be done dynamically, after the semantic classes have been disambiguated.
The distributions of classifiers were similar to those of the semantic classes, although there was a higher proportion counted with the residual classilier -tsu, and the classifier for machines -ekti.
This may be an artifact of the 70,000 word technical term dictionary.
As further research, wc would like to calculate the distribution of classi\[iers in some text, althottgh we expect it to depend greatly on the genre.
The mapping we created is not complete because some of the semantic classes have nouns which do not share the same classifiers.
We have to add lnore specific defaults at the noun level.
As well as more specific sortal classifiers, there are cases where a group classifier may be more appropriate.
For example, among the nouns counted with -~zi~ there are entries such as couple, twins and so on which are often counted with -kumi "pair".
In addition, the choice o1' classilier can depend on factors other than just semantic class, for example, hire "people" can be counted by either -nin or -mei, the only difference being that -mei is more polite.
it was difficult to assign default classifiers to the semantic classes that referred to events.
These chtsses mainly include deverbal nouns (e.g.
konomi "liking") and nominal verbs (e.g., benkyO "study").
These can stand for both the action or the result of the action: e.g. kenkyl7 "a study/research".
In these cases, every application we considered would distinguish between event and sortal classification in the input, so it was only necessary to choose a classifier for the result of the action.
5 Evaluation
and Discussion The algorithm was tested oil a 3700 sentence tnaclaine translation test set of Japanese with English translatious, although we only used the JapaneseJ ~The test set is available at www.kecl.ntt.co.jp/ icl/mtg/resources.
93 1 : noun 2 : concrete 3 : 388 : 533 : agent place object i000 : abstract 1001 : 1235 : 2422 : abstract thing event relation Figure 2: Top three levels of the Goi-Taikei Common Noun Ontology ;'CCo;'H -INDEX FORM PRONUNCIATION CANONICAL FORM PAP.T OF SPEECH \])IEFAULT CLASSIFIER SEMANTIC CLASSES ey +)-:~ ( usagi) "5 ~ -~"/usagi/ ~, (usagi) noun ~g~ (-wa) COMMON NOUN 537:beast \] 843 meat/egg\] Figure 3: Japanese Lexical Entry for rabbit "usagi" We only considered sentences with a noun phrase modified by a sortal classifier.
Noun phrases modilied by group classifiers, such as -soku "pair" were not evaluated, as we reasoned that the presence of such a classifier would be marked in the input to the generator.
We also did not consider the anaphoric use of numeral classifiers.
Although there were ninny anaphoric examples, resolving them requires robust anaphor resolution, which is a separate problem.
We estimate that we would achieve the same accuracy with the anaphoric examples if their referents were known, unfortunately the test set did not always include the full context, so we could not identify the referents and test this.
A typical example of anaphoric use is (10).
(1o) shukka-ga ruiseki-de 500-hon-wo shipment-NOM cumulative 500-CL-ACC toppa-shita roached Cumulative shipments reached 500 ?barrels/rolls/logs/...
In total, there were 90 noun phrases modified by a sortal classilier.
Our test of the algoritlml was done by hand, as we have no Japanese generator.
We assumed as input only the fact that a classifier was required, and the semantic classes of the head noun given in the lexicon.
Using only the default classitiers predicted by the senmntic class, we were able to generate 73 (81%) correctly.
A classifier was only judged to be correct if it was exactly the stone as that in the original test set.
This was ahnost double the base line of generating the most common classifter (-nin) for all noun phrases, which would have achieved 41%.
The results, with a breakdown of the errors, are summarized in Table 2.
In this small sample, 6 out of 90 (6.7%) of noun phrases needed to have tim default classifier marked for the nouu.
In fact, there were only 4 different nouns, as two were repeated.
We therefore estinmte that fewer than 6% of nouns will need to have their own default classifier marked.
Had the default classifier for these nouns been marked in the lexicon, our accuracy would have been 88%, the maxinmm achievable for our method.
94 CI.ASSIFIER P, eferents class|lied Semantic Class (2,710) Noun (172,506) No.
% Example No.
% None Uncountable referents 794 29.3 3 : agent 34,548 20.0 -kai (IN) events 703 25.9 1699 :visit 35,050 20.3 -tsu (O) abstract/general objects 565 20.9 2 : concrete 52,921 30.1 -nin (J,,) person 298 11.0 5 :person 8,545 4.9 -ko ({\])iI) concrete objecls 124 4.6 854 : edible fruit 14,380 8.3 -hen (J£) long thin objecls 52 1.9 673 : tree 3,775 2.1 -mai (~) fiat objecls 32 1.2 7 70 : paper 2,807 1.6 -teki (}l',;~J) liquid 21 0.8 652 : tear 1,219 0.7 -dai (¢i't) lnechanic itclnS/furniture 18 0.7 9 62 : machinery 5,087 2.9 -hiki (l;ri) animals 12 0.6 537 :beast 1,361 0.8 Other 38 classifiers 91 3.4 12,813 7.4 Table 1 : Japanese Numeral Classiliers and associated Semantic Classes P, esult % No.
Correctly generated 81% 73 Incorrectly generated 19% 17 Total 100% 90 Breakdown o1' En'ors Noun needs default classilier -6 Target not in lexicon, bad entry 4 ()ther errors 7 Table 2: P, esults of atplying the algorilhm Looking at it from allolher point of view, the Goi-Taikei ontology, although initially designed i'or .lapanese analysis, was also useftfl for generating Japanese numeral chtssifiers.
We consider that it would be equally useful for the same task with Kol'can, or even lhe tmrelaled language Mahty.
We generated the residual classilier -tsu for nouns not in the lexicon, this proved to be a bad choice lbr three unknown words.
If we had a me(hod o1: deducing senlanlic chtsses for tlnknown words wc couM have used it to predict the classiiicr more successfully.
1;or example, kikan-l&vhika "institutional investor ''5 was not in the dictionary, and so we used the senmntic class for lOshika "investor", which was 175 : investor, a sub-type of 5 :person.
Had kikan-toshika "institutional investor" been marked as a subtype of company, or if we had deduced the semantic class from the modifier, then we would have been able to gener5hmlitufional illvcStOl'S are \[inancial institutions tha! invest savin~,s of individuals and non-lina.ncial companies in the financial nmrkets.
ate tho correct classifior -sha.
In ono case, wc felt lho default ordering of the semantic classes should have been reversed: 673:tree was listed before 854 : edible fruit for ringo "apple".
The remaining errors were moro problematic.
There was one cxamplc, 80,O00-nin-amari-no .vl,#nlei "about 80,000 signatures", wlfich could be ueated as rel:ercnt tlansfof: shomei "signature" was being counted wilh the classifier for people.
Another l)ossiblc analysis is that the classilier is the head of a referential noun phrase with deictic/almphoric reference, equivalent to the si,qnaluJws oJ'ahold SO, 000 people.
A COUlJe were quile literary in slylc: for example lOnen-no loshi "10 years (Lit: 10 years of years)", where the loshi "year" lmrt is redundant, and would not normally be used.
in two of the errors the residual classilier was used instead of (he more specific default.
Shhnoio (1997) prc~ dicls flint this will happen in expressions where lhe amotlnl is being emphasized more than what is being counted.
Intuitively, lifts applied in both cases, but we were ul\]able to identify any features we could exploit 1o make this judgment autolnatically.
A more adwmced semantic analysis may be able lo dynamically delermine the appropriate semantic class for cases of rel'ercnt transfer, unknown words, or words whose semantic class can be restricted by context Our algorithm, which ideally generates the classifier from this dynamically determined semantic class allows us to generate the correct classilier in context, whereas using a default listed for a noun does not.
This was our original mot|wit|on 1'oi" generating chtssitiers 1¥o111 seman(ic classes, rather than using a classifier lis(ed wilh each noun as Sornlert95 lamvanich et al.(1994) do.
In this paper we have concentrated on solving the problem of generating appropriate Japanese numeral classifiers using an ontology.
11\] future work, we would like to investigate in more detail the conditions under which a classifier needs to be generate& 6 Conclusion In this paper, we presented an algorithm to generate Japanese numeral classifiers.
It was shown to select the correct sortal classifier 81% of the time.
The algorithm uses the ontology provided by Goi-Taikei, a Japanese lexicon, and shows how accurately semantic classes can predict numeral classifiers for the nouns they subsume.
We also show how we can improve the accuracy and efficiency ftmher through solving other natural language processing problems, in particular, referent transfer, anaphor resolution and word sense disambiguation.
Acknowledgments The authors thank Kentaro Ogura, Timothy Baldwin, Virach Sornlertlamvanich and the anonymous reviewers for their helpful comments.

